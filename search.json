[{"path":[]},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team clyde@duke.edu. project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to bark development","title":"Contributing to bark development","text":"goal guide help contribute bark. guide divided three main pieces: Filing bug report feature request issue Github. Suggesting change via pull request. Coding Style Guide Contributions bark","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"feature-requests","dir":"","previous_headings":"Issues","what":"Feature Requests","title":"Contributing to bark development","text":"wish easily extract additional information bark objects ? like see new functionality available bark? , feel free fill feature request! Please describe much detail like added. can anything just idea code advanced user!","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"bug-reports","dir":"","previous_headings":"Issues","what":"Bug Reports","title":"Contributing to bark development","text":"filing bug report issue, important thing include minimal reproducible example can quickly verify problem, figure fix . three things need include make example reproducible: required packages, data, code. Packages loaded top script, ’s easy see ones example needs. easiest way include data use dput() generate R code recreate . example, recreate mtcars dataset R, ’d perform following steps: Run dput(mtcars) R Copy output reproducible script, type mtcars <- paste. even better can create data.frame() just handful rows columns still illustrates problem. Spend little bit time ensuring code easy others read: make sure ’ve used spaces variable names concise, informative (OK using “.”, camel case “_” variable names improve readibility. details see Style Guide use comments indicate problem lies best remove everything related problem. shorter code , easier understand. can check actually made reproducible example starting fresh R session pasting script . (Unless ’ve specifically asked , please don’t include output sessionInfo().)","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"other-issues","dir":"","previous_headings":"Issues","what":"Other issues","title":"Contributing to bark development","text":"sure something bug undocumented feature, see possible errors help files documentation use clarification (issue) please file regular issue","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to bark development","text":"contribute change bark, follow steps: Create branch git make changes, ideally using commit -s sign-commits Developer Certificate Origin. Make sure branch passes R CMD check. Push branch github issue pull request (PR). Discuss pull request. Iterate either accept PR decide ’s good fit bark. steps described detail . might feel overwhelming first time get set , gets easier practice. get stuck point, please reach help. ’re familiar git github, please start reading http://r-pkgs..co.nz/git.html Pull requests evaluated following checklist: Motivation. pull request clearly concisely motivates need change. Please describe problem show pull request solves concisely possible. Also include motivation NEWS new release bark comes ’s easy users see ’s changed. Add item top file use markdown formatting. news item end (@yourGithubUsername, #the_issue_number). related changes. submit pull request, please check make sure haven’t accidentally included unrelated changes. make harder see exactly ’s changed, evaluate unexpected side effects. PR corresponds git branch, expect submit multiple changes make sure create multiple branches. multiple changes depend , start first one don’t submit others first one processed. Document ’re adding new parameters new function, ’ll also need document roxygen. Please add short example appropriate function optionally package vignettes. Make sure re-run devtools::document() code submitting. (sure include name authors function!) Testing fixing bug adding new feature, add testthat unit test. seems like lot work don’t worry pull request isn’t perfect. ’s learning process hand help . pull request process, unless ’ve submitted past ’s unlikely pull request accepted . Please don’t submit pull requests change existing behaviour. Instead, think can add new feature minimally invasive way.","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"style-guide-for-contributing-to-bark","dir":"","previous_headings":"","what":"Style Guide for Contributing to bark","title":"Contributing to bark development","text":"consistent style improves readibility code. wed particular style generally draw Google Style Guide well Hadley Wickham’s Style Guide noted . Using package styler enforce styling barked TidyVerse helpful, required. Function Variable names: Use informative names using “.”, camel case, “_” improve readibility, .e. variable.name, VariableName variable_name, rather foo xxx. tend avoid _ historical reasons going back S. Assignment: Use either <- = assignment consistent within contribution. many style guides prefer <- suggest using styler enforce use <-, OK = shorter type! Just consistent within contributed code. Spaces: Include spaces around operators =, +, -, <-,  == etc improve readibility. Put space comman, . : :: never spaces around . Additional spaces newlines fine improve readibilty code (e.g. aligmnent arguments). Comments: Comment code whenever can. Explain clear code. Use # start comment followed space capitalize first letter; short inline comments (comments line code) need two spaces # Curly Braces: opening curly brace never go line, closing curly brace go line. exception short conditional statement shuch else code may fit one line. Indentation: Use 2 spaces rather tabs per level indentation. Indent code inside curly braces. Semi-colons: use semi-colons put one statement line. Line Length: Use 80 characters per line code. RStudio setting display vertical line 80 characters visually assist . Turn going Tools -> Global Options… -> Code -> Display -> Show margin File names R code informative end .R. Use - improve readibility. include spaces file names! Contributing adopted ggplot2’s CONTRIBUTING.md","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"supported-versions","dir":"","previous_headings":"","what":"Supported Versions","title":"Security Policy","text":"Supported security updates.","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"Please submit vulnerability reports Github Issues maintainers address soon possibl","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"expectations","dir":"","previous_headings":"","what":"Expectations","title":"Security Policy","text":"package utilizes C code efficiency allocates/frees memory. package checked memory leaks prior releases CRAN using ASAN/UBSBAN. package distributed via CRAN https://CRAN.R-project.org/package=bark reports additional checks. development version may installed GitHub https://github.com/merliseclyde/bark checked via github actions (users may check current version passing badge installing) Bugs reported via Issue tracker handled soon possible. (See link )","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"assurance","dir":"","previous_headings":"","what":"Assurance","title":"Security Policy","text":"highly unlikely malicious code added package. submissions CRAN require verification via maintainer’s email, protected via two factor authentication. pull requests contributions github verified lead maintainer. Based Code Conduct Contributing Guidelines modifications include unit tests cover additional code blocks.","code":""},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"get latest version {r bark}, install github (needs compilation))","code":"devtools::install_github(\"merliseclyde/bark\") library(bark)"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"illustrate feature selection simple simulated example Friedman bark similar SVM, however allows different kernel smoothing parameters every dimension inputs \\(x\\) well selection inputs allowing kernel smoothing parameters zero. plot shows posterior draws \\(\\lambda\\) simulated data.   posterior distribution \\(\\lambda_1\\) \\(\\lambda_4\\) concentrated zero, leads \\(x_1\\) \\(x_2\\) dropping mean function.","code":"set.seed(42) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) set.seed(42) fit.bark.d <- bark(y ~ ., data = data.frame(traindata),                    testdata= data.frame(testdata),                    classification=FALSE,                     selection = FALSE,                    common_lambdas = FALSE,                    nburn = 100,                    nkeep = 250,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1637.79 set.seed(42) fit.bark.sd <- bark(y ~ ., data=data.frame(traindata),                     testdata = data.frame(testdata),                     classification=FALSE,                      selection = TRUE,                     common_lambdas = FALSE,                     nburn = 100,                     nkeep = 250,                     printevery = 10^10)  mean((fit.bark.sd$yhat.test.mean-testdata$y)^2) #> [1] 1441.64 boxplot(as.data.frame(fit.bark.d$theta.lambda)) boxplot(as.data.frame(fit.bark.sd$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"compare {r bark} two popular methods, {r BART} {r SVM} provide flexible models also non-linear input variables.","code":"bart.available =  require(BART) #> Loading required package: BART #> Loading required package: nlme #> Loading required package: nnet #> Loading required package: survival svm.available  =  require(e1071) #> Loading required package: e1071"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"generate-data","dir":"Articles","previous_headings":"Comparison","what":"Generate data","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"","code":"set.seed(42) n = 500 circle2 = data.frame(sim_circle(n, dim = 2)) train = sample(1:n, size = floor(n/2), rep=FALSE) plot(x.1 ~ x.2, data=circle2, col=y+1) circle2.bark = bark(y ~ ., data=circle2, subset=train,                     testdata = circle2[-train,],                     classification = TRUE,                     selection = TRUE,                     common_lambdas = TRUE,                     nburn = 100,                     nkeep = 250,                     printevery = 10^10) #Classify # mean((circle2.bark$yhat.test.mean > 0) != circle2[-train, \"y\"]) #> [1] 0.016"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"svm","dir":"Articles","previous_headings":"","what":"SVM","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"Compare classification across methods.","code":"if (svm.available) {   circle2.svm = svm(y ~ x.1 + x.2, data=circle2[train,], type=\"C\")   pred.svm = predict(circle2.svm, circle2[-train,])   mean(pred.svm != circle2[-train, \"y\"]) } #> [1] 0.036 if (bart.available) {   circle.bart = pbart(x.train = circle2[train, 1:2],                              y.train =  circle2[train, \"y\"])   pred.bart =   predict(circle.bart, circle2[-train, 1:2])   mean((pred.bart$prob.test.mean > .5) != circle2[-train, \"y\"]) }  #> *****Into main of pbart #> *****Data: #> data:n,p,np: 250, 2, 0 #> y1,yn: 1, 1 #> x1,x[n*p]: 0.205937, -0.132049 #> *****Number of Trees: 50 #> *****Number of Cut Points: 100 ... 100 #> *****burn and ndpost: 100, 1000 #> *****Prior:mybeta,alpha,tau: 2.000000,0.950000,0.212132 #> *****binaryOffset: -0.140835 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,2,0 #> *****nkeeptrain,nkeeptest,nkeeptreedraws: 1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skiptreedraws: 1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 1s #> check counts #> trcnt,tecnt: 1000,0 #> *****In main of C++ for bart prediction #> tc (threadcount): 1 #> number of bart draws: 1000 #> number of trees in bart sum: 50 #> number of x columns: 2 #> from x,np,p: 2, 250 #> ***using serial code #> [1] 0.04 plot(x.1 ~ x.2, data=circle2[-train,], pch = y+15,       col=(1 + (circle2.bark$yhat.test.mean > 0)),      main=\"bark\") if (bart.available) {   plot(x.1 ~ x.2, data=circle2[-train,], pch = y+15,         col= ( 1 + (pred.bart$prob.test.mean > .5)),         main=\"BART\") } if (svm.available) { plot(x.1 ~ x.2, data=circle2[-train,], pch = y+15,       col= as.numeric(pred.svm),       main=\"svm\") }"},{"path":"http://merliseclyde.github.io/bark/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Merlise Clyde. Author, maintainer, thesis advisor.            ORCID=0000-0002-3595-1872 Zhi Ouyang. Author. Robert Wolpert. Contributor, thesis advisor.","code":""},{"path":"http://merliseclyde.github.io/bark/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clyde M, Ouyang Z (2023). bark: Bayesian Additive Regression Kernels. R package version 1.0.5, https://CRAN.R-project.org/package=bark.","code":"@Manual{,   title = {bark: Bayesian Additive Regression Kernels},   author = {Merlise Clyde and Zhi Ouyang},   year = {2023},   note = {R package version 1.0.5},   url = {https://CRAN.R-project.org/package=bark}, }"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"bark-bayesian-additive-regression-kernels","dir":"","previous_headings":"","what":"Bayesian Additive Regression Kernels","title":"Bayesian Additive Regression Kernels","text":"bark package implements estimation Bayesian nonparametric regression model represented sum multivariate Gaussian kernels flexible model capture nonlinearities, interactions feature selection.","code":""},{"path":"http://merliseclyde.github.io/bark/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Additive Regression Kernels","text":"can install released version bark  CRAN : development version GitHub : (verify branch passing R CMD check badge )","code":"install.packages(\"bark\") require(\"devtools\") devtools::install_github(\"merliseclyde/bark\")"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Additive Regression Kernels","text":"bark similar SVM, however allows different kernel smoothing parameters every dimension inputs x well selection inputs allowing kernel smoothing parameters zero. plot shows posterior draws λ simulated data.  posterior distribution λ1 λ4 concentrated near zero, leads x1 x2 dropping mean function.","code":"library(bark) set.seed(42) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) fit.bark.d <- bark(y ~ .,                      data=data.frame(traindata),                     testdata = data.frame(testdata),                    classification=FALSE,                     selection = TRUE,                    common_lambdas = FALSE,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1738.992 boxplot(as.data.frame(fit.bark.d$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"roadmap-for-future-enhancements","dir":"","previous_headings":"","what":"Roadmap for Future Enhancements","title":"Bayesian Additive Regression Kernels","text":"next year following enhancements planned: port R code C/C++ improvements speed add S3 methods predict, summary, plot add additional kernels better hyperparameter specification features like see added, please feel free create issue GitHub can discuss!","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"x.train Explanatory variables training (sample) data. Must matrix doubles, (usual) rows corresponding observations columns variables. y.train Dependent variable training (sample) data. y numeric continuous response model fit (normal errors). y logical (just values 0 1), binary response model probit link fit. x.test Explanatory variables test (sample) data. structure x.train. type BARK type, e, d, se, sd, default choice se.e: BARK equal weights.d: BARK different weights.se: BARK selection equal weights.sd: BARK selection different weights. classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"bark returns list, including: fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters etc. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"","code":"# Simulate regression example #  Friedman 2 data set, 200 noisy training, 1000 noise free testing #  Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) #  Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) # example with a very small number of iterations to illustrate the method fit.bark.d <- bark_mat(traindata$x, traindata$y, testdata$x,                   nburn=10, nkeep=10, keepevery=10,                   classification=FALSE, type=\"d\") #> [1] \"Starting BARK-d for this regression problem\" boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 31997.32 # \\donttest{  # Simulate classification example  #  Circle 5 with 2 signals and three noisy dimensions  #  Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  #  Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark_mat(traindata$x, traindata$y, testdata$x, classification=TRUE, type=\"se\") #> [1] \"Starting BARK-se for this classification problem\" #> [1] \"burning iteration 1000, J=7, max(nj)=1\" #> [1] \"burning iteration 2000, J=7, max(nj)=2\" #> [1] \"burning iteration 3000, J=11, max(nj)=2\" #> [1] \"burning iteration 4000, J=9, max(nj)=2\" #> [1] \"burning iteration 5000, J=10, max(nj)=1\" #> [1] \"burning iteration 6000, J=12, max(nj)=1\" #> [1] \"burning iteration 7000, J=9, max(nj)=2\" #> [1] \"burning iteration 8000, J=8, max(nj)=1\" #> [1] \"burning iteration 9000, J=8, max(nj)=1\" #> [1] \"burning iteration 10000, J=6, max(nj)=1\" #> [1] \"posterior mcmc iteration 1000, J=7, max(nj)=2\" #> [1] \"posterior mcmc iteration 2000, J=9, max(nj)=1\" #> [1] \"posterior mcmc iteration 3000, J=9, max(nj)=3\" #> [1] \"posterior mcmc iteration 4000, J=9, max(nj)=2\" #> [1] \"posterior mcmc iteration 5000, J=11, max(nj)=2\" #> [1] \"posterior mcmc iteration 6000, J=7, max(nj)=1\" #> [1] \"posterior mcmc iteration 7000, J=5, max(nj)=1\" #> [1] \"posterior mcmc iteration 8000, J=11, max(nj)=2\" #> [1] \"posterior mcmc iteration 9000, J=3, max(nj)=1\" #> [1] \"posterior mcmc iteration 10000, J=3, max(nj)=1\"  boxplot(data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.013 # }"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package bark. — bark-package-deprecated","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"<function>-deprecated\").","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"","code":"bark_mat(   x.train,   y.train,   x.test = matrix(0, 0, 0),   type = \"se\",   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )  sim.Friedman1(n, sd = 1)  sim.Friedman2(n, sd = 125)  sim.Friedman3(n, sd = 0.1)  sim.Circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"List deprecated functions","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"bark-mat","dir":"Reference","previous_headings":"","what":"bark_mat","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"Old version matrix inputs used testing;","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman-","dir":"Reference","previous_headings":"","what":"sim.Friedman1","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman1, use sim_Friedman1.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--1","dir":"Reference","previous_headings":"","what":"sim.Friedman2","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman2, use sim_Friedman2.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--2","dir":"Reference","previous_headings":"","what":"sim.Friedman3","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman3, use sim_Friedman3.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-circle","dir":"Reference","previous_headings":"","what":"sim.Circle","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Circle, use sim_circle.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bark:  Bayesian Additive Regression Trees — bark-package","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"Implementation Bayesian Additive Regression Kernels  Feature Selection  Nonparametric Regression  Gaussian regression  classification binary Probit models","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"BARK Bayesian sum--kernels model Bayesian priors Bayesian Additive Regression Kernel model.  numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link). cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). bark  uses approximated Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions setting values selection (TRUE FALSE), allows scale parameters variables set zero, removing variables kernels selection = TRUE; enables either soft shrinkage hard  shrinkage scale parameters. input common_lambdas (TRUE FALSE) specifies whether common scale parameter used predictors (TRUE) FALSE allows scale parameters differ across variables kernel.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"","code":"# \\donttest{  # Simulate regression example  # Friedman 2 data set, 200 noisy training, 1000 noise free testing  # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600)  # Out of sample MSE in BART (default):    5300 (sd. 1000)  traindata <- sim_Friedman2(200, sd=125)  testdata <- sim_Friedman2(1000, sd=0)  fit.bark.d <- bark(y ~ ., data = data.frame(traindata),                     testdata = data.frame(testdata),                      classification = FALSE,                     selection = FALSE,                     common_lambdas = TRUE)  boxplot(as.data.frame(fit.bark.d$theta.lambda))   mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 4022.796  # Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark(y ~ ., data= data.frame(traindata),                       testdata= data.frame(testdata),                      classification=TRUE,                       selection=TRUE,                      common_lambdas = FALSE)                      boxplot(as.data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.026 # }"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"bark(   formula,   data,   subset,   na.action = na.omit,   testdata = NULL,   selection = TRUE,   common_lambdas = TRUE,   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   verbose = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"formula model formula model predictors, Y ~ X.  X variables centered scaled part model fitting. data data frame.  Factors converted numerical vectors based using `model.matrix`. subset optional vector specifying subset observations used fitting process. na.action function indicates happen data contain NAs. default \"na.omit\". testdata Dataframe test data sample prediction. structure data. selection Logical variable indicating whether variable  dependent kernel parameters \\(\\lambda\\) may set zero MCMC;  default TRUE. common_lambdas Logical variable indicating whether kernel parameters \\(\\lambda\\) predictor specific common across predictors;  default TRUE.   Note  common_lambdas = TRUE  selection = TRUE applies just non-zero \\(lambda_j\\). classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. verbose Logical, whether print messages fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"bark returns object class `bark` list, including: call matched call fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data;  NULL testdata provided yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"##Simulated regression example # Friedman 2 data set, 200 noisy training, 1000 noise free testing # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) # Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- data.frame(sim_Friedman2(200, sd=125)) testdata <- data.frame(sim_Friedman2(1000, sd=0)) # example with a very small number of iterations to illustrate usage fit.bark.d <- bark(y ~ ., data=traindata, testdata= testdata,                    nburn=10, nkeep=10, keepevery=10,                    classification=FALSE,                     common_lambdas = FALSE,                    selection = FALSE) boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 33594.39 # \\donttest{  ##Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark(y ~ .,                       data=data.frame(traindata),                       testdata= data.frame(testdata),                       classification=TRUE,                      nburn=100, nkeep=200, )  boxplot(as.data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.022 # }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"sim.Circle(n, dim=5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"if (FALSE) {   sim.Circle(n=100, dim = 5) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"sim.Friedman1(n, sd=1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"if (FALSE) { sim.Friedman1(100, sd=1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"sim.Friedman2(n, sd=125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"if (FALSE) { sim.Friedman2(100, sd=125) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"sim.Friedman3(n, sd=0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"if (FALSE) { sim.Friedman3(n=100, sd=0.1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim_Friedman1","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(n, sd = 1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(100, sd=1) #> $x #>               [,1]       [,2]       [,3]       [,4]        [,5]        [,6] #>   [1,] 0.892366823 0.76636993 0.65396422 0.99036403 0.080259021 0.552655842 #>   [2,] 0.746594113 0.22763471 0.18828799 0.65304647 0.592990387 0.004018523 #>   [3,] 0.959477642 0.54513647 0.43994360 0.16875301 0.152430968 0.425290731 #>   [4,] 0.885539384 0.09741669 0.36104136 0.24303247 0.876978889 0.512196628 #>   [5,] 0.358969456 0.51114893 0.82675662 0.09633580 0.646028821 0.521860180 #>   [6,] 0.900740322 0.72510736 0.61916581 0.57187152 0.211238150 0.718624856 #>   [7,] 0.081114165 0.33646105 0.55105441 0.24964221 0.983865465 0.573271759 #>   [8,] 0.238195009 0.43021139 0.91431278 0.90286754 0.758675397 0.366356832 #>   [9,] 0.743655031 0.65897704 0.20270084 0.85779594 0.467629226 0.018977179 #>  [10,] 0.556312120 0.56575327 0.92547037 0.08490755 0.505088294 0.528815901 #>  [11,] 0.139871935 0.07185410 0.15700489 0.96175191 0.427483555 0.113157861 #>  [12,] 0.167862052 0.81421442 0.58835348 0.17914372 0.478554536 0.033164412 #>  [13,] 0.172556069 0.89406816 0.80234078 0.21675730 0.424067773 0.269656819 #>  [14,] 0.465541434 0.81113446 0.72959803 0.18862633 0.600713541 0.512689417 #>  [15,] 0.877383288 0.91576851 0.10319109 0.86072000 0.599484714 0.569377143 #>  [16,] 0.100224244 0.03741601 0.94913098 0.68198468 0.429925042 0.034219641 #>  [17,] 0.203814858 0.71111994 0.97432290 0.11340396 0.900879373 0.949438988 #>  [18,] 0.336695085 0.50242627 0.34189502 0.61871219 0.547033334 0.160682294 #>  [19,] 0.900289229 0.71276723 0.79202336 0.71489143 0.731890214 0.689720293 #>  [20,] 0.227465184 0.53267583 0.45031624 0.61786329 0.160632119 0.249484302 #>  [21,] 0.474173927 0.80120189 0.24670235 0.71173348 0.289140739 0.801570432 #>  [22,] 0.336921216 0.87641105 0.20689387 0.32424289 0.081641434 0.986421075 #>  [23,] 0.218331332 0.40673355 0.83514425 0.54441593 0.974512149 0.684138708 #>  [24,] 0.095247461 0.12905273 0.24330133 0.68369083 0.129149133 0.733386861 #>  [25,] 0.209406505 0.30566325 0.38584690 0.58871318 0.677381973 0.075720689 #>  [26,] 0.883204456 0.52260534 0.13975045 0.13258541 0.955126312 0.476673044 #>  [27,] 0.759013201 0.16691013 0.16471316 0.45059357 0.341648805 0.696693327 #>  [28,] 0.157369349 0.01334385 0.54429314 0.88798387 0.716239088 0.684635436 #>  [29,] 0.178216091 0.86781179 0.55228979 0.98858798 0.417314234 0.732289130 #>  [30,] 0.164855677 0.93513268 0.30814620 0.14601517 0.006560945 0.030702830 #>  [31,] 0.622194075 0.76311257 0.25331433 0.69177695 0.365310505 0.895084789 #>  [32,] 0.589106555 0.13295593 0.15787555 0.04148387 0.983181583 0.664977394 #>  [33,] 0.968663898 0.85403724 0.94082909 0.05834518 0.173853807 0.985179232 #>  [34,] 0.009059222 0.51233766 0.15618895 0.94249245 0.384875829 0.732554370 #>  [35,] 0.268341972 0.67223383 0.33722132 0.23483611 0.694974147 0.493474386 #>  [36,] 0.377970787 0.02300761 0.57589264 0.67736954 0.232653016 0.723663866 #>  [37,] 0.234457337 0.42777623 0.58361359 0.78305606 0.725120596 0.210686330 #>  [38,] 0.663837302 0.70963177 0.91471055 0.40069301 0.670651017 0.134365199 #>  [39,] 0.088888546 0.67568470 0.27931078 0.30406124 0.055668531 0.180208950 #>  [40,] 0.314129692 0.18857295 0.87706816 0.09330128 0.919157331 0.918417951 #>  [41,] 0.964839092 0.93323808 0.05323864 0.04804298 0.564574182 0.860141146 #>  [42,] 0.323932077 0.94412892 0.66824377 0.85534727 0.805974478 0.647702291 #>  [43,] 0.181617564 0.50404370 0.38579933 0.86248682 0.054033844 0.521985447 #>  [44,] 0.273885232 0.47491736 0.71832266 0.54618426 0.030308709 0.569211856 #>  [45,] 0.713840957 0.24781405 0.25773618 0.07878572 0.410756160 0.452875339 #>  [46,] 0.485014868 0.45260100 0.18051857 0.61671570 0.791085182 0.319075036 #>  [47,] 0.069222722 0.47097977 0.42590583 0.48634874 0.735339239 0.411985915 #>  [48,] 0.764794138 0.35272866 0.52664841 0.68535564 0.621939295 0.015626817 #>  [49,] 0.182289383 0.37610937 0.84681912 0.82150285 0.035806849 0.352601547 #>  [50,] 0.438152789 0.60509275 0.01826174 0.09565135 0.527102835 0.869432607 #>  [51,] 0.919927885 0.81807937 0.54001782 0.77069871 0.587306177 0.466548638 #>  [52,] 0.510199259 0.51298713 0.41077749 0.97273633 0.005037405 0.189544117 #>  [53,] 0.613495925 0.45053697 0.65138898 0.41934655 0.274520598 0.670677883 #>  [54,] 0.935670853 0.57509474 0.30900487 0.55491219 0.983127118 0.507610275 #>  [55,] 0.646512622 0.41873521 0.19560129 0.29110807 0.194671007 0.054201536 #>  [56,] 0.501913149 0.07484792 0.77271402 0.03522097 0.147088236 0.472024576 #>  [57,] 0.841081524 0.30373514 0.10519316 0.11331571 0.909833950 0.968268691 #>  [58,] 0.565127951 0.27745597 0.93929871 0.98139763 0.627214282 0.766876542 #>  [59,] 0.333266499 0.35932405 0.62755056 0.77888688 0.625946790 0.044105800 #>  [60,] 0.551015442 0.92917162 0.93411273 0.77943797 0.284909168 0.810482414 #>  [61,] 0.321199293 0.89005612 0.60502222 0.01209912 0.105297142 0.034344785 #>  [62,] 0.336940684 0.04692938 0.56653487 0.78485718 0.311051522 0.458172262 #>  [63,] 0.570386916 0.61527601 0.49089967 0.36466653 0.211675934 0.494861899 #>  [64,] 0.528936363 0.04607740 0.46821990 0.17356922 0.860714358 0.979257694 #>  [65,] 0.040307319 0.21276310 0.54361705 0.51109567 0.309025157 0.982687466 #>  [66,] 0.028009739 0.68926138 0.70143063 0.96756285 0.553231591 0.554658552 #>  [67,] 0.326440259 0.76645142 0.40506669 0.46360750 0.701924918 0.712842571 #>  [68,] 0.979802029 0.12667738 0.29219061 0.56023295 0.833422735 0.334895810 #>  [69,] 0.983039356 0.12503558 0.47018989 0.42360985 0.896942335 0.150206888 #>  [70,] 0.001151782 0.48110178 0.99635394 0.29355666 0.436986569 0.275514702 #>  [71,] 0.788270466 0.30776772 0.94896580 0.04538965 0.352856057 0.975036228 #>  [72,] 0.441451112 0.53453957 0.67943361 0.29086803 0.835431468 0.702092126 #>  [73,] 0.252126175 0.44216664 0.76114102 0.79604188 0.249487032 0.564389117 #>  [74,] 0.640439211 0.17059295 0.20527515 0.76717029 0.976262302 0.608261641 #>  [75,] 0.367873060 0.84605945 0.33306711 0.08460291 0.814592019 0.391773234 #>  [76,] 0.967499628 0.13550819 0.92431976 0.28124089 0.391568456 0.733184748 #>  [77,] 0.162555074 0.11080376 0.63413649 0.41187875 0.224839889 0.770052830 #>  [78,] 0.213880914 0.23300797 0.22130550 0.04052441 0.985448443 0.295634240 #>  [79,] 0.365345440 0.57179128 0.07432460 0.79009518 0.173739495 0.265534221 #>  [80,] 0.185503857 0.12598992 0.76391843 0.67760738 0.013046730 0.849354827 #>  [81,] 0.678797107 0.58696604 0.99423202 0.16285025 0.454094799 0.468068388 #>  [82,] 0.401805810 0.45485747 0.24251728 0.68606332 0.752334832 0.972999181 #>  [83,] 0.590808536 0.49071280 0.65937118 0.79969479 0.319139718 0.318180476 #>  [84,] 0.241774396 0.08023166 0.71999048 0.73086347 0.550656377 0.160230737 #>  [85,] 0.607614386 0.84376717 0.04378905 0.92098929 0.540384489 0.837174015 #>  [86,] 0.154346072 0.38636222 0.75530150 0.20978921 0.888544259 0.605904130 #>  [87,] 0.751049685 0.47621501 0.60622194 0.55089140 0.447706754 0.973887386 #>  [88,] 0.500981830 0.92112061 0.03526476 0.19671926 0.757465355 0.618228424 #>  [89,] 0.927636273 0.04469621 0.28936027 0.92739571 0.795830529 0.991394266 #>  [90,] 0.688437629 0.95243024 0.32813541 0.52825337 0.138020116 0.672815232 #>  [91,] 0.105482816 0.73355206 0.52842741 0.57998581 0.817231419 0.092399346 #>  [92,] 0.800973023 0.60437190 0.60440529 0.51281747 0.042331246 0.995049111 #>  [93,] 0.148939617 0.88077679 0.93441024 0.27593756 0.514025592 0.043828864 #>  [94,] 0.626554347 0.97406029 0.74527161 0.33917637 0.466401062 0.796687492 #>  [95,] 0.422546597 0.22836146 0.25499323 0.96785531 0.249002474 0.170943821 #>  [96,] 0.327308891 0.99497441 0.61149169 0.48324551 0.148654167 0.952426495 #>  [97,] 0.218470828 0.16537553 0.46185409 0.78617009 0.834272136 0.857170907 #>  [98,] 0.081593553 0.67990835 0.63562421 0.58657917 0.873354838 0.692086375 #>  [99,] 0.034066465 0.75021204 0.76280832 0.77093794 0.652327927 0.716220518 #> [100,] 0.734961980 0.23172127 0.71327470 0.03096673 0.702303055 0.264766357 #>               [,7]         [,8]       [,9]      [,10] #>   [1,] 0.191440558 0.5726834475 0.64003612 0.35729529 #>   [2,] 0.564617637 0.3363101152 0.25887269 0.55943635 #>   [3,] 0.777121536 0.8954004697 0.40598586 0.25916217 #>   [4,] 0.038954388 0.3755321295 0.98426474 0.51407284 #>   [5,] 0.976548824 0.7307188064 0.97724681 0.05128657 #>   [6,] 0.944257985 0.5667720442 0.81458852 0.04122102 #>   [7,] 0.909604082 0.1838325004 0.28747941 0.92013257 #>   [8,] 0.334552287 0.4072919651 0.90266513 0.74045299 #>   [9,] 0.737644727 0.7878509276 0.29345800 0.85620541 #>  [10,] 0.528487675 0.8515718703 0.47897166 0.55028277 #>  [11,] 0.031230927 0.4424778605 0.96581891 0.41108864 #>  [12,] 0.911517591 0.0568396610 0.93337946 0.74797238 #>  [13,] 0.040660958 0.7881585471 0.76727284 0.56226707 #>  [14,] 0.963821741 0.5282563183 0.79423484 0.04287689 #>  [15,] 0.290734839 0.9338291851 0.94926837 0.54336707 #>  [16,] 0.249503706 0.8017006249 0.58134883 0.99444182 #>  [17,] 0.178562708 0.2974668634 0.72248508 0.03097779 #>  [18,] 0.381420708 0.7005939675 0.35711938 0.21775163 #>  [19,] 0.079244799 0.9258707932 0.88328073 0.85528416 #>  [20,] 0.564675838 0.9429723783 0.21985772 0.23714533 #>  [21,] 0.395320036 0.7157595481 0.35262599 0.68835762 #>  [22,] 0.675721972 0.1905516228 0.54880632 0.84265599 #>  [23,] 0.326137065 0.7109224256 0.11700833 0.12900232 #>  [24,] 0.814775718 0.5549975056 0.48074159 0.32442645 #>  [25,] 0.023589304 0.7778474067 0.12798013 0.69614759 #>  [26,] 0.999621873 0.2299311815 0.59845076 0.47550174 #>  [27,] 0.431666311 0.6027661460 0.44146249 0.64389625 #>  [28,] 0.092964770 0.4661005368 0.15971350 0.83977919 #>  [29,] 0.655272629 0.0568270425 0.99077382 0.37621441 #>  [30,] 0.494711449 0.0977303325 0.12065145 0.22486388 #>  [31,] 0.261527001 0.7711740800 0.61656981 0.80543330 #>  [32,] 0.746750073 0.9098820479 0.65835127 0.94031522 #>  [33,] 0.316234628 0.7975401273 0.96259173 0.76620599 #>  [34,] 0.124506012 0.1442742501 0.52926057 0.96783198 #>  [35,] 0.664234587 0.8590670619 0.09811452 0.30375686 #>  [36,] 0.985617818 0.6726060880 0.28160093 0.36846932 #>  [37,] 0.924188771 0.9139643318 0.29416142 0.67165487 #>  [38,] 0.232686888 0.0606049839 0.15632253 0.02914538 #>  [39,] 0.325039502 0.1797446245 0.40505176 0.64944786 #>  [40,] 0.371672166 0.3786568488 0.63825799 0.73632268 #>  [41,] 0.688952575 0.5584873236 0.16793051 0.98773919 #>  [42,] 0.213955554 0.9945456616 0.76922485 0.76373385 #>  [43,] 0.259124567 0.1393474282 0.93785689 0.67942257 #>  [44,] 0.171897496 0.8569748627 0.51098470 0.83427865 #>  [45,] 0.094195778 0.2883115858 0.18930850 0.39005308 #>  [46,] 0.536448744 0.3477827010 0.37784197 0.29020631 #>  [47,] 0.395274285 0.4212690392 0.57006485 0.43748613 #>  [48,] 0.716455302 0.2001315583 0.60523725 0.39427613 #>  [49,] 0.552852845 0.9746890287 0.82730418 0.97808033 #>  [50,] 0.157426710 0.4823058418 0.68548748 0.05573482 #>  [51,] 0.749098784 0.1482455572 0.30969041 0.23038586 #>  [52,] 0.680420348 0.8996740270 0.25901034 0.59720356 #>  [53,] 0.777504694 0.8637082293 0.13610381 0.49500776 #>  [54,] 0.060363374 0.4521798554 0.48816333 0.05982012 #>  [55,] 0.856877283 0.5308264391 0.39273204 0.66854409 #>  [56,] 0.954206192 0.4084631160 0.40979015 0.15832834 #>  [57,] 0.096573020 0.8768803510 0.89447934 0.92477360 #>  [58,] 0.768616031 0.1117064047 0.65256893 0.44778168 #>  [59,] 0.387069225 0.8067288715 0.61239200 0.16833842 #>  [60,] 0.867293002 0.8910775699 0.47341616 0.94779434 #>  [61,] 0.563657969 0.1636611400 0.76399635 0.07099734 #>  [62,] 0.212643622 0.6507301154 0.71879425 0.99176930 #>  [63,] 0.109130676 0.9704827156 0.97106931 0.53076828 #>  [64,] 0.393350431 0.7450211907 0.97208627 0.46369811 #>  [65,] 0.779975359 0.0947558817 0.99954664 0.83185950 #>  [66,] 0.253269378 0.8374237274 0.98407081 0.40801614 #>  [67,] 0.371435559 0.4594439785 0.94966575 0.98448879 #>  [68,] 0.847945721 0.6335703193 0.36999245 0.41370106 #>  [69,] 0.078054523 0.7504462055 0.67917411 0.70588044 #>  [70,] 0.356589105 0.3933785383 0.16551748 0.92325170 #>  [71,] 0.185250963 0.2246681098 0.11570877 0.23748468 #>  [72,] 0.006430658 0.6051296704 0.30909445 0.30056875 #>  [73,] 0.622414349 0.7881132569 0.84817357 0.17708273 #>  [74,] 0.355225255 0.8758362546 0.04927949 0.13333742 #>  [75,] 0.723909660 0.5229659721 0.41853647 0.68732025 #>  [76,] 0.812570052 0.4465519474 0.14893476 0.59922052 #>  [77,] 0.304785836 0.9552499265 0.61513236 0.23359777 #>  [78,] 0.954340374 0.4467617669 0.53951725 0.78183619 #>  [79,] 0.589708666 0.6436272857 0.25598610 0.60419345 #>  [80,] 0.981673809 0.3071894955 0.59448743 0.15746605 #>  [81,] 0.003149753 0.5897750403 0.36118115 0.80723431 #>  [82,] 0.011215784 0.0003076934 0.11844566 0.86678279 #>  [83,] 0.559215835 0.9321288078 0.08896483 0.17439836 #>  [84,] 0.088536641 0.0356703291 0.22608561 0.91442585 #>  [85,] 0.198602733 0.0633750767 0.40795039 0.28670051 #>  [86,] 0.146138335 0.2395286234 0.30491943 0.83234104 #>  [87,] 0.690645845 0.7299646984 0.56961193 0.05350324 #>  [88,] 0.549515707 0.9392453711 0.78164526 0.85504044 #>  [89,] 0.330899195 0.7010156675 0.26911630 0.27764252 #>  [90,] 0.664465096 0.8823354179 0.59514170 0.03495488 #>  [91,] 0.965099877 0.8184082983 0.64848139 0.61794993 #>  [92,] 0.714856608 0.1161764311 0.08317678 0.91627040 #>  [93,] 0.800667147 0.2768004846 0.87097225 0.40558839 #>  [94,] 0.477098336 0.6743278760 0.99433678 0.89257599 #>  [95,] 0.919196176 0.5410742140 0.74611130 0.92893872 #>  [96,] 0.219891462 0.9014337496 0.84056428 0.92177812 #>  [97,] 0.193690337 0.2994053189 0.33389332 0.65008776 #>  [98,] 0.359123128 0.3021134736 0.76774310 0.01913937 #>  [99,] 0.887258660 0.7662350109 0.43456806 0.82497663 #> [100,] 0.622782381 0.6875680252 0.80375650 0.41165967 #>  #> $y #>   [1] 19.116818 20.320717 13.707803 13.972831 13.892169 18.797228 14.737346 #>   [8] 22.547718 26.234371 16.525225 15.771585 10.940482 13.876355 20.447710 #>  [15] 24.701633 14.244313 18.886577 17.392134 24.748865 11.610053 19.030422 #>  [22] 13.830127 18.252192  8.777949 14.605279 22.247608 11.962598 16.563136 #>  [29] 18.960030  5.769034 21.867880 15.772306 12.936728 16.926589 15.508232 #>  [36] 10.541779 20.654616 24.042129  6.986338 15.120831 12.408525 24.254607 #>  [43] 11.277785 10.204305 11.724650 22.638290 14.973626 21.936282 14.182287 #>  [50] 18.656516 20.720936 15.900007 13.829563 27.399473 14.209967  4.553880 #>  [57] 21.001839 25.556251 18.313581 24.010918  9.111560 12.273736 15.669263 #>  [64] 10.062947  8.733683 16.930819 20.022710 17.399358 16.976017 13.314308 #>  [71] 14.204614 15.836342 15.359610 21.762801 18.149727 15.582387  8.390649 #>  [78] 13.558887 20.458871  8.795050 20.643221 20.235285 20.979532 13.941665 #>  [85] 30.009587 16.103818 18.468650 25.421291 19.272035 16.119704 15.735167 #>  [92] 14.294125 16.452258 19.778465 17.005885 14.878760 17.294489 15.747120 #>  [99] 17.360237 13.400618 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim_Friedman2","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(n, sd = 125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(100, sd=125) #> $x #>              [,1]      [,2]       [,3]      [,4] #>   [1,] 48.9903123  464.6434 0.56970917  5.048281 #>   [2,] 12.9118084  355.5472 0.79425312  2.406860 #>   [3,] 88.1159869  602.4356 0.42057332  7.167807 #>   [4,]  5.9815235  486.0345 0.83349337  4.733077 #>   [5,] 23.8201710 1479.0006 0.39314630  8.831168 #>   [6,] 33.8648998 1566.3413 0.37851977  3.513176 #>   [7,] 37.9048993 1566.6946 0.74045360  2.799373 #>   [8,] 11.8890987 1752.5764 0.53417223 10.415626 #>   [9,] 78.9993534 1107.5670 0.30534357  2.301153 #>  [10,]  9.3743902  156.4456 0.30532233  8.708576 #>  [11,] 28.0016720 1711.5184 0.63963024  8.996446 #>  [12,] 54.8461887 1583.1359 0.64596833  8.247734 #>  [13,]  9.6192153  666.2385 0.26530715  2.515937 #>  [14,] 62.0663692 1215.5041 0.35896632  1.081485 #>  [15,] 12.9182331  964.2840 0.92785692  1.456024 #>  [16,] 75.2574815  478.1611 0.16680719  8.470550 #>  [17,] 90.0863672  874.1028 0.02465727  2.753435 #>  [18,] 28.4472113  577.9400 0.47139028  3.572774 #>  [19,] 24.8260106 1260.3711 0.81030328  8.362641 #>  [20,] 12.1701904  517.8089 0.15027335  5.150372 #>  [21,] 41.6985776  441.2076 0.86339405 10.374396 #>  [22,] 92.2309143 1628.5592 0.06133498  3.212232 #>  [23,]  0.6244663  446.0690 0.56827102  8.980051 #>  [24,] 69.4436765  409.9387 0.06672340  1.595849 #>  [25,] 18.2860435 1173.3380 0.81205865  8.332247 #>  [26,] 48.5690764 1698.7483 0.09819022  6.821074 #>  [27,] 58.6657387  889.3872 0.59693083  4.177093 #>  [28,] 41.8674474  873.0360 0.92016587  2.521209 #>  [29,] 68.7893124 1074.8798 0.37324661  2.633632 #>  [30,] 96.4903917  916.4653 0.60161699  7.163884 #>  [31,] 86.4778709  867.6536 0.94866422  5.075612 #>  [32,]  0.2730476  770.7030 0.18947184  2.249353 #>  [33,] 48.4171345  163.4214 0.47350877 10.288684 #>  [34,] 62.3151345 1646.6983 0.78039774  8.486869 #>  [35,] 66.6080986 1060.2106 0.54852493  8.607341 #>  [36,]  1.0120349  697.0425 0.04284084  9.032559 #>  [37,] 70.7934347  239.9953 0.15390493  8.229443 #>  [38,] 45.0567539 1134.8408 0.95618552 10.827930 #>  [39,] 85.8572196 1670.8564 0.94499424  3.965969 #>  [40,] 64.4331657 1305.3030 0.73517766  7.788681 #>  [41,] 18.0788110 1164.5818 0.07753101  9.039067 #>  [42,] 49.7577853  158.6279 0.54766531  9.627834 #>  [43,] 60.9219070  692.0441 0.72343672  1.156786 #>  [44,]  1.3421117  316.0163 0.31220685  8.194536 #>  [45,] 42.9790094  354.7297 0.05694573  5.726700 #>  [46,] 77.4341148  406.4777 0.39831925  8.809853 #>  [47,] 67.4615548 1662.0854 0.46166460  9.623557 #>  [48,] 22.5487767 1167.5898 0.24642961  4.135716 #>  [49,] 55.9437582 1152.7681 0.57377876  2.865719 #>  [50,] 42.7448689 1571.9202 0.78450009  4.188756 #>  [51,] 29.4957526 1060.1342 0.41695152  7.203977 #>  [52,] 38.3757161 1096.8003 0.09004151  6.465804 #>  [53,] 99.7056543 1315.4190 0.51686491  1.713200 #>  [54,] 14.2961445  951.4877 0.79930850  3.408303 #>  [55,] 33.6105455  590.7079 0.83247119  7.580110 #>  [56,] 40.3006662 1737.6857 0.82055291  1.583245 #>  [57,] 42.3474286  568.1873 0.18885247  8.816781 #>  [58,] 89.2926474 1205.0132 0.33780167  7.043919 #>  [59,] 58.3502811  710.9947 0.05950814  3.442659 #>  [60,] 20.6948075 1157.7906 0.31379845  7.982225 #>  [61,] 91.8200636  949.1256 0.48067128  7.946802 #>  [62,] 80.0794014 1353.0115 0.14081736  8.404983 #>  [63,] 20.9713893  652.0903 0.94423697  7.267147 #>  [64,] 39.4200474  297.0188 0.31119431  8.407947 #>  [65,]  8.2253624  933.7151 0.24298690 10.345458 #>  [66,] 13.8516761 1372.4241 0.47615775 10.509959 #>  [67,] 44.7209383  865.9326 0.87970264  8.473460 #>  [68,] 56.7121689 1203.5305 0.07306141  3.520963 #>  [69,] 78.3331137  195.2498 0.65809048  1.143187 #>  [70,] 33.4311507 1152.7950 0.46744466  6.627773 #>  [71,] 27.7765243  737.3360 0.07450537 10.963502 #>  [72,] 50.2578605  617.9219 0.56437158  7.596402 #>  [73,] 38.5676770 1054.6718 0.74748200  4.798557 #>  [74,] 52.9899189 1341.0412 0.41372714  1.242202 #>  [75,] 87.5170479  386.6377 0.82433862  5.706625 #>  [76,] 28.3697088 1350.6575 0.30358417  3.212227 #>  [77,] 93.3390192  204.5540 0.25554516  3.684758 #>  [78,]  4.8779650 1430.7063 0.88621394  6.384670 #>  [79,] 94.0737549  796.5238 0.48589676  2.137226 #>  [80,] 73.4796678 1574.4103 0.43259724  3.990634 #>  [81,]  4.7336278 1700.4337 0.40991716 10.709632 #>  [82,] 12.9612973  180.0806 0.96557204  6.427024 #>  [83,] 59.1411626  810.1952 0.10957591  2.097330 #>  [84,] 32.6188550 1635.8533 0.30263947  6.506189 #>  [85,] 76.2771859 1546.7034 0.88074570  2.116547 #>  [86,] 65.2760407  539.7694 0.53794635  7.258377 #>  [87,] 26.6052014  723.2560 0.30069653  4.835453 #>  [88,] 63.5686709 1661.9202 0.11422898  7.901895 #>  [89,] 78.9077063  382.5767 0.60245087  1.449139 #>  [90,] 10.5304277 1573.4070 0.37544523  8.674219 #>  [91,] 56.5014238 1177.6581 0.45663840  2.280751 #>  [92,] 61.6605588  219.7307 0.80296472  4.952442 #>  [93,] 55.3762816  747.5853 0.07209382  5.045573 #>  [94,] 28.5985991  514.5542 0.05450691 10.751873 #>  [95,] 59.5252225  370.5158 0.68416191  9.766630 #>  [96,] 44.4686068  995.7372 0.61085169  2.426988 #>  [97,] 39.5065668  358.4400 0.38230823 10.156992 #>  [98,] 28.3634538  238.7704 0.94772484  4.196382 #>  [99,] 60.6043035  140.1422 0.69828547  6.786210 #> [100,] 45.0882101 1433.8641 0.14801966  8.503713 #>  #> $y #>   [1]  223.9255134  292.5781800  287.1805621  367.8106570  673.7434458 #>   [6]  407.1282852 1177.2958783 1096.4240676  433.9930768   87.1242589 #>  [11] 1295.2605333  957.5296960  186.4849789  457.0873307  789.0805800 #>  [16]    1.7668378  191.1508905  222.2574602 1009.6159447  276.5423975 #>  [21]  415.9514971   72.3581828  388.6647971  160.3664804 1094.5984968 #>  [26]  272.7622075  555.6863574  828.1520915  475.5688403  651.8787691 #>  [31]  707.5802567  239.9253920   73.8684783 1312.7579317  377.5819923 #>  [36]  117.3330990   34.2559138 1033.6928310 1759.5388516 1124.5361530 #>  [41]  172.3026065  -25.1800253  431.1704610  -94.8491701  252.0465286 #>  [46]  100.3648399  714.2036736   63.3088227  603.2891179 1113.4214980 #>  [51]  465.4570678   93.5172102  658.7310899  830.2348407  289.4534126 #>  [56] 1353.6289815  155.6665175  422.4392753  184.6726418  325.3101573 #>  [61]  590.7804332  241.6340342  665.0863358   45.5468261  483.0808280 #>  [66]  590.3959583  548.8315551  -30.4705967   -7.6217810  666.5841234 #>  [71]   -0.9251911  289.3556798  700.7570337  166.0653688  613.6711757 #>  [76]  370.4793068   74.6348738 1154.9944556  378.4320539  595.1242780 #>  [81]  734.0228657  314.1332569   91.3469205  340.9012984 1241.2012676 #>  [86]  238.9660268  266.4576871   10.6350850  192.9109547  564.8400709 #>  [91]  583.0731284  148.3904121  166.8296412  204.1042352  247.3072952 #>  [96]  474.5768695  471.3481121  349.6327202   -3.5924365  216.2760088 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim_Friedman3","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n, sd = 0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n=100, sd=0.1) #> $x #>              [,1]      [,2]        [,3]      [,4] #>   [1,] 96.1172704 1092.6706 0.500322120  7.556703 #>   [2,] 46.7041282 1140.3764 0.853192076 10.192853 #>   [3,] 56.1323395  989.0968 0.177676463  2.633269 #>   [4,] 61.4547212  321.8860 0.880508976  1.373245 #>   [5,] 42.8407490  808.7552 0.226371052  6.039118 #>   [6,] 14.7806487  593.8228 0.846150929  9.343421 #>   [7,] 55.1693196  294.2114 0.315294347  1.118420 #>   [8,] 60.9029059 1568.5132 0.610331432  2.592612 #>   [9,]  3.7091362 1582.9431 0.428714210  8.828292 #>  [10,]  8.1012685 1700.7356 0.669236041  5.760835 #>  [11,] 75.9878027 1530.6297 0.309899638  7.971561 #>  [12,] 62.4082208 1634.3336 0.840941642 10.119581 #>  [13,] 70.3028758  223.6700 0.322345491 10.891332 #>  [14,] 82.0636997 1573.1125 0.879947899  7.143178 #>  [15,] 48.3119198  852.7740 0.636575064 10.907283 #>  [16,] 85.1563741  791.5213 0.043189629  1.815056 #>  [17,] 76.5717637  428.5931 0.001038915  5.079120 #>  [18,]  2.5194854  241.0454 0.441835933  2.415274 #>  [19,] 75.3294165  958.6489 0.685514336  1.139407 #>  [20,] 17.4208289 1035.8314 0.010909659  6.044180 #>  [21,] 19.2297095  477.6623 0.851410424  3.031646 #>  [22,] 75.2623856 1368.9753 0.370707345  7.334442 #>  [23,] 11.1082051 1362.4278 0.766518045 10.900794 #>  [24,] 58.4792502  233.8508 0.162596572  8.738634 #>  [25,] 41.5334316 1066.0917 0.052814876  8.414844 #>  [26,] 76.2057563 1311.6380 0.708672045  1.547817 #>  [27,] 54.5323374  147.4640 0.537229288  6.891128 #>  [28,] 84.0763735  720.2838 0.141991629  5.257783 #>  [29,] 10.8408987  836.8951 0.637559667  6.781161 #>  [30,] 98.6981436  134.8234 0.616285282  4.777742 #>  [31,] 39.6572883  720.2349 0.048906033  4.455992 #>  [32,] 19.2756271  453.6137 0.264906521  2.532717 #>  [33,] 99.0090465 1314.1117 0.648257109 10.048462 #>  [34,] 15.9062234 1012.4941 0.244543112  6.214559 #>  [35,] 59.5894152  321.0652 0.952548139  9.347660 #>  [36,] 37.9412158 1061.7532 0.263261453  8.500609 #>  [37,] 62.6316415 1543.0458 0.186282441  3.138592 #>  [38,] 29.2775867 1075.4915 0.906988660  6.480511 #>  [39,] 78.5745376  830.3630 0.552003106  9.058492 #>  [40,] 31.0495944  963.6661 0.978833407  6.529649 #>  [41,] 88.7814119 1596.9791 0.496824801  3.202624 #>  [42,] 29.3783956  698.4704 0.856316932  2.660641 #>  [43,] 52.1385329  147.6658 0.188512711  8.233583 #>  [44,]  9.1990696  312.3434 0.900848985  2.541329 #>  [45,] 72.8911015  980.5838 0.689003237 10.494838 #>  [46,] 99.5895199  777.3049 0.639946691  9.111776 #>  [47,]  6.1342039 1252.7282 0.862646867  4.400334 #>  [48,] 22.5508683  885.9843 0.635498332  3.767040 #>  [49,] 65.6467817  499.6002 0.696095779  8.746874 #>  [50,] 76.8648643  267.6491 0.739420635  3.999630 #>  [51,] 66.2015386 1427.3832 0.390770035  2.027837 #>  [52,] 55.6448958  395.6700 0.884690715  9.155581 #>  [53,] 67.6930659 1028.6739 0.684998323  2.887195 #>  [54,] 26.9419670 1529.8340 0.256491446  3.979285 #>  [55,] 36.4537959 1129.8328 0.005629078  8.669630 #>  [56,] 17.4178377  971.4480 0.880972557  7.852876 #>  [57,] 97.6087958  338.1408 0.393328276  5.926648 #>  [58,] 99.1176831 1343.5679 0.005509628  3.428024 #>  [59,] 58.5028152 1491.6094 0.286778454  6.235958 #>  [60,] 33.4899773 1245.1065 0.662979399  9.886656 #>  [61,] 44.1659468 1043.3253 0.040431464  8.873573 #>  [62,] 78.1175252  901.6185 0.909515965  2.382483 #>  [63,]  3.6455869  233.7116 0.897857466  6.024107 #>  [64,] 68.4422769  233.6940 0.943952963  7.419831 #>  [65,]  8.3949350 1414.1546 0.181693031  9.625222 #>  [66,] 66.0713321 1437.4417 0.147154375  8.148446 #>  [67,] 35.4584892  895.0056 0.333850836  9.985424 #>  [68,] 55.9506726  529.9747 0.589497993  9.396071 #>  [69,] 20.0578254 1128.3206 0.430936876  3.960369 #>  [70,] 82.4787939  591.2923 0.677105759  9.064871 #>  [71,] 23.9205296  787.5458 0.333346619 10.346686 #>  [72,] 38.8909260  782.1734 0.964896943  2.779392 #>  [73,]  0.0851593 1700.2875 0.195052935  3.908258 #>  [74,] 84.0169381  667.9731 0.466525159  8.971513 #>  [75,]  4.4740916  695.8273 0.925852470 10.469186 #>  [76,]  4.4108186  172.4634 0.001582389  1.861245 #>  [77,] 86.7292596 1663.3966 0.223748195  2.088281 #>  [78,] 15.9928914 1281.4889 0.087466327  4.062965 #>  [79,] 34.9324892  944.1014 0.268140843  9.217950 #>  [80,] 44.8146825 1423.5215 0.474322915  9.425986 #>  [81,] 17.0636660  706.7234 0.195474675 10.144472 #>  [82,] 85.2832447 1451.1018 0.880522296  2.968127 #>  [83,] 60.4293833  799.0788 0.863072552  8.310654 #>  [84,] 43.6391860 1284.4560 0.041731775  2.836341 #>  [85,]  0.0425555  599.0390 0.579489239  2.066844 #>  [86,] 79.1427160  389.2053 0.363326697  3.190712 #>  [87,] 12.2575345  590.7353 0.818368357  9.442690 #>  [88,]  8.7272239  215.7429 0.442390832  4.661016 #>  [89,] 84.3862178  468.7825 0.083221081  8.703982 #>  [90,] 39.4811177  427.2932 0.148860000  4.507172 #>  [91,] 19.1452860  741.8131 0.654357587  4.220751 #>  [92,] 45.2783173  755.3048 0.352307579  1.109121 #>  [93,] 21.0424972  911.2136 0.200483886  4.049233 #>  [94,] 10.4195616 1757.5017 0.950860218 10.462826 #>  [95,] 90.5548204 1374.3055 0.408490250  3.212609 #>  [96,] 83.7223147  227.2454 0.035030200  2.881160 #>  [97,] 13.3769406  161.3791 0.059557460  6.719782 #>  [98,] 95.9024603  372.4472 0.550595873  3.338318 #>  [99,]  3.6592355  841.8489 0.518500732  4.627318 #> [100,] 66.7115692 1721.3269 0.910465541  9.555388 #>  #> $y #>   [1]  1.39703624  1.47989958  1.26919976  1.32075001  1.42808844  1.52802153 #>   [7]  1.02757999  1.56219319  1.55135863  1.55074352  1.50400430  1.46962044 #>  [13]  0.81293564  1.36015330  1.50219648  0.32606473 -0.20164395  1.55966110 #>  [19]  1.38042429  0.65554665  1.42250468  1.35630223  1.49554951  0.60935063 #>  [25]  0.89144535  1.54341876  0.76401690  0.94482131  1.45867708  0.68974487 #>  [31]  0.71712321  1.28204399  1.50760636  1.55766751  1.47317990  1.34471087 #>  [37]  1.37071750  1.67033298  1.26033268  1.67063482  1.43279767  1.31802126 #>  [43]  0.31414881  1.46860285  1.50259507  1.34756107  1.64780054  1.53648595 #>  [49]  1.47453078  1.29004113  1.54353641  1.34401331  1.58442563  1.42220441 #>  [55]  0.19198833  1.56402727  1.13280418  0.03435777  1.43351073  1.53736729 #>  [61]  0.85414091  1.44318315  1.51501118  1.14590683  1.49032605  1.46006761 #>  [67]  1.29046035  1.41647924  1.57662153  1.29995419  1.51731155  1.49557761 #>  [73]  1.55920629  1.27965764  1.56165651 -0.00605446  1.36088297  1.55817076 #>  [79]  1.57980482  1.42996460  1.44043468  1.46027072  1.51895432  0.97197756 #>  [85]  1.72690218  1.14951727  1.58473831  1.36383284  0.32043485  1.07141668 #>  [91]  1.52084859  1.35796923  1.49250189  1.62028553  1.49148883 -0.02748757 #>  [97]  0.79425011  1.17898228  1.40841598  1.55032781 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n=100, dim=5) #> $x #>               [,1]        [,2]        [,3]          [,4]         [,5] #>   [1,] -0.45337321 -0.15440273 -0.36002544  0.2965862108  0.379158223 #>   [2,] -0.75432050 -0.23496595 -0.21087363 -0.2354900502  0.512914974 #>   [3,] -0.16320148 -0.72553825  0.96515244 -0.6194817340  0.337259047 #>   [4,] -0.20313187  0.39787434 -0.14479649  0.0286802617  0.342651539 #>   [5,]  0.79098854  0.90671301  0.89286910 -0.3711162526 -0.475230402 #>   [6,]  0.09526981  0.45209425  0.94957917  0.1369540496 -0.144677991 #>   [7,] -0.34787636  0.04741027 -0.89583559 -0.0802801382  0.635960056 #>   [8,] -0.38651389 -0.39099578  0.95520477 -0.4546341891  0.957648429 #>   [9,]  0.11159934  0.56801363 -0.94571212  0.0305866282 -0.054808905 #>  [10,] -0.84088103  0.44768299  0.78082639  0.4302023738 -0.027542224 #>  [11,]  0.15599902  0.92240135  0.91852301 -0.7116278498  0.173516517 #>  [12,] -0.19144462 -0.97108795 -0.18218678 -0.5959345079 -0.812701639 #>  [13,] -0.16629297 -0.43593358  0.54255149 -0.9993222812 -0.796454681 #>  [14,] -0.99546254  0.35908289  0.47038071  0.4381411737 -0.033432959 #>  [15,]  0.46262110 -0.33374895 -0.78632467  0.1946868836  0.494156646 #>  [16,]  0.88727595  0.95478335  0.76123985 -0.9007620169 -0.050229829 #>  [17,]  0.81665468 -0.88829849  0.12012865  0.6195017900  0.401596005 #>  [18,]  0.62332643  0.09530042  0.66001071  0.9333309764  0.630582414 #>  [19,] -0.73789413  0.05012169  0.99259732  0.1103853313  0.086742317 #>  [20,] -0.89522497 -0.05478181  0.97967900 -0.7016754304  0.325005409 #>  [21,]  0.60698285 -0.89401464  0.04448390 -0.4307164685  0.183996286 #>  [22,]  0.40330683  0.20376729 -0.20872624 -0.4854850164  0.635725028 #>  [23,] -0.72486247  0.91361771  0.26641132 -0.6783858240  0.640466545 #>  [24,] -0.88602051 -0.81831825 -0.06792286 -0.7608044120  0.207278097 #>  [25,]  0.61440364  0.55504856  0.15944965 -0.4107811791  0.133160319 #>  [26,]  0.40995382  0.15095569  0.52672645  0.2661542813  0.860638130 #>  [27,]  0.14858411  0.60627155  0.45710144  0.0487562302  0.349180221 #>  [28,] -0.54007368  0.32046097 -0.26118526 -0.3643341856 -0.695924314 #>  [29,] -0.13292037 -0.76455758 -0.59082399 -0.5488472925  0.697173988 #>  [30,]  0.26526455  0.09344026  0.70544924 -0.2597394804  0.167218067 #>  [31,] -0.27687297  0.56667009 -0.51107576  0.0454222211 -0.767915084 #>  [32,]  0.37899886 -0.70413237 -0.95143103 -0.5571308797 -0.592847197 #>  [33,] -0.63310667 -0.18167032  0.14501528 -0.2296891487  0.200808020 #>  [34,]  0.90468780  0.01387299  0.04888805  0.1666247211  0.332389263 #>  [35,]  0.79722436 -0.51696578 -0.18321450  0.1507908260  0.704807657 #>  [36,]  0.62170355  0.94014689 -0.48360551 -0.5368686756 -0.923800398 #>  [37,]  0.36893603 -0.49500872 -0.73411391 -0.7942445911 -0.909460187 #>  [38,]  0.97601533 -0.02801187 -0.27709866  0.0006011664 -0.260618537 #>  [39,] -0.70384831  0.49634307  0.82764166 -0.7970078834  0.441261544 #>  [40,] -0.90276143 -0.03688870  0.44351079  0.0335843959  0.549176718 #>  [41,] -0.35930583 -0.36475570  0.23426619 -0.5686651575 -0.514108508 #>  [42,]  0.57421994  0.54974498 -0.70268396  0.7702704426 -0.079432148 #>  [43,] -0.56789033 -0.06217495  0.77745230  0.5759576783  0.428539509 #>  [44,]  0.03664226 -0.23634400  0.51248718  0.0190110817  0.162831294 #>  [45,]  0.36323511 -0.58088707  0.13862890 -0.3676827261  0.363171799 #>  [46,]  0.35518307 -0.19535766  0.10639891 -0.4073229157  0.088241171 #>  [47,]  0.15689665  0.62398256  0.42565399  0.6844695029 -0.390098744 #>  [48,]  0.48752668 -0.95645346 -0.80854389 -0.9985002186  0.258477600 #>  [49,] -0.57521730 -0.72062148 -0.71189993  0.4726992529 -0.964012460 #>  [50,] -0.88539503 -0.90224405 -0.91799409  0.8085272452 -0.542757651 #>  [51,]  0.07589259  0.95485541 -0.37235941  0.8091940354 -0.076694184 #>  [52,]  0.77462396 -0.00939974  0.92250756 -0.9546828330 -0.030524314 #>  [53,]  0.76022727  0.26097110  0.61852350  0.1396334181  0.655589969 #>  [54,]  0.50148990 -0.31643511 -0.81758719  0.3404514259  0.468602492 #>  [55,]  0.72603690  0.78488582  0.43166432 -0.8801779724  0.514247772 #>  [56,] -0.16981335 -0.34815881 -0.61366663 -0.1532587148  0.434532279 #>  [57,]  0.02385805  0.13308378  0.46071157  0.1783426544  0.485319975 #>  [58,] -0.65278619 -0.19032078  0.32919008 -0.0632894337 -0.618860456 #>  [59,]  0.72412878  0.95598015  0.64131359 -0.8011124325  0.165687948 #>  [60,] -0.70278150 -0.04720645 -0.12711146  0.7085705777  0.608776283 #>  [61,]  0.55607910  0.60624120  0.05215305  0.0045237099 -0.266682438 #>  [62,]  0.18384078  0.07414109  0.96079414 -0.9790292257  0.483946027 #>  [63,] -0.96560780 -0.50500383  0.66894525  0.3242693394  0.057200287 #>  [64,]  0.94099722  0.72491512  0.35217257  0.2373679481  0.746377723 #>  [65,]  0.43340589 -0.10327687  0.44712064 -0.0357593722  0.499159813 #>  [66,]  0.10600398  0.64018711  0.90824622  0.1186515307  0.462256293 #>  [67,]  0.44434146  0.06752408 -0.01306416 -0.6337109506  0.274371781 #>  [68,] -0.40778587  0.53359927  0.67862677  0.4255832452  0.777928038 #>  [69,] -0.87427697  0.18196765 -0.27251047 -0.2269438994 -0.872651574 #>  [70,]  0.67484198 -0.13718799 -0.23732762 -0.8287443835 -0.931787701 #>  [71,]  0.83436015  0.06796591  0.84535042 -0.0546863596 -0.449642210 #>  [72,] -0.05385681  0.52158453 -0.73222420 -0.8872021516  0.120620433 #>  [73,] -0.37991629  0.40078726 -0.03872896 -0.0877896426 -0.089462562 #>  [74,]  0.62848692 -0.95639270 -0.13174584  0.9759464511  0.447836055 #>  [75,] -0.74520080 -0.32983699 -0.81059972  0.2139284974 -0.921622456 #>  [76,]  0.24795419  0.84019120 -0.74878629 -0.8277212610 -0.026088834 #>  [77,]  0.75681356  0.58813746 -0.10751715 -0.8055556682 -0.006010721 #>  [78,] -0.09718239  0.25824891 -0.44160139  0.4645843925 -0.994891685 #>  [79,] -0.53438758 -0.74189357 -0.84285105 -0.6936989906 -0.369179529 #>  [80,] -0.69007507  0.22232992  0.64146809 -0.6105852299 -0.859794447 #>  [81,] -0.18196341  0.67254846  0.74674686 -0.1406930094 -0.155743792 #>  [82,] -0.66178814  0.06327119  0.41280467 -0.5880092820  0.352546920 #>  [83,]  0.07484688  0.73377353 -0.32498555  0.9569837442  0.616602177 #>  [84,] -0.37478203  0.25180419  0.79850678  0.4001889653  0.073217004 #>  [85,] -0.29584172  0.41853441  0.98946593  0.6341814757 -0.733197206 #>  [86,]  0.75612358 -0.71256860 -0.32736340  0.5221771328  0.201462476 #>  [87,] -0.86396451  0.18056278 -0.73761174 -0.2315342580 -0.848354442 #>  [88,]  0.49725372 -0.74450471 -0.23928999  0.7400127612  0.654921120 #>  [89,] -0.33333806 -0.01161714 -0.70503038  0.3560835929  0.086897193 #>  [90,]  0.23588037  0.93192864 -0.63700961  0.2721007289  0.033374227 #>  [91,] -0.10265260 -0.59950622  0.18499510 -0.8863437213  0.741880945 #>  [92,]  0.11103633  0.99696677  0.76955436  0.6161472201  0.819635718 #>  [93,] -0.30424286 -0.60123302 -0.09213235 -0.7254038979 -0.215417898 #>  [94,]  0.78880296 -0.05664779 -0.26472335  0.8603283167  0.537574255 #>  [95,] -0.31853825 -0.24981631  0.68742021  0.0582864098 -0.847632356 #>  [96,]  0.33309272  0.48698617  0.17817454  0.2183894785  0.241813079 #>  [97,]  0.21159356 -0.61542830  0.30655516  0.6983710146  0.219508259 #>  [98,]  0.35633064  0.72558761 -0.65590137  0.7841508868 -0.156109639 #>  [99,] -0.48074649  0.18209403  0.77788993 -0.4599930276 -0.301042203 #> [100,] -0.69430901 -0.14227618 -0.08299870  0.9860050236 -0.341581785 #>  #> $y #>   [1] 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 #>  [38] 0 0 0 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 1 0 1 0 0 1 1 1 1 0 1 0 1 1 0 #>  [75] 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 0 1 0 1 1 1 1 1 0 1 1 #>"},{"path":[]},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-104","dir":"Changelog","previous_headings":"","what":"bark 1.0.4","title":"bark 1.0.4","text":"CRAN release: 2023-04-18 archived 3/31 due unit test failure MKL R-devel gcc skip unit test CRAN test code deprecated shortly.","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-103","dir":"Changelog","previous_headings":"","what":"bark 1.0.3","title":"bark 1.0.3","text":"failed MKL checks","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-103-1","dir":"Changelog","previous_headings":"","what":"bark 1.0.3","title":"bark 1.0.3","text":"failed MKL checks","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-101","dir":"Changelog","previous_headings":"","what":"bark 1.0.1","title":"bark 1.0.1","text":"CRAN release: 2023-03-09","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"minor-changes-1-0-1","dir":"Changelog","previous_headings":"","what":"minor changes","title":"bark 1.0.1","text":"update longer running examples use \\donttest rather \\dontrun add reference DESCRIPTION","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"bark 1.0.0","text":"output bark now bark object allow S3 methods replace input arguments y.train x.train use model formula dataframe inputs. replaced argument type two logical variables: selection common_lambdas intuitive. changed running times examples address issue https://CRAN.R-project.org/package=bark led package archived 2015 added registration native routines foreign function calls disabled symbol search src/bark-init.c updated NAMESPACE replaced kernel calculation using .C .Call improve speed src/kernelCalculationCall.cpp R/llike.R added unit tests testthat code coverage reported CI; code coverage badge added README. Unit tests now cover 99% code reported CodeCov added GitHub actions CI checks Windows, MacOSX, Ubuntu added R CMD check passing Badge README.md GitHub repo. converted help files use roxygen tags deprecated functions sim.Circle, sim.Friedman1, sim.Friedman2, sim.Friedman3 created new versions sim_circle, sim_Friedman1, sim_Friedman2, sim_Friedman3 avoid confusion S3 methods updated CODE_OF_CONDUCT.md, SECURITY.md, CONTRIBUTING.md GitHub repo updates OpenSSF BestPractices Badge (added README.md)","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"bark 1.0.0","text":"GitHub Issue #1 Added type checks src/kernelCalculationCall.cpp coerce inputs correct type (unit tests testthat/test-llike.R) reported GitHub Issue #3 Addressed error p = 1 subsetting resulted output vector due drop dimension. Added unit test testthat/test-bark.R","code":""}]
