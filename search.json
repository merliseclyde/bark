[{"path":[]},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team clyde@duke.edu. project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to bark development","title":"Contributing to bark development","text":"goal guide help contribute bark. guide divided three main pieces: Filing bug report feature request issue Github. Suggesting change via pull request. Coding Style Guide Contributions bark","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"feature-requests","dir":"","previous_headings":"Issues","what":"Feature Requests","title":"Contributing to bark development","text":"wish easily extract additional information bark objects ? like see new functionality available bark? , feel free fill feature request! Please describe much detail like added. can anything just idea code advanced user!","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"bug-reports","dir":"","previous_headings":"Issues","what":"Bug Reports","title":"Contributing to bark development","text":"filing bug report issue, important thing include minimal reproducible example can quickly verify problem, figure fix . three things need include make example reproducible: required packages, data, code. Packages loaded top script, ’s easy see ones example needs. easiest way include data use dput() generate R code recreate . example, recreate mtcars dataset R, ’d perform following steps: Run dput(mtcars) R Copy output reproducible script, type mtcars <- paste. even better can create data.frame() just handful rows columns still illustrates problem. Spend little bit time ensuring code easy others read: make sure ’ve used spaces variable names concise, informative (OK using “.”, camel case “_” variable names improve readibility. details see Style Guide use comments indicate problem lies best remove everything related problem. shorter code , easier understand. can check actually made reproducible example starting fresh R session pasting script . (Unless ’ve specifically asked , please don’t include output sessionInfo().)","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"other-issues","dir":"","previous_headings":"Issues","what":"Other issues","title":"Contributing to bark development","text":"sure something bug undocumented feature, see possible errors help files documentation use clarification (issue) please file regular issue","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to bark development","text":"contribute change bark, follow steps: Create branch git make changes, ideally using commit -s sign-commits Developer Certificate Origin. Make sure branch passes R CMD check. Push branch github issue pull request (PR). Discuss pull request. Iterate either accept PR decide ’s good fit bark. steps described detail . might feel overwhelming first time get set , gets easier practice. get stuck point, please reach help. ’re familiar git github, please start reading http://r-pkgs..co.nz/git.html Pull requests evaluated following checklist: Motivation. pull request clearly concisely motivates need change. Please describe problem show pull request solves concisely possible. Also include motivation NEWS new release bark comes ’s easy users see ’s changed. Add item top file use markdown formatting. news item end (@yourGithubUsername, #the_issue_number). related changes. submit pull request, please check make sure haven’t accidentally included unrelated changes. make harder see exactly ’s changed, evaluate unexpected side effects. PR corresponds git branch, expect submit multiple changes make sure create multiple branches. multiple changes depend , start first one don’t submit others first one processed. Document ’re adding new parameters new function, ’ll also need document roxygen. Please add short example appropriate function optionally package vignettes. Make sure re-run devtools::document() code submitting. (sure include name authors function!) Testing fixing bug adding new feature, add testthat unit test. seems like lot work don’t worry pull request isn’t perfect. ’s learning process hand help . pull request process, unless ’ve submitted past ’s unlikely pull request accepted . Please don’t submit pull requests change existing behaviour. Instead, think can add new feature minimally invasive way.","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"style-guide-for-contributing-to-bark","dir":"","previous_headings":"","what":"Style Guide for Contributing to bark","title":"Contributing to bark development","text":"consistent style improves readibility code. wed particular style generally draw Google Style Guide well Hadley Wickham’s Style Guide noted . Using package styler enforce styling barked TidyVerse helpful, required. Function Variable names: Use informative names using “.”, camel case, “_” improve readibility, .e. variable.name, VariableName variable_name, rather foo xxx. tend avoid _ historical reasons going back S. Assignment: Use either <- = assignment consistent within contribution. many style guides prefer <- suggest using styler enforce use <-, OK = shorter type! Just consistent within contributed code. Spaces: Include spaces around operators =, +, -, <-,  == etc improve readibility. Put space comman, . : :: never spaces around . Additional spaces newlines fine improve readibilty code (e.g. aligmnent arguments). Comments: Comment code whenever can. Explain clear code. Use # start comment followed space capitalize first letter; short inline comments (comments line code) need two spaces # Curly Braces: opening curly brace never go line, closing curly brace go line. exception short conditional statement shuch else code may fit one line. Indentation: Use 2 spaces rather tabs per level indentation. Indent code inside curly braces. Semi-colons: use semi-colons put one statement line. Line Length: Use 80 characters per line code. RStudio setting display vertical line 80 characters visually assist . Turn going Tools -> Global Options… -> Code -> Display -> Show margin File names R code informative end .R. Use - improve readibility. include spaces file names! Contributing adopted ggplot2’s CONTRIBUTING.md","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"supported-versions","dir":"","previous_headings":"","what":"Supported Versions","title":"Security Policy","text":"Supported security updates.","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"Please submit vulnerability reports Github Issues maintainers address soon possibl","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"expectations","dir":"","previous_headings":"","what":"Expectations","title":"Security Policy","text":"package utilizes C code efficiency allocates/frees memory. package checked memory leaks prior releases CRAN using ASAN/UBSBAN. package distributed via CRAN https://CRAN.R-project.org/package=bark reports additional checks. development version may installed GitHub https://github.com/merliseclyde/bark checked via github actions (users may check current version passing badge installing) Bugs reported via Issue tracker handled soon possible. (See link )","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"assurance","dir":"","previous_headings":"","what":"Assurance","title":"Security Policy","text":"highly unlikely malicious code added package. submissions CRAN require verification via maintainer’s email, protected via two factor authentication. pull requests contributions github verified lead maintainer. Based Code Conduct Contributing Guidelines modifications include unit tests cover additional code blocks.","code":""},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"get latest version {r bark}, install github (needs compilation))","code":"devtools::install_github(\"merliseclyde/bark\") library(bark)"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"illustrate feature selection simple simulated example Friedman bark similar SVM, however allows different kernel smoothing parameters every dimension inputs \\(x\\) using option common_lambdas = FALSE well selection inputs allowing kernel smoothing parameters zero using option selection = TRUE. plot shows posterior draws \\(\\lambda\\) simulated data two scenarios allowing different \\(\\lambda_d\\) dimension without selection.   plots \\(\\lambda_j\\) without selection (top) selection (bottom) similar, additional shrinkage values towards zero lead improvement RMSE.","code":"set.seed(42) traindata <- data.frame(sim_Friedman2(200, sd=125)) testdata <- data.frame(sim_Friedman2(1000, sd=0)) set.seed(42) fit.bark.d <- bark(y ~ ., data = traindata,                    testdata= testdata,                    classification=FALSE,                     selection = FALSE,                    common_lambdas = FALSE, #                   fixed = list(eps = .25, gam = 2.5),                    nburn = 100,                    nkeep = 250,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1604.15 set.seed(42) fit.bark.sd <- bark(y ~ ., data=traindata,                     testdata = testdata,                     classification=FALSE,                      selection = TRUE,                     common_lambdas = FALSE,                     fixed = list(eps = .5, gam = 5),                     nburn = 100,                     nkeep = 250,                     printevery = 10^10)  mean((fit.bark.sd$yhat.test.mean-testdata$y)^2) #> [1] 1355.865 boxplot(as.data.frame(fit.bark.d$theta.lambda)) boxplot(as.data.frame(fit.bark.sd$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"compare {r bark} two popular methods, {r BART} {r SVM} provide flexible models also non-linear input variables.","code":"bart.available =  suppressMessages(require(BART)) svm.available  =  suppressMessages(require(e1071)) io.available  =  suppressMessages(require(fdm2id))"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"svm","dir":"Articles","previous_headings":"Comparison","what":"SVM","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"","code":"if (svm.available) {   friedman2.svm = svm(y ~ ., data=traindata, type=\"eps-regression\")   pred.svm = predict(friedman2.svm, testdata)   mean((pred.svm - testdata$y)^2) } #> [1] 6774.121"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"bart","dir":"Articles","previous_headings":"Comparison","what":"BART","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"","code":"if (bart.available) {  y.loc = match(\"y\", colnames(traindata))  friedman2.bart = wbart(x.train = as.matrix(traindata[ , -y.loc]),                          y.train =  traindata$y)   pred.bart =   predict(friedman2.bart,                          as.matrix(testdata[ , -y.loc]))   yhat.bart = apply(pred.bart, 2, mean)   mean((yhat.bart - testdata$y)^2) }  #> *****Into main of wbart #> *****Data: #> data:n,p,np: 200, 4, 0 #> y1,yn: -160.199247, -161.188667 #> x1,x[n*p]: 91.480604, 2.404099 #> *****Number of Trees: 200 #> *****Number of Cut Points: 100 ... 100 #> *****burn and ndpost: 100, 1000 #> *****Prior:beta,alpha,tau,nu,lambda: 2.000000,0.950000,33.129480,3.000000,7744.575956 #> *****sigma: 199.394818 #> *****w (weights): 1.000000 ... 1.000000 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,4,0 #> *****nkeeptrain,nkeeptest,nkeeptestme,nkeeptreedraws: 1000,1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skipteme,skiptreedraws: 1,1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 2s #> check counts #> trcnt,tecnt,temecnt,treedrawscnt: 1000,0,0,1000 #> *****In main of C++ for bart prediction #> tc (threadcount): 1 #> number of bart draws: 1000 #> number of trees in bart sum: 200 #> number of x columns: 4 #> from x,np,p: 4, 1000 #> ***using serial code #> [1] 4605.555"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"classification-example","dir":"Articles","previous_headings":"Comparison","what":"Classification Example","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"data generated first 2 dimensions matter  plot shows posterior draws \\(\\lambda\\) simulated data. ## SVM","code":"set.seed(42) n = 500 circle2 = data.frame(sim_circle(n, dim = 5)) train = sample(1:n, size = floor(n/2), rep=FALSE) plot(x.1 ~ x.2, data=circle2, col=y+1) set.seed(42) circle2.bark = bark(y ~ ., data=circle2, subset=train,                     testdata = circle2[-train,],                     classification = TRUE,                     selection = TRUE,                     common_lambdas = FALSE,                     fixed = list(eps = .5, gam = 5),                     nburn = 100,                     nkeep = 250,                     printevery = 10^10) #Classify # mean((circle2.bark$yhat.test.mean > 0) != circle2[-train, \"y\"]) #> [1] 0.024 boxplot(as.data.frame(circle2.bark$theta.lambda)) if (svm.available) {   circle2.svm = svm(y ~ ., data=circle2[train,], type=\"C\")   pred.svm = predict(circle2.svm, circle2[-train,])   mean(pred.svm != circle2[-train, \"y\"]) } #> [1] 0.104 if (bart.available) {   y.loc = match(\"y\", colnames(circle2))   circle.bart = pbart(x.train = as.matrix(circle2[train, -y.loc]),                              y.train =  circle2[train, y.loc])   pred.bart =   predict(circle.bart, as.matrix(circle2[-train, -y.loc]))   mean((pred.bart$prob.test.mean > .5) != circle2[-train, y.loc]) }  #> *****Into main of pbart #> *****Data: #> data:n,p,np: 250, 5, 0 #> y1,yn: 0, 0 #> x1,x[n*p]: -0.791174, 0.207159 #> *****Number of Trees: 50 #> *****Number of Cut Points: 100 ... 100 #> *****burn and ndpost: 100, 1000 #> *****Prior:mybeta,alpha,tau: 2.000000,0.950000,0.212132 #> *****binaryOffset: -0.030084 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,5,0 #> *****nkeeptrain,nkeeptest,nkeeptreedraws: 1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skiptreedraws: 1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 1s #> check counts #> trcnt,tecnt: 1000,0 #> *****In main of C++ for bart prediction #> tc (threadcount): 1 #> number of bart draws: 1000 #> number of trees in bart sum: 50 #> number of x columns: 5 #> from x,np,p: 5, 250 #> ***using serial code #> [1] 0.056"},{"path":"http://merliseclyde.github.io/bark/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Merlise Clyde. Author, maintainer, thesis advisor.            ORCID=0000-0002-3595-1872 Zhi Ouyang. Author. Robert Wolpert. Contributor, thesis advisor.","code":""},{"path":"http://merliseclyde.github.io/bark/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clyde M, Ouyang Z (2024). bark: Bayesian Additive Regression Kernels. R package version 1.0.5, https://CRAN.R-project.org/package=bark.","code":"@Manual{,   title = {bark: Bayesian Additive Regression Kernels},   author = {Merlise Clyde and Zhi Ouyang},   year = {2024},   note = {R package version 1.0.5},   url = {https://CRAN.R-project.org/package=bark}, }"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"bark-bayesian-additive-regression-kernels","dir":"","previous_headings":"","what":"Bayesian Additive Regression Kernels","title":"Bayesian Additive Regression Kernels","text":"bark package implements estimation Bayesian nonparametric regression model represented sum multivariate Gaussian kernels flexible model capture nonlinearities, interactions feature selection.","code":""},{"path":"http://merliseclyde.github.io/bark/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Additive Regression Kernels","text":"can install released version bark  CRAN : development version GitHub : (verify branch passing R CMD check badge )","code":"install.packages(\"bark\") require(\"devtools\") devtools::install_github(\"merliseclyde/bark\")"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Additive Regression Kernels","text":"bark similar SVM, however allows different kernel smoothing parameters every dimension inputs x well selection inputs allowing kernel smoothing parameters zero. plot shows posterior draws λ simulated data.  posterior distribution λ1 λ4 concentrated near zero, leads x1 x2 dropping mean function.","code":"library(bark) set.seed(42) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) fit.bark.d <- bark(y ~ .,                      data=data.frame(traindata),                     testdata = data.frame(testdata),                    classification=FALSE,                     selection = TRUE,                    common_lambdas = FALSE,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1738.992 boxplot(as.data.frame(fit.bark.d$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"roadmap-for-future-enhancements","dir":"","previous_headings":"","what":"Roadmap for Future Enhancements","title":"Bayesian Additive Regression Kernels","text":"next year following enhancements planned: port R code C/C++ improvements speed add S3 methods predict, summary, plot add additional kernels better hyperparameter specification features like see added, please feel free create issue GitHub can discuss!","code":""},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Swiss Bank Notes — banknotes","title":"Swiss Bank Notes — banknotes","text":"data set contains six measurements 100 genuine  100 fradulent old Swiss banknotes","code":""},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swiss Bank Notes — banknotes","text":"","code":"data(banknotes)"},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Swiss Bank Notes — banknotes","text":"dataframe following variables: Status status banknote: genuine counterfeit Length Length bill (mm) Left Width left edge (mm) Right Width right edge (mm) Bottom Bottom margin width (mm) Top Top margin width (mm) Diagonal Length diagonal (mm)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Swiss Bank Notes — banknotes","text":"Flury, B. Riedwyl, H. (1988). Multivariate Statistics:  practical approach. London: Chapman & Hall, Tables 1.1 1.2, pp. 5-8.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"x.train Explanatory variables training (sample) data. Must matrix doubles, (usual) rows corresponding observations columns variables. y.train Dependent variable training (sample) data. y numeric continuous response model fit (normal errors). y logical (just values 0 1), binary response model probit link fit. x.test Explanatory variables test (sample) data. structure x.train. type BARK type, e, d, se, sd, default choice se.e: BARK equal weights.d: BARK different weights.se: BARK selection equal weights.sd: BARK selection different weights. classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"bark returns list, including: fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters etc. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"","code":"# Simulate regression example #  Friedman 2 data set, 200 noisy training, 1000 noise free testing #  Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) #  Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) # example with a very small number of iterations to illustrate the method fit.bark.d <- bark_mat(traindata$x, traindata$y, testdata$x,                   nburn=10, nkeep=10, keepevery=10,                   classification=FALSE, type=\"d\") #> [1] \"Starting BARK-d for this regression problem\" boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 8295.832 # \\donttest{  # Simulate classification example  #  Circle 5 with 2 signals and three noisy dimensions  #  Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  #  Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark_mat(traindata$x, traindata$y, testdata$x, classification=TRUE, type=\"se\") #> [1] \"Starting BARK-se for this classification problem\" #> [1] \"burning iteration 1000, J=16, max(nj)=1\" #> [1] \"burning iteration 2000, J=16, max(nj)=2\" #> [1] \"burning iteration 3000, J=21, max(nj)=2\" #> [1] \"burning iteration 4000, J=18, max(nj)=2\" #> [1] \"burning iteration 5000, J=18, max(nj)=1\" #> [1] \"burning iteration 6000, J=15, max(nj)=1\" #> [1] \"burning iteration 7000, J=10, max(nj)=2\" #> [1] \"burning iteration 8000, J=16, max(nj)=2\" #> [1] \"burning iteration 9000, J=15, max(nj)=1\" #> [1] \"burning iteration 10000, J=12, max(nj)=2\" #> [1] \"posterior mcmc iteration 1000, J=9, max(nj)=2\" #> [1] \"posterior mcmc iteration 2000, J=14, max(nj)=1\" #> [1] \"posterior mcmc iteration 3000, J=25, max(nj)=2\" #> [1] \"posterior mcmc iteration 4000, J=17, max(nj)=2\" #> [1] \"posterior mcmc iteration 5000, J=14, max(nj)=2\" #> [1] \"posterior mcmc iteration 6000, J=14, max(nj)=2\" #> [1] \"posterior mcmc iteration 7000, J=15, max(nj)=1\" #> [1] \"posterior mcmc iteration 8000, J=15, max(nj)=2\" #> [1] \"posterior mcmc iteration 9000, J=15, max(nj)=1\" #> [1] \"posterior mcmc iteration 10000, J=13, max(nj)=2\"  boxplot(data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.01 # }"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package bark. — bark-package-deprecated","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"<function>-deprecated\").","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"","code":"bark_mat(   x.train,   y.train,   x.test = matrix(0, 0, 0),   type = \"se\",   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )  sim.Friedman1(n, sd = 1)  sim.Friedman2(n, sd = 125)  sim.Friedman3(n, sd = 0.1)  sim.Circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"List deprecated functions","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"bark-mat","dir":"Reference","previous_headings":"","what":"bark_mat","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"Old version matrix inputs used testing;","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman-","dir":"Reference","previous_headings":"","what":"sim.Friedman1","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman1, use sim_Friedman1.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--1","dir":"Reference","previous_headings":"","what":"sim.Friedman2","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman2, use sim_Friedman2.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--2","dir":"Reference","previous_headings":"","what":"sim.Friedman3","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman3, use sim_Friedman3.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-circle","dir":"Reference","previous_headings":"","what":"sim.Circle","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Circle, use sim_circle.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bark: Bayesian Additive Regression Trees — bark-package","title":"bark: Bayesian Additive Regression Trees — bark-package","text":"Implementation Bayesian Additive Regression Kernels  Feature Selection  Nonparametric Regression  Gaussian regression  classification binary Probit models _PACKAGE","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bark: Bayesian Additive Regression Trees — bark-package","text":"BARK Bayesian sum--kernels model Bayesian priors Bayesian Additive Regression Kernel model.  numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link). cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). bark  uses approximated Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions setting values selection (TRUE FALSE), allows scale parameters variables set zero, removing variables kernels selection = TRUE; enables either soft shrinkage hard  shrinkage scale parameters. input common_lambdas (TRUE FALSE) specifies whether common scale parameter used predictors (TRUE) FALSE allows scale parameters differ across variables kernel.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"bark: Bayesian Additive Regression Trees — bark-package","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bark: Bayesian Additive Regression Trees — bark-package","text":"","code":"# \\donttest{  # Simulate regression example  # Friedman 2 data set, 200 noisy training, 1000 noise free testing  # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600)  # Out of sample MSE in BART (default):    5300 (sd. 1000)  traindata <- sim_Friedman2(200, sd=125)  testdata <- sim_Friedman2(1000, sd=0)  fit.bark.d <- bark(y ~ ., data = data.frame(traindata),                     testdata = data.frame(testdata),                      classification = FALSE,                     selection = FALSE,                     common_lambdas = TRUE)  boxplot(as.data.frame(fit.bark.d$theta.lambda))   mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 5739.513  # Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark(y ~ ., data= data.frame(traindata),                       testdata= data.frame(testdata),                      classification=TRUE,                       selection=TRUE,                      common_lambdas = FALSE)                      boxplot(as.data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.063 # }"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"bark(   formula,   data,   subset,   na.action = na.omit,   testdata = NULL,   selection = TRUE,   common_lambdas = TRUE,   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   verbose = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"formula model formula model predictors, Y ~ X.  X variables centered scaled part model fitting. data data frame.  Factors converted numerical vectors based using `model.matrix`. subset optional vector specifying subset observations used fitting process. na.action function indicates happen data contain NAs. default \"na.omit\". testdata Dataframe test data sample prediction. structure data. selection Logical variable indicating whether variable  dependent kernel parameters \\(\\lambda\\) may set zero MCMC;  default TRUE. common_lambdas Logical variable indicating whether kernel parameters \\(\\lambda\\) predictor specific common across predictors;  default TRUE.   Note  common_lambdas = TRUE  selection = TRUE applies just non-zero \\(lambda_j\\). classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. verbose Logical, whether print messages fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"bark returns object class `bark` list, including: call matched call fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data;  NULL testdata provided yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"##Simulated regression example # Friedman 2 data set, 200 noisy training, 1000 noise free testing # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) # Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- data.frame(sim_Friedman2(200, sd=125)) testdata <- data.frame(sim_Friedman2(1000, sd=0)) # example with a very small number of iterations to illustrate usage fit.bark.d <- bark(y ~ ., data=traindata, testdata= testdata,                    nburn=10, nkeep=10, keepevery=10,                    classification=FALSE,                     common_lambdas = FALSE,                    selection = FALSE) boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 7647.751 # \\donttest{  ##Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark(y ~ .,                       data=data.frame(traindata),                       testdata= data.frame(testdata),                       classification=TRUE,                      nburn=100, nkeep=200, )  boxplot(as.data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.019 # }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"sim.Circle(n, dim=5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"if (FALSE) {   sim.Circle(n=100, dim = 5) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"sim.Friedman1(n, sd=1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"if (FALSE) { sim.Friedman1(100, sd=1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"sim.Friedman2(n, sd=125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"if (FALSE) { sim.Friedman2(100, sd=125) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"sim.Friedman3(n, sd=0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"if (FALSE) { sim.Friedman3(n=100, sd=0.1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim_Friedman1","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(n, sd = 1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(100, sd=1) #> $x #>               [,1]        [,2]       [,3]        [,4]        [,5]        [,6] #>   [1,] 0.977380270 0.477520874 0.33113064 0.374447375 0.855878965 0.200994965 #>   [2,] 0.424801325 0.734171442 0.08542446 0.952966111 0.737965429 0.737973025 #>   [3,] 0.240856775 0.232918567 0.45505486 0.303719032 0.739449791 0.441027514 #>   [4,] 0.245136969 0.037699538 0.08623863 0.839970833 0.046885878 0.615325428 #>   [5,] 0.300084044 0.826897842 0.46582405 0.596851202 0.341006053 0.140418951 #>   [6,] 0.669545987 0.710961461 0.06898513 0.037500674 0.622262364 0.185500207 #>   [7,] 0.617027363 0.160426183 0.95395722 0.689393556 0.962945982 0.224820661 #>   [8,] 0.969934778 0.776050363 0.61000798 0.832507574 0.484459572 0.635611401 #>   [9,] 0.509107380 0.509992400 0.28822065 0.765475144 0.680290780 0.331843600 #>  [10,] 0.475968196 0.364945031 0.48108593 0.868914143 0.534667206 0.837145870 #>  [11,] 0.874517240 0.591024250 0.59503920 0.101448478 0.452286255 0.521626037 #>  [12,] 0.911020397 0.635148091 0.85037336 0.376595923 0.565872689 0.632914172 #>  [13,] 0.978652709 0.066128799 0.21363792 0.104509617 0.821273882 0.348126601 #>  [14,] 0.525277970 0.650644467 0.21524916 0.186201808 0.919055045 0.287297755 #>  [15,] 0.368255067 0.966708176 0.43637349 0.012217144 0.832203222 0.850674329 #>  [16,] 0.141336726 0.820066494 0.36656429 0.121264233 0.096442810 0.630130341 #>  [17,] 0.068195822 0.041683093 0.99218312 0.021366252 0.625383925 0.340994850 #>  [18,] 0.226874778 0.236831261 0.50212141 0.238877129 0.111880600 0.381373118 #>  [19,] 0.655688986 0.979969278 0.95221542 0.466551667 0.892547670 0.913319348 #>  [20,] 0.409421722 0.990383977 0.96439853 0.712230857 0.557769136 0.333901190 #>  [21,] 0.740675967 0.970546802 0.51273512 0.821041391 0.509167812 0.607151054 #>  [22,] 0.984876040 0.193704889 0.27220447 0.904050054 0.195884654 0.361187232 #>  [23,] 0.863899324 0.395804560 0.70704386 0.753740171 0.681723390 0.006179304 #>  [24,] 0.868936036 0.839008253 0.08312095 0.915432119 0.637724255 0.155549878 #>  [25,] 0.698600073 0.792981049 0.19885468 0.265487925 0.815769697 0.779478101 #>  [26,] 0.511090977 0.089850025 0.42509921 0.504711035 0.946675238 0.562546084 #>  [27,] 0.831939655 0.583166800 0.76246630 0.273473306 0.856180242 0.274439271 #>  [28,] 0.332642986 0.105344373 0.28110844 0.949781639 0.091699932 0.677426438 #>  [29,] 0.463823137 0.135850132 0.26002468 0.451658254 0.719161314 0.741769106 #>  [30,] 0.109409419 0.634295062 0.14811467 0.901171576 0.935270046 0.354176805 #>  [31,] 0.586410358 0.229267603 0.95557950 0.837081442 0.361929137 0.872761856 #>  [32,] 0.453935887 0.249100239 0.68624690 0.173048422 0.076809715 0.336870968 #>  [33,] 0.568549671 0.512705409 0.41734303 0.068276537 0.956458417 0.685418595 #>  [34,] 0.066516466 0.997796192 0.15670801 0.166173570 0.518820177 0.670704237 #>  [35,] 0.531863235 0.671008959 0.42260697 0.141690655 0.188062635 0.577082316 #>  [36,] 0.489981490 0.076098994 0.84638458 0.887353336 0.104480397 0.593730333 #>  [37,] 0.965408497 0.706395926 0.33882590 0.987632640 0.618675198 0.815625898 #>  [38,] 0.743679992 0.120907484 0.99369930 0.776756294 0.296049240 0.447136084 #>  [39,] 0.711304484 0.308503189 0.99302754 0.276872151 0.392215308 0.489430065 #>  [40,] 0.045485619 0.616634446 0.65171221 0.001723929 0.119553519 0.650726150 #>  [41,] 0.081177270 0.333159736 0.69964927 0.196960391 0.353409183 0.631927129 #>  [42,] 0.118429153 0.362928265 0.57991727 0.728620808 0.825388022 0.354550665 #>  [43,] 0.956122459 0.124529329 0.11656838 0.971042374 0.799543917 0.271931523 #>  [44,] 0.391856718 0.564223621 0.31540431 0.133380391 0.799540167 0.333058138 #>  [45,] 0.965927137 0.794091080 0.97132232 0.950440770 0.524354057 0.166943557 #>  [46,] 0.483228243 0.055327185 0.85162443 0.121719670 0.934247043 0.500709611 #>  [47,] 0.249305418 0.308292770 0.10619343 0.043193062 0.190744396 0.803964956 #>  [48,] 0.369157479 0.813480498 0.72209580 0.224243979 0.167526761 0.786308449 #>  [49,] 0.817333879 0.096258180 0.42516206 0.804548549 0.139298297 0.109716352 #>  [50,] 0.019237124 0.168301573 0.07417556 0.473416179 0.386223618 0.822327071 #>  [51,] 0.783599234 0.826305694 0.69586095 0.590995048 0.331717508 0.780770291 #>  [52,] 0.013242019 0.044001881 0.89662758 0.007410547 0.213996268 0.079785336 #>  [53,] 0.894144914 0.281276192 0.84676586 0.716762103 0.300200688 0.471755071 #>  [54,] 0.657548581 0.581578874 0.39184540 0.908104357 0.813779922 0.879152941 #>  [55,] 0.761273455 0.615253859 0.05936043 0.563798388 0.615837890 0.871639828 #>  [56,] 0.921847878 0.436561169 0.31406990 0.799300761 0.205281763 0.051298557 #>  [57,] 0.615400710 0.595790307 0.92030040 0.778674057 0.105216058 0.350091598 #>  [58,] 0.436615163 0.195402248 0.70437437 0.942737328 0.181674413 0.159441101 #>  [59,] 0.605278825 0.110525458 0.08323104 0.378311792 0.778771785 0.632628587 #>  [60,] 0.829070352 0.567944651 0.55128649 0.811458400 0.690194052 0.711301422 #>  [61,] 0.968650858 0.477366256 0.59614800 0.415097510 0.577774346 0.196466592 #>  [62,] 0.734487865 0.496175316 0.25113836 0.170497097 0.380036351 0.046067403 #>  [63,] 0.568481993 0.029452231 0.67849350 0.699230757 0.874204580 0.381340712 #>  [64,] 0.964768612 0.248015613 0.15555192 0.301879864 0.388444793 0.701622937 #>  [65,] 0.229460827 0.444987454 0.12607512 0.358173094 0.402336334 0.613839786 #>  [66,] 0.742567769 0.492592975 0.97432860 0.808791049 0.205909869 0.564567686 #>  [67,] 0.699989653 0.511419591 0.03635808 0.080165466 0.603607980 0.329443214 #>  [68,] 0.880941252 0.155643941 0.90780464 0.424878390 0.014682112 0.583221471 #>  [69,] 0.210706649 0.513723142 0.69603201 0.973009616 0.243764018 0.855300712 #>  [70,] 0.942012722 0.951291956 0.95308252 0.926529391 0.459722612 0.274661668 #>  [71,] 0.713520117 0.420425977 0.71335651 0.858500321 0.485649926 0.495288798 #>  [72,] 0.094999080 0.150398349 0.65082295 0.101026279 0.692413708 0.142255968 #>  [73,] 0.356004262 0.942009105 0.56815238 0.321695355 0.340671165 0.041807059 #>  [74,] 0.036536181 0.756448995 0.58202584 0.702675828 0.800350380 0.377016457 #>  [75,] 0.832370898 0.961237657 0.61691657 0.207070088 0.257676635 0.955163981 #>  [76,] 0.036327181 0.811326755 0.06280571 0.802856945 0.839749628 0.451227978 #>  [77,] 0.800497398 0.775674219 0.96449121 0.663105682 0.063147330 0.047282888 #>  [78,] 0.093751060 0.231908497 0.95862808 0.799607973 0.150736481 0.854312250 #>  [79,] 0.352694284 0.551596690 0.37359564 0.877684265 0.784147036 0.097018141 #>  [80,] 0.053739527 0.697159855 0.79405555 0.004968022 0.603156488 0.582079979 #>  [81,] 0.902612570 0.123739519 0.29589077 0.007338479 0.154545002 0.891554536 #>  [82,] 0.992589752 0.727384808 0.16647371 0.808773909 0.650340688 0.873719605 #>  [83,] 0.586153616 0.566560055 0.58747904 0.049009201 0.450481645 0.522350492 #>  [84,] 0.762938032 0.283116839 0.34412160 0.791025644 0.835667126 0.412901866 #>  [85,] 0.706806765 0.160027903 0.33154397 0.503309961 0.100632352 0.196091210 #>  [86,] 0.187290220 0.178079764 0.40409285 0.247019528 0.846768287 0.980322336 #>  [87,] 0.438214467 0.789354877 0.19724954 0.191666962 0.142134753 0.436006664 #>  [88,] 0.107018798 0.540422139 0.12110602 0.966684457 0.998888670 0.903436884 #>  [89,] 0.009792334 0.074039083 0.49303693 0.554156797 0.498754429 0.683297965 #>  [90,] 0.527964488 0.328626283 0.86247785 0.951201699 0.746588684 0.266268598 #>  [91,] 0.232796691 0.697649230 0.01595651 0.543388974 0.390355896 0.590801002 #>  [92,] 0.887087161 0.670650587 0.60722420 0.039244597 0.007084669 0.957526077 #>  [93,] 0.825122896 0.009152957 0.13051586 0.042948136 0.023112692 0.417198787 #>  [94,] 0.218492635 0.395334574 0.28736410 0.582029848 0.853017885 0.093801655 #>  [95,] 0.991557138 0.425056567 0.66908841 0.284349385 0.893155629 0.562810528 #>  [96,] 0.650710787 0.546235373 0.75294230 0.052051265 0.815134835 0.029923735 #>  [97,] 0.282278621 0.389744303 0.19985773 0.950283034 0.796805397 0.169326297 #>  [98,] 0.302604396 0.754783913 0.53032176 0.814387434 0.236199372 0.460710786 #>  [99,] 0.141234486 0.767545671 0.12008235 0.573182834 0.072835667 0.622344298 #> [100,] 0.660796172 0.710676418 0.82143456 0.681653182 0.003608302 0.889423082 #>              [,7]        [,8]       [,9]      [,10] #>   [1,] 0.92716673 0.769598925 0.50155499 0.97012420 #>   [2,] 0.57315103 0.626910265 0.32095941 0.64452012 #>   [3,] 0.56001204 0.296982314 0.80402028 0.03321943 #>   [4,] 0.10233022 0.322921716 0.20943198 0.78305421 #>   [5,] 0.92397157 0.640669960 0.98881606 0.12177969 #>   [6,] 0.92839263 0.709640747 0.87443635 0.39765503 #>   [7,] 0.05144976 0.096165879 0.49567025 0.84967001 #>   [8,] 0.75635400 0.086963051 0.21795756 0.84862948 #>   [9,] 0.02132031 0.994891974 0.72259776 0.88582916 #>  [10,] 0.90774535 0.253045580 0.38203350 0.14946883 #>  [11,] 0.63300611 0.263827749 0.73274800 0.54540367 #>  [12,] 0.18041344 0.153688222 0.47970105 0.32807078 #>  [13,] 0.93805098 0.660216646 0.15143390 0.53200304 #>  [14,] 0.67845421 0.590687511 0.13785155 0.15620757 #>  [15,] 0.10305997 0.298341861 0.45980739 0.51421003 #>  [16,] 0.17375915 0.948297005 0.09790143 0.59137238 #>  [17,] 0.87719720 0.271386304 0.12846918 0.53872819 #>  [18,] 0.53665801 0.924475931 0.33830528 0.61991238 #>  [19,] 0.45967217 0.861358849 0.16057450 0.92139088 #>  [20,] 0.03942938 0.273746871 0.69252450 0.04001758 #>  [21,] 0.26462502 0.296753241 0.62233627 0.27466679 #>  [22,] 0.94018347 0.126345225 0.57024188 0.81949054 #>  [23,] 0.67873977 0.106800505 0.20334670 0.72132405 #>  [24,] 0.32391066 0.161517486 0.57638707 0.74405589 #>  [25,] 0.61090971 0.201048311 0.78416878 0.64243946 #>  [26,] 0.94948146 0.553582505 0.97178596 0.14401102 #>  [27,] 0.99872303 0.931831125 0.66358077 0.59806898 #>  [28,] 0.97679759 0.992306889 0.84828722 0.17882662 #>  [29,] 0.81185289 0.613059707 0.14325479 0.47927602 #>  [30,] 0.08594807 0.035143297 0.42334297 0.09778061 #>  [31,] 0.43967843 0.634916725 0.06252777 0.72627712 #>  [32,] 0.27911842 0.007093211 0.97861874 0.55756068 #>  [33,] 0.60523117 0.716533431 0.74596796 0.21479791 #>  [34,] 0.77310519 0.042885405 0.13408906 0.66441741 #>  [35,] 0.76282414 0.277879262 0.85866018 0.93200617 #>  [36,] 0.09308437 0.516357254 0.52484780 0.19015002 #>  [37,] 0.13693872 0.931579793 0.77565715 0.30735682 #>  [38,] 0.47971437 0.582620490 0.33589448 0.88049626 #>  [39,] 0.29150281 0.924676211 0.97759180 0.10321010 #>  [40,] 0.18099171 0.188947327 0.52719830 0.99001009 #>  [41,] 0.87757222 0.688093994 0.78276051 0.99974403 #>  [42,] 0.60740565 0.204548905 0.00729791 0.97107604 #>  [43,] 0.23565243 0.422897760 0.10186207 0.19654042 #>  [44,] 0.18017422 0.547911235 0.60755835 0.22214353 #>  [45,] 0.60789495 0.155056445 0.43142451 0.81060204 #>  [46,] 0.36594205 0.082434051 0.67247642 0.83923068 #>  [47,] 0.52658767 0.705421544 0.64991465 0.11195791 #>  [48,] 0.52931828 0.201800441 0.32053759 0.65917371 #>  [49,] 0.13468473 0.124462283 0.97852518 0.07995118 #>  [50,] 0.81066212 0.215410776 0.73528874 0.69665245 #>  [51,] 0.23874156 0.579094092 0.05591421 0.08257852 #>  [52,] 0.97368450 0.937716276 0.46537779 0.20596030 #>  [53,] 0.86832516 0.815552979 0.28493569 0.44452774 #>  [54,] 0.56909097 0.606021862 0.95092542 0.21568876 #>  [55,] 0.30153414 0.442793658 0.93450958 0.65124622 #>  [56,] 0.50953777 0.638876798 0.88854693 0.56134106 #>  [57,] 0.02516235 0.022946130 0.01015611 0.62459655 #>  [58,] 0.34258179 0.751952055 0.30436107 0.27333795 #>  [59,] 0.09408042 0.561038367 0.80064243 0.56149156 #>  [60,] 0.63407272 0.748436374 0.75015425 0.42982958 #>  [61,] 0.12902043 0.452120897 0.58817075 0.98945594 #>  [62,] 0.20171202 0.270812742 0.05206579 0.52258937 #>  [63,] 0.36908401 0.589834785 0.86684492 0.09784975 #>  [64,] 0.80811788 0.254416399 0.98660998 0.53731584 #>  [65,] 0.09695840 0.495529422 0.49505749 0.36546201 #>  [66,] 0.86847287 0.733456167 0.73752056 0.60477063 #>  [67,] 0.29552070 0.887375864 0.06963107 0.03268646 #>  [68,] 0.51734871 0.441440820 0.61643794 0.46634185 #>  [69,] 0.95170344 0.544228293 0.43951949 0.60221976 #>  [70,] 0.01564774 0.133819518 0.44980052 0.83595589 #>  [71,] 0.28499537 0.208714132 0.91569194 0.01678871 #>  [72,] 0.37620280 0.456053565 0.28360516 0.29687779 #>  [73,] 0.99393631 0.613751681 0.03705253 0.87965444 #>  [74,] 0.55094785 0.498265839 0.17281866 0.70303504 #>  [75,] 0.53155559 0.076918567 0.61889199 0.57797531 #>  [76,] 0.83846990 0.106320653 0.59191531 0.96910549 #>  [77,] 0.01189957 0.010325240 0.71752832 0.23370514 #>  [78,] 0.96334440 0.124507716 0.68206052 0.91902853 #>  [79,] 0.93409107 0.054430977 0.91453266 0.07231676 #>  [80,] 0.40939021 0.359508844 0.72251832 0.22728096 #>  [81,] 0.15895666 0.745885097 0.46028835 0.74897988 #>  [82,] 0.06524313 0.929713822 0.18311843 0.01175481 #>  [83,] 0.09541508 0.265422801 0.80981618 0.11474790 #>  [84,] 0.40898244 0.404981491 0.46532910 0.56071455 #>  [85,] 0.04932082 0.050311287 0.95440852 0.90650925 #>  [86,] 0.56250121 0.879995591 0.51618939 0.72747839 #>  [87,] 0.70954855 0.166352605 0.95909180 0.20775981 #>  [88,] 0.50035810 0.191377013 0.81090162 0.40357674 #>  [89,] 0.36615768 0.587770430 0.45362527 0.69555887 #>  [90,] 0.39718347 0.829807367 0.24020953 0.14168285 #>  [91,] 0.28521746 0.367521797 0.41706945 0.74150934 #>  [92,] 0.95911190 0.393765606 0.26540165 0.99260464 #>  [93,] 0.13053487 0.225361166 0.26862832 0.61884133 #>  [94,] 0.44225051 0.076778087 0.89111514 0.91421651 #>  [95,] 0.69676212 0.529074538 0.40184214 0.73231100 #>  [96,] 0.25411800 0.378176702 0.40251771 0.12768195 #>  [97,] 0.62405587 0.580698354 0.09679574 0.98239911 #>  [98,] 0.68075226 0.790691922 0.93231284 0.94192777 #>  [99,] 0.02014976 0.045944129 0.03649415 0.49770463 #> [100,] 0.07768696 0.073691322 0.37832993 0.35628965 #>  #> $y #>   [1] 22.131095 29.512812 12.080322 11.104958 15.762616 21.949774 22.662693 #>   [8] 20.174627 22.488406 19.266220 15.861558 21.453556 13.892151 20.978716 #>  [15] 17.446777  4.421102  8.575318  5.026703 26.695342 25.208239 20.002290 #>  [22] 16.965802 25.034699 26.441100 23.371437 15.198381 23.454067 13.145792 #>  [29] 14.262138 24.425681 19.826948  5.633620 18.800709 12.018563 11.368112 #>  [36] 13.768754 24.368033 17.757878 17.651532  3.912241  7.857504 18.143668 #>  [43] 24.631091 17.089195 25.213980 12.665118  5.938282 14.088844 10.850843 #>  [50] 10.388499 20.586222  6.684728 20.012808 27.290686 23.561698 21.215071 #>  [57] 21.462424 15.821764 16.148196 26.804811 19.513392 15.871582 16.224051 #>  [64] 14.843459 12.425225 24.020477 21.828828 13.030733 17.214872 21.903759 #>  [71] 22.944929  8.970255 16.791835 16.596962  9.938174 20.465626 19.449338 #>  [78] 14.723235 23.180224  8.051350  5.882117 25.549282 14.457074 23.566215 #>  [85]  9.827486 11.097054 13.373297 26.294499 10.991932 25.050353 18.845599 #>  [92] 11.085979  3.833199 18.131685 19.650377 18.568419 23.556567 16.658674 #>  [99] 12.703880 18.309203 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim_Friedman2","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(n, sd = 125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(100, sd=125) #> $x #>             [,1]      [,2]       [,3]      [,4] #>   [1,] 18.262463  491.5231 0.07114439  6.978089 #>   [2,]  5.607791  482.1103 0.01440722  7.477066 #>   [3,]  7.704316  938.0194 0.63228474  7.580063 #>   [4,] 10.147811  430.6193 0.36903048  6.600625 #>   [5,] 62.153368  414.8822 0.85641368  3.859618 #>   [6,] 51.718262  361.9174 0.53191017  7.673378 #>   [7,] 59.719055  429.7168 0.77955279  9.740183 #>   [8,] 87.474530 1442.6427 0.93296497  2.933012 #>   [9,] 89.619381  259.8091 0.31156134  2.110618 #>  [10,] 37.487429  650.6089 0.76978253  6.213695 #>  [11,] 38.101307  125.9915 0.59951651  1.681106 #>  [12,] 39.971403  254.9086 0.36559866  3.498771 #>  [13,] 78.740243 1166.3633 0.96247087  5.035825 #>  [14,] 72.517907 1424.6209 0.50298157  3.598552 #>  [15,] 89.934109 1023.5085 0.50777279 10.886831 #>  [16,] 74.971386  445.2254 0.64873961 10.519389 #>  [17,] 86.015524  480.2190 0.08254605 10.578331 #>  [18,] 58.866572 1588.9600 0.12493271  1.217222 #>  [19,] 62.322241  156.3314 0.83155279  6.854086 #>  [20,] 86.518436 1553.0864 0.45329176  2.425176 #>  [21,] 32.615805  452.3908 0.36575743  1.131676 #>  [22,] 64.928966  394.8766 0.91697840  4.042177 #>  [23,] 57.656540 1503.3392 0.40876946  3.806401 #>  [24,] 24.656280 1609.3011 0.46578712  3.304635 #>  [25,] 80.270074 1130.0013 0.09705467  7.091302 #>  [26,] 86.285008 1417.0428 0.71410556  3.516569 #>  [27,] 66.537688 1559.7374 0.36151383  3.212030 #>  [28,] 33.995277  362.3922 0.09457859  1.686985 #>  [29,] 84.163848  775.6468 0.71676187  5.814709 #>  [30,] 95.633813 1678.1716 0.87053314  2.235394 #>  [31,] 82.801383  881.0271 0.70067009  9.192320 #>  [32,] 19.797151  713.8181 0.49444926 10.784887 #>  [33,] 94.382804  602.9954 0.23320481  1.529075 #>  [34,]  9.588987  745.0397 0.82251561  4.589201 #>  [35,] 69.347271 1511.6083 0.57814760 10.714830 #>  [36,] 28.618559 1577.8851 0.82281658  6.468201 #>  [37,]  4.622148  200.8398 0.57575076  2.056239 #>  [38,] 62.884142 1296.8160 0.32929867  2.739424 #>  [39,] 13.311413  536.4444 0.06095796  8.825691 #>  [40,] 89.977071 1427.6955 0.48881298  4.816399 #>  [41,] 36.681397  226.3136 0.70115230  6.243887 #>  [42,] 83.000138 1431.5814 0.99965129  2.595934 #>  [43,] 62.176392  707.6541 0.77052128  9.200219 #>  [44,] 30.191458 1146.3607 0.56836875  6.407920 #>  [45,] 45.645724 1224.4550 0.24446183  4.314882 #>  [46,] 74.341682  488.5715 0.84033147  5.489354 #>  [47,] 36.742740  482.0334 0.54786029  3.233426 #>  [48,] 84.673994 1135.7622 0.05184123  3.941269 #>  [49,] 88.429746 1237.4162 0.24467223  1.805190 #>  [50,] 83.701030 1630.7357 0.70819886  6.926104 #>  [51,] 76.682258 1516.3766 0.99561037  5.057091 #>  [52,] 28.001987 1448.0801 0.49741377  4.026803 #>  [53,] 86.592753 1577.8522 0.99795629  2.957071 #>  [54,] 74.597069  813.5721 0.94435804 10.698488 #>  [55,] 82.197207  290.3845 0.60513483  3.842885 #>  [56,] 90.184483  675.9599 0.77718189  4.879202 #>  [57,] 91.013115  706.7436 0.78288535  7.031318 #>  [58,] 87.341718 1267.1097 0.39707278  8.704094 #>  [59,] 15.962643 1601.2012 0.60478401  5.627293 #>  [60,] 89.524400  904.2673 0.50216681  8.312079 #>  [61,] 24.281698  640.5242 0.99602080  8.826385 #>  [62,] 80.375353  790.0304 0.51258570  4.077453 #>  [63,] 82.094168  390.1152 0.72745769  2.179077 #>  [64,] 66.407117  797.4422 0.81472102  8.970994 #>  [65,] 67.402452 1593.9706 0.72260843  1.611694 #>  [66,] 49.845640 1158.2204 0.94623656  2.165398 #>  [67,] 42.826414  716.8947 0.31894380  7.312426 #>  [68,] 38.562026 1523.8975 0.89945890  4.182647 #>  [69,] 37.278056 1268.5095 0.53605594  2.699829 #>  [70,] 18.550458  434.6745 0.47007538  7.557141 #>  [71,] 26.849755  345.5153 0.81768650 10.380134 #>  [72,] 16.185893 1299.1987 0.17191988  9.355192 #>  [73,]  5.315435  899.5591 0.33210020  5.269765 #>  [74,] 10.338490 1324.4634 0.44689802 10.551321 #>  [75,] 14.286200  643.3956 0.70963288  8.274537 #>  [76,] 19.563285  889.4581 0.40360962  3.172217 #>  [77,]  5.595757  186.1946 0.09469529  7.964189 #>  [78,] 72.080033  380.7959 0.09920605  9.726578 #>  [79,] 29.588607  945.5775 0.17765886  6.160170 #>  [80,] 17.596138  977.9291 0.56791720  9.589185 #>  [81,] 54.466443 1541.0992 0.69310552  9.400745 #>  [82,] 29.280815 1159.3930 0.46378592  6.635512 #>  [83,]  9.171389  857.0365 0.69600253  2.929414 #>  [84,] 49.406546  772.3389 0.98230391 10.426093 #>  [85,] 81.975772  572.1705 0.43780839  3.062772 #>  [86,] 55.720458  283.5028 0.26466661  7.504752 #>  [87,] 51.573961 1398.6325 0.29028419  3.675866 #>  [88,] 13.762274  760.9968 0.99238614  5.326755 #>  [89,] 63.072191 1107.2621 0.18165608  9.320026 #>  [90,] 27.509516  797.0533 0.84727654  3.877584 #>  [91,] 81.651935 1010.3020 0.60210431  8.817648 #>  [92,] 40.656011 1663.5780 0.81782936  7.735521 #>  [93,] 10.524811  826.3836 0.77276366  9.164330 #>  [94,] 29.507558 1342.7608 0.58130633  3.310590 #>  [95,] 85.806083 1680.0849 0.05593927  3.066666 #>  [96,] 78.676377  843.4041 0.60383202 10.650448 #>  [97,] 19.536995  127.2035 0.29153471  3.677354 #>  [98,] 55.490650 1315.4058 0.49786227  8.004522 #>  [99,] 54.204656 1742.0479 0.12102541 10.091623 #> [100,] 73.133351  135.1225 0.55348738  9.503634 #>  #> $y #>   [1] -130.386781  247.044660  576.417589  224.869373  327.095616  221.757782 #>   [7]  175.159848 1397.780048  210.407995  599.053550  399.926705  240.318452 #>  [13]  892.095663  725.848794  650.437591  579.310812  158.155312  180.538552 #>  [19]  198.188255  883.979583  393.573330  574.211369  616.407128  982.886958 #>  [25]   53.632263  881.139662  698.387337  -31.464549  484.055242 1437.760021 #>  [31]  507.178161  270.324496  233.551586  354.221262  647.788709 1182.165628 #>  [37]  -37.883774  159.487213   97.355775  492.450107  236.026694 1621.991485 #>  [43]  859.234827  508.744184  376.732335  451.598132  511.821178  205.008436 #>  [49]   37.651928 1474.628395 1599.380608  874.315417 1643.415718  811.304368 #>  [55]  187.362744  495.098991  317.745885  590.402769  580.114554  375.817764 #>  [61]  705.211496  264.224872  192.677088  608.723279 1031.272492 1007.107962 #>  [67]  230.364812 1352.862952  612.542698  291.583626  323.749882  256.941235 #>  [73]  277.978273  468.119474  459.740296  117.919284  125.712886  272.468931 #>  [79]   44.836861  468.021192 1113.493503  592.913090  594.934042  621.066562 #>  [85]  388.368959    2.399765  359.798479  725.813365  144.097278  569.469726 #>  [91]  582.150312 1625.025977  621.652475  906.138188  -51.275749  394.028874 #>  [97]  -61.744053  684.652265  498.292681  116.713696 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim_Friedman3","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n, sd = 0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n=100, sd=0.1) #> $x #>             [,1]      [,2]        [,3]      [,4] #>   [1,] 30.825952 1127.9017 0.573424780  1.478231 #>   [2,] 56.282889 1152.0600 0.870915000  2.033601 #>   [3,] 10.283905  413.8673 0.921000510  2.241561 #>   [4,] 86.429125 1104.0521 0.973211584  6.799358 #>   [5,] 37.058717 1020.2058 0.565367990  2.493783 #>   [6,] 56.669640 1049.0497 0.580058141  4.571176 #>   [7,] 85.620612 1074.8537 0.451348698  8.135946 #>   [8,] 93.787521  137.4751 0.749643839  1.383408 #>   [9,] 57.649304  523.8623 0.534890170  8.120493 #>  [10,] 96.398831  295.6232 0.395163982  4.895550 #>  [11,] 94.458449  410.7939 0.594093726  8.949516 #>  [12,] 96.417692 1493.8341 0.346676224  4.511120 #>  [13,] 70.495891 1191.4955 0.203333060  4.434715 #>  [14,] 91.507220  496.2649 0.871611096  7.487752 #>  [15,] 65.914199 1447.5109 0.120421228  6.590462 #>  [16,] 70.462228  509.5219 0.254895523  6.631807 #>  [17,] 88.310760  707.1107 0.315147347  6.045018 #>  [18,] 27.884101  863.0375 0.673826131 10.039038 #>  [19,]  4.354110  562.6515 0.241721363  4.982203 #>  [20,] 99.230953  367.8261 0.718741739  4.130821 #>  [21,] 45.822133 1334.5513 0.105027412  4.170977 #>  [22,] 60.809732  145.8603 0.494299243  8.691526 #>  [23,] 84.767140  890.9077 0.059236672  8.451566 #>  [24,] 94.884000  839.6750 0.493812188  5.903832 #>  [25,]  1.986057  559.6768 0.250226249 10.288233 #>  [26,] 73.319807 1185.0692 0.891174042  5.008642 #>  [27,] 40.755611  649.4596 0.080101752  8.312420 #>  [28,] 41.391993  264.0161 0.017509584 10.617382 #>  [29,] 82.039428  804.2670 0.294779242  2.655079 #>  [30,] 17.574505  960.1463 0.817871663  5.938581 #>  [31,] 26.556426  298.4271 0.199264202  1.604306 #>  [32,]  3.464958  717.8549 0.441008693  5.314073 #>  [33,] 53.889174 1590.9096 0.213425233  2.594641 #>  [34,] 37.871453  259.6782 0.594987497  4.236741 #>  [35,] 89.704471  850.2740 0.932048126  5.143644 #>  [36,] 63.366214 1469.9975 0.090543105  7.923376 #>  [37,] 63.607036  194.8063 0.773080538  7.309777 #>  [38,] 66.784642  904.3950 0.720907238 10.137250 #>  [39,]  2.151921 1162.1605 0.853163768  9.627817 #>  [40,] 66.294452 1369.9562 0.240071075 10.613858 #>  [41,] 52.770047  390.6047 0.331604818  8.430682 #>  [42,] 76.327332 1201.1006 0.413337878  3.661946 #>  [43,] 26.010365  413.9119 0.514562150  9.632506 #>  [44,] 62.974862 1484.3180 0.143993061 10.936522 #>  [45,] 48.456779 1606.1559 0.028128325  9.897014 #>  [46,]  2.470620 1030.3406 0.083775715  2.060839 #>  [47,] 41.875079  669.4004 0.303986391  2.532628 #>  [48,] 19.881345  496.2695 0.218112098  8.412991 #>  [49,] 25.576360 1699.0529 0.305153707  2.291095 #>  [50,] 73.444774 1470.8927 0.338777487 10.828080 #>  [51,] 41.187703 1736.6659 0.509695614  8.165728 #>  [52,] 11.476699 1433.8945 0.367414622 10.002884 #>  [53,] 35.062301  407.1805 0.145373559  3.248528 #>  [54,]  1.898003 1559.2784 0.236825332  3.996812 #>  [55,] 53.919572 1456.4783 0.333344291  8.070362 #>  [56,] 71.965680  343.9097 0.544956580  1.677744 #>  [57,] 31.661532 1443.2678 0.221341793  9.818495 #>  [58,] 67.579770 1167.5540 0.347526818  4.580853 #>  [59,] 60.254614  316.3190 0.061869972  5.362826 #>  [60,] 54.028325  268.6651 0.983538146  6.689607 #>  [61,] 83.446984 1406.3700 0.232457852  1.697569 #>  [62,] 59.118330  646.0840 0.142002595  3.241725 #>  [63,] 49.596202 1448.2511 0.977395241  2.890007 #>  [64,] 10.458808 1525.4039 0.275599060  4.622639 #>  [65,] 44.228854  790.7129 0.944558017  3.884189 #>  [66,] 26.763161 1037.2351 0.444347145  2.409515 #>  [67,] 67.805727  476.5362 0.016627895 10.148604 #>  [68,] 82.057226 1040.8143 0.806981719  2.771745 #>  [69,] 30.498487 1095.2270 0.070730513  1.283073 #>  [70,] 72.519565 1489.9240 0.967027876  6.343249 #>  [71,] 88.149093 1745.3359 0.932933122  4.964997 #>  [72,] 88.459378  934.9048 0.596474341  8.683736 #>  [73,] 96.992085  989.8979 0.550144838  9.541985 #>  [74,] 77.908849 1570.3274 0.129840423  5.800195 #>  [75,] 84.016820 1518.6840 0.378134911  5.594849 #>  [76,] 21.680225 1390.7443 0.425370500  9.164034 #>  [77,] 31.560739  390.4897 0.830497077  1.909209 #>  [78,]  4.398040  231.3197 0.111564942  1.372887 #>  [79,] 54.870058  185.2058 0.472555966  4.651288 #>  [80,] 77.442946  280.1721 0.973888866  1.147488 #>  [81,] 48.996267  841.1061 0.436716406  5.406159 #>  [82,] 54.964301 1528.7694 0.294627368  8.299121 #>  [83,]  7.630711  779.2293 0.169721953  2.274610 #>  [84,] 88.413986 1573.9854 0.791205528  3.551065 #>  [85,] 33.834462 1218.1433 0.809181832  9.308088 #>  [86,]  6.441419 1707.2070 0.950115869  2.746835 #>  [87,] 29.304838 1675.8857 0.492245314  7.896159 #>  [88,] 62.641159  311.2145 0.460462597  5.304011 #>  [89,] 28.528188  874.4557 0.332182426  8.931595 #>  [90,]  8.386399  632.0582 0.676949844  2.974928 #>  [91,] 90.108014  281.6644 0.174675048 10.877295 #>  [92,] 44.483487  139.9396 0.838248761  1.742246 #>  [93,] 23.416390  427.4938 0.239468809  5.791856 #>  [94,] 23.394862  621.4651 0.816823635  9.557527 #>  [95,] 51.664437 1751.4432 0.143833089  1.410754 #>  [96,] 14.479299 1269.4888 0.370566186 10.354301 #>  [97,]  6.220333 1386.0282 0.956884115  6.977835 #>  [98,] 71.859516  159.7813 0.845859981  9.976063 #>  [99,] 62.156340  580.9319 0.881534312  4.899534 #> [100,] 28.626160  526.7528 0.005404439 10.791704 #>  #> $y #>   [1]  1.55845593  1.62135963  1.59164799  1.61660710  1.48245246  1.47342289 #>   [7]  1.43685486  0.89098999  1.21807163  0.87597717  1.12879908  1.28617670 #>  [13]  1.53598528  1.46310158  1.37315462  1.03143303  1.20409573  1.53340144 #>  [19]  1.71351951  1.06730746  1.12111759  0.90721157  0.56803291  1.17962792 #>  [25]  1.62668378  1.46015556  0.97394053  0.06614486  1.20770422  1.50682298 #>  [31]  1.05558016  1.60445814  1.50403672  1.23575106  1.35204559  1.00511700 #>  [37]  0.96651611  1.34832957  1.68724931  1.30338894  1.19250371  1.30944982 #>  [43]  1.41172915  1.16471093  0.84679889  1.54285974  1.33121444  1.24389417 #>  [49]  1.66624222  1.42276030  1.56724967  1.41478802  0.90886807  1.64581436 #>  [55]  1.32891832  1.23505317  1.48920327  1.24907667  0.16635414  1.53373651 #>  [61]  1.25920313  1.05295061  1.63704348  1.59548563  1.41427255  1.47576587 #>  [67] -0.02143759  1.47472971  1.10870813  1.63072137  1.68037500  1.41537110 #>  [73]  1.45999089  1.10667827  1.38693292  1.47071790  1.32485388  1.21269998 #>  [79]  1.09013858  1.33708294  1.58307448  1.45902861  1.47930360  1.51566074 #>  [85]  1.67539290  1.48119998  1.51055379  1.11524523  1.57217760  1.51152985 #>  [91]  0.64790509  1.19435007  1.60345166  1.51104608  1.40353431  1.55342898 #>  [97]  1.50222820  1.00186983  1.39480412  0.24371478 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n=100, dim=5) #> $x #>                [,1]         [,2]        [,3]         [,4]          [,5] #>   [1,] -0.948218130 -0.786142227 -0.06248782 -0.558072489 -0.9807747877 #>   [2,] -0.889386122  0.633051797 -0.03709023 -0.011783426 -0.2203331133 #>   [3,] -0.062348036 -0.225966798 -0.89575702  0.169701155 -0.1454366217 #>   [4,] -0.774917602  0.230689711 -0.06958776 -0.587349249 -0.2209404404 #>   [5,]  0.210191870  0.799849859 -0.90530198  0.745349922  0.7318477090 #>   [6,]  0.841786455  0.285512059  0.96745372  0.921634264  0.3543632226 #>   [7,] -0.079121095 -0.031281726 -0.69061200 -0.951003162  0.6191468807 #>   [8,]  0.804802695 -0.717133217 -0.47006993  0.473482131 -0.1962033389 #>   [9,] -0.612224613  0.374503849  0.90879521 -0.918984616  0.2454090556 #>  [10,]  0.449124927  0.315238420  0.47812289 -0.981051274  0.6707045916 #>  [11,] -0.004546496  0.902552225  0.95435426  0.558790226 -0.8525602366 #>  [12,] -0.457799221 -0.586389780  0.30383959  0.720392426 -0.6827336401 #>  [13,] -0.864071465 -0.052357480  0.05495809 -0.541725049  0.9531756490 #>  [14,] -0.557439344  0.767972077 -0.81159236  0.265951183  0.0215373915 #>  [15,]  0.363482933 -0.861704249  0.49082133 -0.739379404 -0.2449258938 #>  [16,] -0.012446861 -0.018583041 -0.61716479 -0.927945620  0.1218074299 #>  [17,] -0.938440116 -0.061534225  0.51754142 -0.144891829  0.8724692394 #>  [18,] -0.693468693  0.339062196  0.44773180 -0.997416888 -0.9964970914 #>  [19,]  0.433925551 -0.199843764  0.95318477 -0.393472604 -0.8314696741 #>  [20,] -0.968033453  0.222248017 -0.72554067  0.646842317  0.9743683860 #>  [21,] -0.469450569  0.931189551 -0.13787468  0.375186705  0.6039521182 #>  [22,] -0.435231931  0.362654170  0.64323996 -0.245305657 -0.5915995436 #>  [23,] -0.522111940 -0.780161879  0.02821503  0.507576585 -0.9627297618 #>  [24,]  0.170867998  0.244176051  0.95295829  0.837094612 -0.5114584197 #>  [25,] -0.753415535 -0.367034241  0.33968976 -0.060663233  0.6810299912 #>  [26,]  0.030242904 -0.108669769 -0.80151240 -0.521303057 -0.2219715482 #>  [27,] -0.080363567  0.275622638 -0.08540942 -0.909188801 -0.6696438277 #>  [28,]  0.741944784 -0.621132304  0.52456666 -0.270650870 -0.1792944344 #>  [29,]  0.417652708  0.457806112 -0.77339811  0.833583429 -0.9742750009 #>  [30,] -0.812767109  0.672255357  0.61298169  0.660975884 -0.9190949067 #>  [31,]  0.125073239 -0.612747194 -0.95491681  0.475485748 -0.8467685357 #>  [32,]  0.548715138  0.002459539  0.53761108  0.659559209 -0.9896544949 #>  [33,]  0.021758302  0.887783890 -0.45199291  0.558241512  0.4922744306 #>  [34,]  0.781166208  0.491526808  0.67659764 -0.955636518  0.1376646711 #>  [35,] -0.483499768  0.718503149 -0.22032562 -0.510948340  0.6404783712 #>  [36,]  0.895005345 -0.677671223 -0.82033822 -0.010933337 -0.4095390453 #>  [37,]  0.683894925 -0.867922412 -0.90929592 -0.690134336  0.0127973491 #>  [38,] -0.380702541  0.040343923 -0.36155186  0.844116821  0.0030814894 #>  [39,]  0.778445582 -0.867499262 -0.05160033  0.554356255  0.8959710016 #>  [40,]  0.389552498 -0.626635521  0.05663758 -0.599213785  0.3100100923 #>  [41,] -0.534583297 -0.727778299 -0.83330454  0.975959345 -0.6345895664 #>  [42,]  0.645252144  0.820871485 -0.73437187 -0.677936636 -0.0122119286 #>  [43,] -0.339240379 -0.278289412  0.56757601 -0.936367112 -0.7834376292 #>  [44,]  0.901517572  0.072366255 -0.03876337 -0.393796466 -0.3686885051 #>  [45,]  0.469713111  0.619135770  0.62946461 -0.984776993 -0.4775332292 #>  [46,] -0.897784385 -0.272669236  0.59361605 -0.348321211  0.8800851703 #>  [47,] -0.815971639  0.067191361  0.60268113  0.010610921  0.0979166729 #>  [48,]  0.893756703 -0.379905213 -0.91811586  0.312020238  0.3338963841 #>  [49,] -0.781066332  0.916444805 -0.20377699 -0.086622213 -0.4692191640 #>  [50,]  0.136512367 -0.154996133  0.20364227 -0.130167228 -0.1504302141 #>  [51,] -0.755903756 -0.418423334  0.78185232 -0.189313812  0.9305789829 #>  [52,]  0.302452193  0.776602695  0.20871303 -0.123152530 -0.3548164149 #>  [53,] -0.118173309  0.334330813  0.11162461  0.102924738 -0.8901229301 #>  [54,] -0.283576987  0.650454334  0.53909570  0.021326344 -0.3499150570 #>  [55,] -0.352929298  0.403720738 -0.68015172  0.122418567  0.6581885098 #>  [56,] -0.329648682  0.305120305 -0.95071476  0.542584231  0.9254494677 #>  [57,] -0.137938333 -0.027940932 -0.50802616 -0.225817882 -0.0536062932 #>  [58,] -0.829826812 -0.496318373  0.06226366  0.383970662  0.5241269022 #>  [59,] -0.977810331 -0.299032636  0.98612249 -0.992049875  0.3125043223 #>  [60,]  0.142835598  0.951192075  0.41487753 -0.672515232  0.9853994153 #>  [61,]  0.177344457  0.945979337  0.78090905  0.255928957 -0.8541000220 #>  [62,]  0.499724864  0.461256229 -0.21847640 -0.667238837  0.8681704374 #>  [63,] -0.654053530 -0.606831883 -0.88133399 -0.001572353 -0.9308269038 #>  [64,] -0.527493706  0.509055660 -0.97381326  0.885247614 -0.9191508056 #>  [65,] -0.129094618 -0.943526219 -0.03395335  0.730764674  0.5018936018 #>  [66,] -0.606317268  0.150129648 -0.37448645  0.769124202  0.5402636658 #>  [67,] -0.804763938 -0.150109256  0.37805439 -0.296702762 -0.4168215198 #>  [68,] -0.373596999 -0.662577414 -0.45687865 -0.454293228 -0.3210082068 #>  [69,] -0.919287894 -0.270776833  0.30799794  0.567937707  0.0005838131 #>  [70,] -0.365580670 -0.361432973 -0.22116671 -0.733737464  0.1900140499 #>  [71,] -0.365887445  0.210790634 -0.60712250  0.199130058  0.7746860501 #>  [72,]  0.202926296  0.096302760 -0.19982405  0.015361442  0.8935128930 #>  [73,]  0.071101783 -0.549234623 -0.88694057  0.023539500  0.9595495895 #>  [74,]  0.884732158  0.705084738  0.35390976  0.387633042  0.2359927599 #>  [75,] -0.035973855  0.585425537 -0.01594210  0.454314074 -0.4704862628 #>  [76,]  0.148772403  0.165782432  0.75700074 -0.148071851 -0.7128844485 #>  [77,]  0.913884149  0.484983403 -0.29326168 -0.914584913 -0.9231591322 #>  [78,]  0.809840166 -0.032798985  0.32872662 -0.096851980 -0.4549894454 #>  [79,]  0.402002292 -0.939797211 -0.67358861 -0.036622636 -0.0658116289 #>  [80,] -0.799183173 -0.568318083 -0.69357443 -0.238636856 -0.1219881028 #>  [81,]  0.803289083 -0.748980393 -0.85352689 -0.512034912 -0.1272810916 #>  [82,]  0.627552447 -0.935983239  0.92415101 -0.930679264  0.4065751191 #>  [83,]  0.229486174  0.839497721 -0.24502150 -0.912783538 -0.6615085998 #>  [84,] -0.673507547 -0.350239717 -0.89610593  0.909108363  0.8885369017 #>  [85,]  0.901144647 -0.028794733 -0.76652479 -0.655259015  0.2337668398 #>  [86,] -0.274918561 -0.607346386 -0.50885526 -0.064127439 -0.7510536662 #>  [87,]  0.434886161 -0.378035080 -0.64287987  0.133200034 -0.8844983457 #>  [88,]  0.944274450 -0.853010236  0.99438222 -0.632300172  0.5724394387 #>  [89,] -0.980195760  0.477281678 -0.31727074  0.084140546 -0.7737578633 #>  [90,]  0.449841609 -0.990328905  0.16329698 -0.541304273  0.9320050310 #>  [91,]  0.117617319  0.158157861  0.80467152 -0.821086538 -0.3362066615 #>  [92,]  0.940201316  0.001283437 -0.61478367 -0.614858655  0.8794810511 #>  [93,]  0.655954006  0.717979797  0.97653988  0.140825796  0.3566948911 #>  [94,] -0.412547957  0.965988408 -0.24024592 -0.943371431 -0.2986487066 #>  [95,] -0.637340903  0.117296196 -0.06895661  0.120590899  0.7302806024 #>  [96,] -0.497900045  0.846804722 -0.98198402 -0.940804135  0.0850455905 #>  [97,]  0.886393685  0.863975457  0.24655267 -0.323515721 -0.9422583673 #>  [98,]  0.039003907 -0.422344700 -0.59519857 -0.644701440  0.8951306343 #>  [99,] -0.465227531 -0.643094931  0.02089325  0.873302476  0.8433758128 #> [100,]  0.807938661  0.259027053  0.06766149  0.530538652 -0.5246241465 #>  #> $y #>   [1] 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 0 1 0 1 1 0 1 0 1 1 0 0 0 0 0 #>  [38] 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 1 0 1 1 1 1 0 #>  [75] 1 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 1 1 0 #>"},{"path":[]},{"path":[]},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"major-changes-1-0-5","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"bark 1.0.5","text":"improve computational efficiency saving old log likelihood values rather recomputing; improve compuational speed close factor 2 replace .C .Call computing design matrix (resolves CRAN warning noRemap)","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bug-fixes-1-0-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"bark 1.0.5","text":"identified error calculation covariance matrix coeffients R/llike.R updated code. (result close large effect)","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-104","dir":"Changelog","previous_headings":"","what":"bark 1.0.4","title":"bark 1.0.4","text":"CRAN release: 2023-04-18 archived 3/31 due unit test failure MKL R-devel gcc skip unit test CRAN test code deprecated shortly.","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-103","dir":"Changelog","previous_headings":"","what":"bark 1.0.3","title":"bark 1.0.3","text":"failed MKL checks","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-103-1","dir":"Changelog","previous_headings":"","what":"bark 1.0.3","title":"bark 1.0.3","text":"failed MKL checks","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-101","dir":"Changelog","previous_headings":"","what":"bark 1.0.1","title":"bark 1.0.1","text":"CRAN release: 2023-03-09","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"minor-changes-1-0-1","dir":"Changelog","previous_headings":"","what":"minor changes","title":"bark 1.0.1","text":"update longer running examples use \\donttest rather \\dontrun add reference DESCRIPTION","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"bark 1.0.0","text":"output bark now bark object allow S3 methods replace input arguments y.train x.train use model formula dataframe inputs. replaced argument type two logical variables: selection common_lambdas intuitive. changed running times examples address issue https://CRAN.R-project.org/package=bark led package archived 2015 added registration native routines foreign function calls disabled symbol search src/bark-init.c updated NAMESPACE replaced kernel calculation using .C .Call improve speed src/kernelCalculationCall.cpp R/llike.R added unit tests testthat code coverage reported CI; code coverage badge added README. Unit tests now cover 99% code reported CodeCov added GitHub actions CI checks Windows, MacOSX, Ubuntu added R CMD check passing Badge README.md GitHub repo. converted help files use roxygen tags deprecated functions sim.Circle, sim.Friedman1, sim.Friedman2, sim.Friedman3 created new versions sim_circle, sim_Friedman1, sim_Friedman2, sim_Friedman3 avoid confusion S3 methods updated CODE_OF_CONDUCT.md, SECURITY.md, CONTRIBUTING.md GitHub repo updates OpenSSF BestPractices Badge (added README.md)","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"bark 1.0.0","text":"GitHub Issue #1 Added type checks src/kernelCalculationCall.cpp coerce inputs correct type (unit tests testthat/test-llike.R) reported GitHub Issue #3 Addressed error p = 1 subsetting resulted output vector due drop dimension. Added unit test testthat/test-bark.R","code":""}]
