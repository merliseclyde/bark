[{"path":[]},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team clyde@duke.edu. project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to bark development","title":"Contributing to bark development","text":"goal guide help contribute bark. guide divided three main pieces: Filing bug report feature request issue Github. Suggesting change via pull request. Coding Style Guide Contributions bark","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"feature-requests","dir":"","previous_headings":"Issues","what":"Feature Requests","title":"Contributing to bark development","text":"wish easily extract additional information bark objects ? like see new functionality available bark? , feel free fill feature request! Please describe much detail like added. can anything just idea code advanced user!","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"bug-reports","dir":"","previous_headings":"Issues","what":"Bug Reports","title":"Contributing to bark development","text":"filing bug report issue, important thing include minimal reproducible example can quickly verify problem, figure fix . three things need include make example reproducible: required packages, data, code. Packages loaded top script, ’s easy see ones example needs. easiest way include data use dput() generate R code recreate . example, recreate mtcars dataset R, ’d perform following steps: Run dput(mtcars) R Copy output reproducible script, type mtcars <- paste. even better can create data.frame() just handful rows columns still illustrates problem. Spend little bit time ensuring code easy others read: make sure ’ve used spaces variable names concise, informative (OK using “.”, camel case “_” variable names improve readibility. details see Style Guide use comments indicate problem lies best remove everything related problem. shorter code , easier understand. can check actually made reproducible example starting fresh R session pasting script . (Unless ’ve specifically asked , please don’t include output sessionInfo().)","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"other-issues","dir":"","previous_headings":"Issues","what":"Other issues","title":"Contributing to bark development","text":"sure something bug undocumented feature, see possible errors help files documentation use clarification (issue) please file regular issue","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to bark development","text":"contribute change bark, follow steps: Create branch git make changes, ideally using commit -s sign-commits Developer Certificate Origin. Make sure branch passes R CMD check. Push branch github issue pull request (PR). Discuss pull request. Iterate either accept PR decide ’s good fit bark. steps described detail . might feel overwhelming first time get set , gets easier practice. get stuck point, please reach help. ’re familiar git github, please start reading http://r-pkgs..co.nz/git.html Pull requests evaluated following checklist: Motivation. pull request clearly concisely motivates need change. Please describe problem show pull request solves concisely possible. Also include motivation NEWS new release bark comes ’s easy users see ’s changed. Add item top file use markdown formatting. news item end (@yourGithubUsername, #the_issue_number). related changes. submit pull request, please check make sure haven’t accidentally included unrelated changes. make harder see exactly ’s changed, evaluate unexpected side effects. PR corresponds git branch, expect submit multiple changes make sure create multiple branches. multiple changes depend , start first one don’t submit others first one processed. Document ’re adding new parameters new function, ’ll also need document roxygen. Please add short example appropriate function optionally package vignettes. Make sure re-run devtools::document() code submitting. (sure include name authors function!) Testing fixing bug adding new feature, add testthat unit test. seems like lot work don’t worry pull request isn’t perfect. ’s learning process hand help . pull request process, unless ’ve submitted past ’s unlikely pull request accepted . Please don’t submit pull requests change existing behaviour. Instead, think can add new feature minimally invasive way.","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"style-guide-for-contributing-to-bark","dir":"","previous_headings":"","what":"Style Guide for Contributing to bark","title":"Contributing to bark development","text":"consistent style improves readibility code. wed particular style generally draw Google Style Guide well Hadley Wickham’s Style Guide noted . Using package styler enforce styling barked TidyVerse helpful, required. Function Variable names: Use informative names using “.”, camel case, “_” improve readibility, .e. variable.name, VariableName variable_name, rather foo xxx. tend avoid _ historical reasons going back S. Assignment: Use either <- = assignment consistent within contribution. many style guides prefer <- suggest using styler enforce use <-, OK = shorter type! Just consistent within contributed code. Spaces: Include spaces around operators =, +, -, <-,  == etc improve readibility. Put space comman, . : :: never spaces around . Additional spaces newlines fine improve readibilty code (e.g. aligmnent arguments). Comments: Comment code whenever can. Explain clear code. Use # start comment followed space capitalize first letter; short inline comments (comments line code) need two spaces # Curly Braces: opening curly brace never go line, closing curly brace go line. exception short conditional statement shuch else code may fit one line. Indentation: Use 2 spaces rather tabs per level indentation. Indent code inside curly braces. Semi-colons: use semi-colons put one statement line. Line Length: Use 80 characters per line code. RStudio setting display vertical line 80 characters visually assist . Turn going Tools -> Global Options… -> Code -> Display -> Show margin File names R code informative end .R. Use - improve readibility. include spaces file names! Contributing adopted ggplot2’s CONTRIBUTING.md","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"supported-versions","dir":"","previous_headings":"","what":"Supported Versions","title":"Security Policy","text":"Supported security updates.","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"Please submit vulnerability reports Github Issues maintainers address soon possibl","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"expectations","dir":"","previous_headings":"","what":"Expectations","title":"Security Policy","text":"package utilizes C code efficiency allocates/frees memory. package checked memory leaks prior releases CRAN using ASAN/UBSBAN. package distributed via CRAN https://CRAN.R-project.org/package=bark reports additional checks. development version may installed GitHub https://github.com/merliseclyde/bark checked via github actions (users may check current version passing badge installing) Bugs reported via Issue tracker handled soon possible. (See link )","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"assurance","dir":"","previous_headings":"","what":"Assurance","title":"Security Policy","text":"highly unlikely malicious code added package. submissions CRAN require verification via maintainer’s email, protected via two factor authentication. pull requests contributions github verified lead maintainer. Based Code Conduct Contributing Guidelines modifications include unit tests cover additional code blocks.","code":""},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"get latest version {r bark}, install github (needs compilation))","code":"devtools::install_github(\"merliseclyde/bark\") library(bark)"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"illustrate feature selection simple simulated example Friedman bark similar SVM, however allows different kernel smoothing parameters every dimension inputs \\(x\\) using option common_lambdas = FALSE well selection inputs allowing kernel smoothing parameters zero using option selection = TRUE. plot shows posterior draws \\(\\lambda\\) simulated data two scenarios allowing different \\(\\lambda_d\\) dimension without selection.   plots \\(\\lambda_j\\) without selection (top) selection (bottom) similar, additional shrinkage values towards zero lead improvement RMSE.","code":"set.seed(42) traindata <- data.frame(sim_Friedman2(200, sd=125)) testdata <- data.frame(sim_Friedman2(1000, sd=0)) set.seed(42) fit.bark.d <- bark(y ~ ., data = traindata,                    testdata= testdata,                    classification=FALSE,                     selection = FALSE,                    common_lambdas = FALSE, #                   fixed = list(eps = .25, gam = 2.5),                    nburn = 100,                    nkeep = 250,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1604.15 set.seed(42) fit.bark.sd <- bark(y ~ ., data=traindata,                     testdata = testdata,                     classification=FALSE,                      selection = TRUE,                     common_lambdas = FALSE,                     fixed = list(eps = .5, gam = 5),                     nburn = 100,                     nkeep = 250,                     printevery = 10^10)  mean((fit.bark.sd$yhat.test.mean-testdata$y)^2) #> [1] 1355.865 boxplot(as.data.frame(fit.bark.d$theta.lambda)) boxplot(as.data.frame(fit.bark.sd$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"compare {r bark} two popular methods, {r BART} {r SVM} provide flexible models also non-linear input variables.","code":"bart.available =  suppressMessages(require(BART)) svm.available  =  suppressMessages(require(e1071)) io.available  =  suppressMessages(require(fdm2id))"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"svm","dir":"Articles","previous_headings":"Comparison","what":"SVM","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"","code":"if (svm.available) {   friedman2.svm = svm(y ~ ., data=traindata, type=\"eps-regression\")   pred.svm = predict(friedman2.svm, testdata)   mean((pred.svm - testdata$y)^2) } #> [1] 6774.121"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"bart","dir":"Articles","previous_headings":"Comparison","what":"BART","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"","code":"if (bart.available) {  y.loc = match(\"y\", colnames(traindata))  friedman2.bart = wbart(x.train = as.matrix(traindata[ , -y.loc]),                          y.train =  traindata$y)   pred.bart =   predict(friedman2.bart,                          as.matrix(testdata[ , -y.loc]))   yhat.bart = apply(pred.bart, 2, mean)   mean((yhat.bart - testdata$y)^2) }  #> *****Into main of wbart #> *****Data: #> data:n,p,np: 200, 4, 0 #> y1,yn: -160.199247, -161.188667 #> x1,x[n*p]: 91.480604, 2.404099 #> *****Number of Trees: 200 #> *****Number of Cut Points: 100 ... 100 #> *****burn and ndpost: 100, 1000 #> *****Prior:beta,alpha,tau,nu,lambda: 2.000000,0.950000,33.129480,3.000000,7744.575956 #> *****sigma: 199.394818 #> *****w (weights): 1.000000 ... 1.000000 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,4,0 #> *****nkeeptrain,nkeeptest,nkeeptestme,nkeeptreedraws: 1000,1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skipteme,skiptreedraws: 1,1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 3s #> check counts #> trcnt,tecnt,temecnt,treedrawscnt: 1000,0,0,1000 #> *****In main of C++ for bart prediction #> tc (threadcount): 1 #> number of bart draws: 1000 #> number of trees in bart sum: 200 #> number of x columns: 4 #> from x,np,p: 4, 1000 #> ***using serial code #> [1] 4605.555"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"classification-example","dir":"Articles","previous_headings":"Comparison","what":"Classification Example","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"data generated first 2 dimensions matter  plot shows posterior draws \\(\\lambda\\) simulated data. ## SVM","code":"set.seed(42) n = 500 circle2 = data.frame(sim_circle(n, dim = 5)) train = sample(1:n, size = floor(n/2), rep=FALSE) plot(x.1 ~ x.2, data=circle2, col=y+1) set.seed(42) circle2.bark = bark(y ~ ., data=circle2, subset=train,                     testdata = circle2[-train,],                     classification = TRUE,                     selection = TRUE,                     common_lambdas = FALSE,                     fixed = list(eps = .5, gam = 5),                     nburn = 100,                     nkeep = 250,                     printevery = 10^10) #Classify # mean((circle2.bark$yhat.test.mean > 0) != circle2[-train, \"y\"]) #> [1] 0.02 boxplot(as.data.frame(circle2.bark$theta.lambda)) if (svm.available) {   circle2.svm = svm(y ~ ., data=circle2[train,], type=\"C\")   pred.svm = predict(circle2.svm, circle2[-train,])   mean(pred.svm != circle2[-train, \"y\"]) } #> [1] 0.104 if (bart.available) {   y.loc = match(\"y\", colnames(circle2))   circle.bart = pbart(x.train = as.matrix(circle2[train, -y.loc]),                              y.train =  circle2[train, y.loc])   pred.bart =   predict(circle.bart, as.matrix(circle2[-train, -y.loc]))   mean((pred.bart$prob.test.mean > .5) != circle2[-train, y.loc]) }  #> *****Into main of pbart #> *****Data: #> data:n,p,np: 250, 5, 0 #> y1,yn: 0, 0 #> x1,x[n*p]: -0.791174, 0.207159 #> *****Number of Trees: 50 #> *****Number of Cut Points: 100 ... 100 #> *****burn and ndpost: 100, 1000 #> *****Prior:mybeta,alpha,tau: 2.000000,0.950000,0.212132 #> *****binaryOffset: -0.030084 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,5,0 #> *****nkeeptrain,nkeeptest,nkeeptreedraws: 1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skiptreedraws: 1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 1s #> check counts #> trcnt,tecnt: 1000,0 #> *****In main of C++ for bart prediction #> tc (threadcount): 1 #> number of bart draws: 1000 #> number of trees in bart sum: 50 #> number of x columns: 5 #> from x,np,p: 5, 250 #> ***using serial code #> [1] 0.048"},{"path":"http://merliseclyde.github.io/bark/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Merlise Clyde. Author, maintainer, thesis advisor.            ORCID=0000-0002-3595-1872 Zhi Ouyang. Author. Robert Wolpert. Contributor, thesis advisor.","code":""},{"path":"http://merliseclyde.github.io/bark/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clyde M, Ouyang Z (2023). bark: Bayesian Additive Regression Kernels. R package version 1.0.5, https://CRAN.R-project.org/package=bark.","code":"@Manual{,   title = {bark: Bayesian Additive Regression Kernels},   author = {Merlise Clyde and Zhi Ouyang},   year = {2023},   note = {R package version 1.0.5},   url = {https://CRAN.R-project.org/package=bark}, }"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"bark-bayesian-additive-regression-kernels","dir":"","previous_headings":"","what":"Bayesian Additive Regression Kernels","title":"Bayesian Additive Regression Kernels","text":"bark package implements estimation Bayesian nonparametric regression model represented sum multivariate Gaussian kernels flexible model capture nonlinearities, interactions feature selection.","code":""},{"path":"http://merliseclyde.github.io/bark/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Additive Regression Kernels","text":"can install released version bark  CRAN : development version GitHub : (verify branch passing R CMD check badge )","code":"install.packages(\"bark\") require(\"devtools\") devtools::install_github(\"merliseclyde/bark\")"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Additive Regression Kernels","text":"bark similar SVM, however allows different kernel smoothing parameters every dimension inputs x well selection inputs allowing kernel smoothing parameters zero. plot shows posterior draws λ simulated data.  posterior distribution λ1 λ4 concentrated near zero, leads x1 x2 dropping mean function.","code":"library(bark) set.seed(42) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) fit.bark.d <- bark(y ~ .,                      data=data.frame(traindata),                     testdata = data.frame(testdata),                    classification=FALSE,                     selection = TRUE,                    common_lambdas = FALSE,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1738.992 boxplot(as.data.frame(fit.bark.d$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"roadmap-for-future-enhancements","dir":"","previous_headings":"","what":"Roadmap for Future Enhancements","title":"Bayesian Additive Regression Kernels","text":"next year following enhancements planned: port R code C/C++ improvements speed add S3 methods predict, summary, plot add additional kernels better hyperparameter specification features like see added, please feel free create issue GitHub can discuss!","code":""},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Swiss Bank Notes — banknotes","title":"Swiss Bank Notes — banknotes","text":"data set contains six measurements 100 genuine  100 fradulent old Swiss banknotes","code":""},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swiss Bank Notes — banknotes","text":"","code":"data(banknotes)"},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Swiss Bank Notes — banknotes","text":"dataframe following variables: Status status banknote: genuine counterfeit Length Length bill (mm) Left Width left edge (mm) Right Width right edge (mm) Bottom Bottom margin width (mm) Top Top margin width (mm) Diagonal Length diagonal (mm)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/banknotes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Swiss Bank Notes — banknotes","text":"Flury, B. Riedwyl, H. (1988). Multivariate Statistics:  practical approach. London: Chapman & Hall, Tables 1.1 1.2, pp. 5-8.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"x.train Explanatory variables training (sample) data. Must matrix doubles, (usual) rows corresponding observations columns variables. y.train Dependent variable training (sample) data. y numeric continuous response model fit (normal errors). y logical (just values 0 1), binary response model probit link fit. x.test Explanatory variables test (sample) data. structure x.train. type BARK type, e, d, se, sd, default choice se.e: BARK equal weights.d: BARK different weights.se: BARK selection equal weights.sd: BARK selection different weights. classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"bark returns list, including: fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters etc. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"","code":"# Simulate regression example #  Friedman 2 data set, 200 noisy training, 1000 noise free testing #  Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) #  Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) # example with a very small number of iterations to illustrate the method fit.bark.d <- bark_mat(traindata$x, traindata$y, testdata$x,                   nburn=10, nkeep=10, keepevery=10,                   classification=FALSE, type=\"d\") #> [1] \"Starting BARK-d for this regression problem\" boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 23643.46 # \\donttest{  # Simulate classification example  #  Circle 5 with 2 signals and three noisy dimensions  #  Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  #  Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark_mat(traindata$x, traindata$y, testdata$x, classification=TRUE, type=\"se\") #> [1] \"Starting BARK-se for this classification problem\" #> [1] \"burning iteration 1000, J=16, max(nj)=1\" #> [1] \"burning iteration 2000, J=10, max(nj)=1\" #> [1] \"burning iteration 3000, J=14, max(nj)=1\" #> [1] \"burning iteration 4000, J=17, max(nj)=2\" #> [1] \"burning iteration 5000, J=15, max(nj)=1\" #> [1] \"burning iteration 6000, J=11, max(nj)=2\" #> [1] \"burning iteration 7000, J=15, max(nj)=2\" #> [1] \"burning iteration 8000, J=12, max(nj)=1\" #> [1] \"burning iteration 9000, J=9, max(nj)=1\" #> [1] \"burning iteration 10000, J=8, max(nj)=1\" #> [1] \"posterior mcmc iteration 1000, J=12, max(nj)=1\" #> [1] \"posterior mcmc iteration 2000, J=6, max(nj)=1\" #> [1] \"posterior mcmc iteration 3000, J=15, max(nj)=1\" #> [1] \"posterior mcmc iteration 4000, J=12, max(nj)=1\" #> [1] \"posterior mcmc iteration 5000, J=12, max(nj)=1\" #> [1] \"posterior mcmc iteration 6000, J=10, max(nj)=1\" #> [1] \"posterior mcmc iteration 7000, J=11, max(nj)=1\" #> [1] \"posterior mcmc iteration 8000, J=14, max(nj)=2\" #> [1] \"posterior mcmc iteration 9000, J=11, max(nj)=1\" #> [1] \"posterior mcmc iteration 10000, J=11, max(nj)=1\"  boxplot(data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.023 # }"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package bark. — bark-package-deprecated","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"<function>-deprecated\").","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"","code":"bark_mat(   x.train,   y.train,   x.test = matrix(0, 0, 0),   type = \"se\",   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )  sim.Friedman1(n, sd = 1)  sim.Friedman2(n, sd = 125)  sim.Friedman3(n, sd = 0.1)  sim.Circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"List deprecated functions","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"bark-mat","dir":"Reference","previous_headings":"","what":"bark_mat","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"Old version matrix inputs used testing;","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman-","dir":"Reference","previous_headings":"","what":"sim.Friedman1","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman1, use sim_Friedman1.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--1","dir":"Reference","previous_headings":"","what":"sim.Friedman2","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman2, use sim_Friedman2.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--2","dir":"Reference","previous_headings":"","what":"sim.Friedman3","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman3, use sim_Friedman3.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-circle","dir":"Reference","previous_headings":"","what":"sim.Circle","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Circle, use sim_circle.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bark:  Bayesian Additive Regression Trees — bark-package","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"Implementation Bayesian Additive Regression Kernels  Feature Selection  Nonparametric Regression  Gaussian regression  classification binary Probit models","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"BARK Bayesian sum--kernels model Bayesian priors Bayesian Additive Regression Kernel model.  numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link). cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). bark  uses approximated Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions setting values selection (TRUE FALSE), allows scale parameters variables set zero, removing variables kernels selection = TRUE; enables either soft shrinkage hard  shrinkage scale parameters. input common_lambdas (TRUE FALSE) specifies whether common scale parameter used predictors (TRUE) FALSE allows scale parameters differ across variables kernel.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"","code":"# \\donttest{  # Simulate regression example  # Friedman 2 data set, 200 noisy training, 1000 noise free testing  # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600)  # Out of sample MSE in BART (default):    5300 (sd. 1000)  traindata <- sim_Friedman2(200, sd=125)  testdata <- sim_Friedman2(1000, sd=0)  fit.bark.d <- bark(y ~ ., data = data.frame(traindata),                     testdata = data.frame(testdata),                      classification = FALSE,                     selection = FALSE,                     common_lambdas = TRUE)  boxplot(as.data.frame(fit.bark.d$theta.lambda))   mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 3674.253  # Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark(y ~ ., data= data.frame(traindata),                       testdata= data.frame(testdata),                      classification=TRUE,                       selection=TRUE,                      common_lambdas = FALSE)                      boxplot(as.data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.049 # }"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"bark(   formula,   data,   subset,   na.action = na.omit,   testdata = NULL,   selection = TRUE,   common_lambdas = TRUE,   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   verbose = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"formula model formula model predictors, Y ~ X.  X variables centered scaled part model fitting. data data frame.  Factors converted numerical vectors based using `model.matrix`. subset optional vector specifying subset observations used fitting process. na.action function indicates happen data contain NAs. default \"na.omit\". testdata Dataframe test data sample prediction. structure data. selection Logical variable indicating whether variable  dependent kernel parameters \\(\\lambda\\) may set zero MCMC;  default TRUE. common_lambdas Logical variable indicating whether kernel parameters \\(\\lambda\\) predictor specific common across predictors;  default TRUE.   Note  common_lambdas = TRUE  selection = TRUE applies just non-zero \\(lambda_j\\). classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. verbose Logical, whether print messages fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"bark returns object class `bark` list, including: call matched call fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data;  NULL testdata provided yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"##Simulated regression example # Friedman 2 data set, 200 noisy training, 1000 noise free testing # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) # Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- data.frame(sim_Friedman2(200, sd=125)) testdata <- data.frame(sim_Friedman2(1000, sd=0)) # example with a very small number of iterations to illustrate usage fit.bark.d <- bark(y ~ ., data=traindata, testdata= testdata,                    nburn=10, nkeep=10, keepevery=10,                    classification=FALSE,                     common_lambdas = FALSE,                    selection = FALSE) boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 11572.58 # \\donttest{  ##Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_circle(200, dim=5)  testdata <- sim_circle(1000, dim=5)  fit.bark.se <- bark(y ~ .,                       data=data.frame(traindata),                       testdata= data.frame(testdata),                       classification=TRUE,                      nburn=100, nkeep=200, )  boxplot(as.data.frame(fit.bark.se$theta.lambda))   mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) #> [1] 0.021 # }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"sim.Circle(n, dim=5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"if (FALSE) {   sim.Circle(n=100, dim = 5) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"sim.Friedman1(n, sd=1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"if (FALSE) { sim.Friedman1(100, sd=1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"sim.Friedman2(n, sd=125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"if (FALSE) { sim.Friedman2(100, sd=125) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"sim.Friedman3(n, sd=0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"if (FALSE) { sim.Friedman3(n=100, sd=0.1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim_Friedman1","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(n, sd = 1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(100, sd=1) #> $x #>               [,1]        [,2]       [,3]        [,4]        [,5]        [,6] #>   [1,] 0.120711549 0.164071912 0.37159219 0.153817283 0.195066226 0.594405136 #>   [2,] 0.395130168 0.651668630 0.08290795 0.190273296 0.314447993 0.487070067 #>   [3,] 0.932483536 0.621879084 0.74800537 0.659063818 0.188088750 0.115380208 #>   [4,] 0.483988454 0.136013510 0.67007753 0.619587671 0.645046944 0.864775468 #>   [5,] 0.270188970 0.351777751 0.37958716 0.041586237 0.644652153 0.863373738 #>   [6,] 0.473525587 0.504706543 0.07569142 0.313683671 0.045352796 0.615278115 #>   [7,] 0.736246082 0.418811660 0.22045838 0.634843168 0.488858178 0.273086933 #>   [8,] 0.098176617 0.574008542 0.28467612 0.207873919 0.124789379 0.607754322 #>   [9,] 0.493898928 0.877727148 0.74132014 0.667104334 0.436000917 0.806331273 #>  [10,] 0.126668877 0.345624665 0.16522313 0.272079809 0.394950798 0.344284252 #>  [11,] 0.105288250 0.573246329 0.19455707 0.992779328 0.410540486 0.199509212 #>  [12,] 0.274801018 0.914839623 0.42634225 0.292803500 0.520180112 0.449265228 #>  [13,] 0.782916028 0.831348925 0.35534232 0.166858426 0.884416917 0.163948179 #>  [14,] 0.701423592 0.305309042 0.56503055 0.421866522 0.775650756 0.411606890 #>  [15,] 0.103224653 0.424794887 0.84722922 0.938842119 0.232117657 0.104348572 #>  [16,] 0.566931770 0.250671815 0.56544007 0.412636086 0.568389138 0.754886389 #>  [17,] 0.488098720 0.338527380 0.44795248 0.871045269 0.138571140 0.659988243 #>  [18,] 0.427113285 0.597023329 0.42570260 0.178014925 0.895593285 0.774578846 #>  [19,] 0.973434676 0.655119842 0.32225084 0.102676621 0.935617475 0.572141869 #>  [20,] 0.326339191 0.999258465 0.85007945 0.648010816 0.182452630 0.693295972 #>  [21,] 0.903999065 0.949407874 0.30701456 0.647217209 0.444411196 0.007598929 #>  [22,] 0.798498382 0.821407094 0.89816928 0.390380408 0.300568403 0.209493166 #>  [23,] 0.477006690 0.741626104 0.20446917 0.926701431 0.999100730 0.104501794 #>  [24,] 0.834286886 0.649721910 0.79381521 0.472460855 0.418776871 0.197976212 #>  [25,] 0.137485492 0.221083417 0.72759518 0.868712294 0.429656174 0.949637227 #>  [26,] 0.884163298 0.535629752 0.51611564 0.324303455 0.013055493 0.719473746 #>  [27,] 0.284394757 0.058516843 0.88466184 0.908796998 0.402541579 0.751070853 #>  [28,] 0.054592395 0.023875199 0.44448977 0.312992066 0.894506455 0.855225175 #>  [29,] 0.456032714 0.403660168 0.24389990 0.890258077 0.728147583 0.095838296 #>  [30,] 0.862703037 0.875654386 0.31585164 0.001554627 0.494777587 0.350020620 #>  [31,] 0.795959375 0.602979461 0.31929638 0.028521318 0.039872966 0.782132589 #>  [32,] 0.011110557 0.867508969 0.06685212 0.400453790 0.121516803 0.676668687 #>  [33,] 0.474177529 0.790088139 0.99057719 0.145633399 0.913736565 0.468589834 #>  [34,] 0.110156311 0.039657200 0.24575912 0.545514866 0.663333012 0.950949053 #>  [35,] 0.300619276 0.057807803 0.74693531 0.084897634 0.675168967 0.864488169 #>  [36,] 0.439096377 0.245178167 0.03317674 0.277394509 0.187071135 0.055339952 #>  [37,] 0.098355537 0.399432387 0.25962407 0.034150706 0.733670033 0.512304576 #>  [38,] 0.007505710 0.798511248 0.11843291 0.739525106 0.964766004 0.308765340 #>  [39,] 0.314959425 0.944754084 0.45059047 0.526815596 0.176632406 0.509908012 #>  [40,] 0.104434120 0.176248402 0.42225207 0.092578945 0.538609072 0.352425487 #>  [41,] 0.720493418 0.370394425 0.72131690 0.211087035 0.678877731 0.412160395 #>  [42,] 0.461589668 0.543584545 0.19418412 0.984094226 0.222555401 0.440668928 #>  [43,] 0.249082241 0.410786171 0.04263988 0.702828857 0.155848268 0.462916717 #>  [44,] 0.719084489 0.507657120 0.90423530 0.075398272 0.020352326 0.900988659 #>  [45,] 0.220510714 0.466357650 0.97651917 0.232979079 0.424542569 0.782234050 #>  [46,] 0.528013698 0.956656405 0.70505259 0.143794932 0.902318874 0.334697653 #>  [47,] 0.395873182 0.195789168 0.78888008 0.473401800 0.784067563 0.053981562 #>  [48,] 0.609996406 0.634120848 0.23560592 0.259865030 0.272376491 0.475708951 #>  [49,] 0.708033576 0.481548042 0.77960386 0.452054079 0.128478401 0.637357027 #>  [50,] 0.681889871 0.828356184 0.28132062 0.474079298 0.125986601 0.012495380 #>  [51,] 0.972306283 0.491035020 0.21569998 0.934150179 0.167097454 0.867188303 #>  [52,] 0.367654093 0.720035572 0.24953003 0.770087181 0.549930556 0.689767995 #>  [53,] 0.619072024 0.950333872 0.43548609 0.421743951 0.135556898 0.524734393 #>  [54,] 0.075372237 0.281526723 0.78410318 0.979861676 0.565516270 0.767731863 #>  [55,] 0.062911900 0.330981243 0.14501498 0.294432525 0.196675572 0.046070951 #>  [56,] 0.823293382 0.396825663 0.02836417 0.748646104 0.440587193 0.372325155 #>  [57,] 0.249064191 0.592657757 0.96484713 0.745052494 0.751520758 0.699269128 #>  [58,] 0.060139423 0.307839269 0.76587557 0.549360857 0.970784572 0.339882934 #>  [59,] 0.439104930 0.644324177 0.58645283 0.769255483 0.810794587 0.917625749 #>  [60,] 0.492368117 0.459222961 0.10824675 0.528920826 0.657268862 0.274725821 #>  [61,] 0.602647430 0.799610549 0.09301724 0.355550488 0.828274868 0.862667502 #>  [62,] 0.739463030 0.101904083 0.96663984 0.919128946 0.805774785 0.397371782 #>  [63,] 0.570183778 0.774661280 0.49228413 0.387550067 0.030782120 0.223286083 #>  [64,] 0.751398416 0.065528275 0.15398630 0.432941871 0.202718618 0.208665907 #>  [65,] 0.322418475 0.110892530 0.90318194 0.222658503 0.088045226 0.596675106 #>  [66,] 0.650619437 0.803539599 0.85068811 0.309437671 0.339348952 0.890489646 #>  [67,] 0.667860760 0.462478021 0.35891205 0.247890759 0.933346194 0.445973482 #>  [68,] 0.120173866 0.490484146 0.78664836 0.552169993 0.340480200 0.437143899 #>  [69,] 0.221897530 0.884629115 0.40657154 0.474577651 0.620883471 0.374144799 #>  [70,] 0.070326121 0.094145320 0.50316042 0.735667771 0.178760025 0.913354474 #>  [71,] 0.337525114 0.599612039 0.80036440 0.494011228 0.118564507 0.319362538 #>  [72,] 0.071488785 0.250996766 0.55784755 0.805162873 0.822492178 0.842800716 #>  [73,] 0.336832480 0.016926052 0.27835714 0.010876024 0.007856474 0.252900827 #>  [74,] 0.092578858 0.996524549 0.38988982 0.818776621 0.428890605 0.675023923 #>  [75,] 0.842706828 0.082357468 0.05408699 0.671539025 0.212080084 0.680339748 #>  [76,] 0.303146110 0.446681974 0.97178056 0.117257810 0.975159281 0.455808473 #>  [77,] 0.433062239 0.573552997 0.44487605 0.651929091 0.496126860 0.665511157 #>  [78,] 0.062843617 0.503128013 0.64494888 0.088668904 0.246016696 0.911504743 #>  [79,] 0.549255319 0.708582286 0.20011669 0.914707767 0.916983565 0.910718555 #>  [80,] 0.283229720 0.720022541 0.67339668 0.522739595 0.721052324 0.732049767 #>  [81,] 0.725197876 0.495670593 0.50967662 0.580124540 0.205166589 0.006854641 #>  [82,] 0.085512013 0.649537677 0.27007219 0.399497909 0.385854163 0.098838880 #>  [83,] 0.591728937 0.903582979 0.95748604 0.866482288 0.581390663 0.396703319 #>  [84,] 0.295166311 0.982547974 0.31601078 0.576091247 0.104706686 0.360025752 #>  [85,] 0.670736419 0.919373228 0.78234032 0.233411943 0.041691848 0.011437493 #>  [86,] 0.365112673 0.399389351 0.38850043 0.102478778 0.331558263 0.888313641 #>  [87,] 0.228412225 0.006953456 0.25846311 0.496563572 0.691931882 0.210590434 #>  [88,] 0.861879053 0.238947896 0.06109422 0.296133034 0.058043709 0.617442553 #>  [89,] 0.638650572 0.298442750 0.64047643 0.984906305 0.821754228 0.769162080 #>  [90,] 0.966126547 0.275746668 0.54803275 0.161330360 0.477420467 0.227394624 #>  [91,] 0.873743442 0.380866798 0.79460612 0.495467029 0.407261156 0.925877987 #>  [92,] 0.572303649 0.976564711 0.39027646 0.952931882 0.957828303 0.789990885 #>  [93,] 0.849945473 0.367665047 0.32776506 0.758964393 0.342999194 0.749614225 #>  [94,] 0.510358835 0.053661726 0.02126220 0.564717952 0.403490945 0.407352843 #>  [95,] 0.499729354 0.377664428 0.95987487 0.023336124 0.709196260 0.021700417 #>  [96,] 0.005563539 0.498094542 0.04233138 0.758887038 0.360796261 0.838353527 #>  [97,] 0.670416311 0.433343845 0.82679740 0.461592739 0.064878829 0.063705475 #>  [98,] 0.041913803 0.358899957 0.31342296 0.704304081 0.428221278 0.861338381 #>  [99,] 0.145340277 0.068660269 0.58070701 0.417780059 0.645972067 0.386725539 #> [100,] 0.832427355 0.050422922 0.67264012 0.638688787 0.753252612 0.064510327 #>               [,7]        [,8]        [,9]      [,10] #>   [1,] 0.964145738 0.996226927 0.279576497 0.96136667 #>   [2,] 0.073091739 0.357112937 0.292832850 0.17523142 #>   [3,] 0.170136564 0.923172704 0.371905998 0.19781399 #>   [4,] 0.954034661 0.051315827 0.442362019 0.53159605 #>   [5,] 0.357322860 0.757341933 0.819938700 0.07128980 #>   [6,] 0.193240117 0.759840839 0.421131093 0.82920638 #>   [7,] 0.093199356 0.613691595 0.551439669 0.79983639 #>   [8,] 0.636143900 0.836383454 0.158579284 0.23195074 #>   [9,] 0.223018336 0.542494616 0.675684520 0.01551492 #>  [10,] 0.201166359 0.848938944 0.518337988 0.96713135 #>  [11,] 0.423061099 0.016628432 0.330320370 0.78166585 #>  [12,] 0.383237062 0.792633643 0.160070505 0.01803630 #>  [13,] 0.081688502 0.811687548 0.966137377 0.19000088 #>  [14,] 0.930817574 0.925566219 0.523823261 0.21237295 #>  [15,] 0.135794126 0.280613540 0.175293381 0.90599890 #>  [16,] 0.407221886 0.347468978 0.953786231 0.19321033 #>  [17,] 0.602859886 0.449146769 0.703468159 0.03721896 #>  [18,] 0.767931140 0.245124958 0.432868335 0.50875417 #>  [19,] 0.380910317 0.979513652 0.269387551 0.29191708 #>  [20,] 0.940973344 0.875818832 0.012899761 0.68787476 #>  [21,] 0.959193968 0.255791536 0.125577779 0.47529421 #>  [22,] 0.666649718 0.581156105 0.546705510 0.45475559 #>  [23,] 0.570254704 0.262804457 0.420261743 0.01875647 #>  [24,] 0.032199939 0.175597790 0.735395929 0.97453233 #>  [25,] 0.253209615 0.406921698 0.541605068 0.71076443 #>  [26,] 0.107013264 0.310975544 0.979995677 0.47176407 #>  [27,] 0.759940157 0.477527569 0.543746952 0.83134514 #>  [28,] 0.178911433 0.557107750 0.188666548 0.61380445 #>  [29,] 0.391913551 0.945793639 0.692858781 0.19562056 #>  [30,] 0.352539468 0.810950376 0.487797740 0.51390542 #>  [31,] 0.816101808 0.999873596 0.427948204 0.47604961 #>  [32,] 0.662309889 0.073534546 0.992238127 0.73069586 #>  [33,] 0.495665236 0.512236648 0.133746113 0.26362078 #>  [34,] 0.051231700 0.778069624 0.809058624 0.57449948 #>  [35,] 0.800443952 0.921739080 0.337023727 0.79060241 #>  [36,] 0.793514610 0.775761927 0.765035693 0.02613830 #>  [37,] 0.092500107 0.188604386 0.575137851 0.02827257 #>  [38,] 0.438358846 0.530037437 0.906492752 0.62054854 #>  [39,] 0.705159455 0.453434502 0.753269808 0.66664830 #>  [40,] 0.863861336 0.614593105 0.192925669 0.94662741 #>  [41,] 0.359807411 0.157285544 0.218248874 0.66139724 #>  [42,] 0.497253170 0.998895970 0.045568958 0.20963520 #>  [43,] 0.120513690 0.373326930 0.259704495 0.08620607 #>  [44,] 0.375985225 0.016431250 0.753763481 0.65576162 #>  [45,] 0.603784557 0.837615045 0.400019518 0.15719078 #>  [46,] 0.700772519 0.631219824 0.864907338 0.49223560 #>  [47,] 0.374218969 0.371224447 0.447620502 0.74088227 #>  [48,] 0.937917821 0.993373844 0.012530877 0.90620973 #>  [49,] 0.103496534 0.699048767 0.978952189 0.47883335 #>  [50,] 0.483930378 0.812954478 0.736567358 0.40643265 #>  [51,] 0.800481333 0.648374232 0.196110146 0.22194736 #>  [52,] 0.893561457 0.775074854 0.927089054 0.73363113 #>  [53,] 0.033057844 0.228376808 0.034081251 0.19635352 #>  [54,] 0.330048846 0.767080126 0.212339357 0.34368720 #>  [55,] 0.183279112 0.389154526 0.573536534 0.29010590 #>  [56,] 0.439879446 0.328494730 0.464332769 0.29508726 #>  [57,] 0.643351160 0.525454802 0.384718802 0.39114216 #>  [58,] 0.336606861 0.305738023 0.406286450 0.55228550 #>  [59,] 0.566346808 0.931944401 0.975473163 0.41611500 #>  [60,] 0.522563075 0.018342298 0.215132521 0.22089645 #>  [61,] 0.044528624 0.839537015 0.684436407 0.13531827 #>  [62,] 0.007267962 0.025280677 0.826145606 0.49605937 #>  [63,] 0.732215391 0.255455621 0.617507259 0.50125643 #>  [64,] 0.848917703 0.064204597 0.094569892 0.56440688 #>  [65,] 0.478582695 0.394415705 0.022470800 0.07072614 #>  [66,] 0.099538022 0.645659484 0.350884812 0.40349918 #>  [67,] 0.513657433 0.005384487 0.286827696 0.83225885 #>  [68,] 0.253971003 0.415315787 0.370905214 0.85170724 #>  [69,] 0.185814342 0.191280663 0.270572325 0.22186079 #>  [70,] 0.716163885 0.421517760 0.001612162 0.30073237 #>  [71,] 0.012187759 0.500292748 0.422271353 0.77274956 #>  [72,] 0.306233281 0.237572810 0.230014392 0.02485605 #>  [73,] 0.917911672 0.797872170 0.236942567 0.78915684 #>  [74,] 0.248687774 0.591674194 0.607192121 0.67086308 #>  [75,] 0.621891561 0.381609882 0.622117765 0.76657148 #>  [76,] 0.366423184 0.537267154 0.703753122 0.25159865 #>  [77,] 0.418494298 0.254334458 0.737644871 0.55365360 #>  [78,] 0.815665356 0.390251606 0.696141687 0.41407703 #>  [79,] 0.347432916 0.719443924 0.893831228 0.93292462 #>  [80,] 0.425471048 0.232074256 0.120882126 0.12516107 #>  [81,] 0.830257335 0.234427855 0.476868310 0.04999084 #>  [82,] 0.349394033 0.008153576 0.512836589 0.70351570 #>  [83,] 0.140835989 0.618228293 0.973592485 0.51840304 #>  [84,] 0.527025502 0.714395935 0.664259243 0.03567246 #>  [85,] 0.921360120 0.454441912 0.341261853 0.36518957 #>  [86,] 0.626238487 0.111718729 0.069683470 0.24898818 #>  [87,] 0.330026710 0.272254634 0.653176941 0.92553124 #>  [88,] 0.131438648 0.266775509 0.852068490 0.53465960 #>  [89,] 0.878745797 0.885109334 0.293117818 0.61085862 #>  [90,] 0.476867583 0.439984897 0.693029091 0.98695399 #>  [91,] 0.968615915 0.721533181 0.427181377 0.52859854 #>  [92,] 0.435866488 0.682918184 0.376864630 0.14947332 #>  [93,] 0.974140006 0.015978046 0.346539360 0.09309788 #>  [94,] 0.623500900 0.856853443 0.114856482 0.72485364 #>  [95,] 0.245436148 0.184308311 0.440032668 0.93065459 #>  [96,] 0.642204261 0.483890227 0.014385003 0.44960350 #>  [97,] 0.505421662 0.643881331 0.569363218 0.17648228 #>  [98,] 0.241398617 0.805103011 0.564620240 0.35323201 #>  [99,] 0.761817296 0.379329290 0.402270033 0.79739676 #> [100,] 0.302567235 0.029468214 0.848576737 0.76324671 #>  #> $y #>   [1]  4.4457423 15.2018318 18.6990427 14.3695108  9.9820026 13.9336456 #>   [7] 21.6857762  6.4212920 23.9242478 10.6344745 17.4344954 15.8927185 #>  [13] 17.9005113 18.6673552 15.3283166 15.1377184 13.5266664 17.5240898 #>  [19] 19.8592418 18.3148546 15.9181266 18.8878931 30.2933039 21.3972240 #>  [25] 15.9993908 12.8681943 17.1397027 14.0677954 22.7324492 10.6232150 #>  [31]  9.6454111  9.5001937 24.6970602 13.8538859  8.4622215 11.5280228 #>  [37]  9.0333565 20.1551088 14.5620429  7.0774026 17.5530095 20.6488930 #>  [43] 15.9456690 13.4902694 14.1971747 21.2960469 16.5699649 15.7772272 #>  [49] 14.6505276 16.6749819 23.5638403 22.0363196 14.6688876 15.7003445 #>  [55]  8.6587033 25.3814584 24.3735667 17.9051981 23.1779176 20.5078476 #>  [61] 24.5349490 25.7683137 14.7719481 10.2462417  8.4785282 19.7584869 #>  [67] 19.1402042 11.2679156 16.0231143 11.4317340 13.1121132 16.6103834 #>  [73]  0.2527385 13.9746421 16.7691726 18.9905470 20.3198860  5.2621501 #>  [79] 30.4838124 19.1890832 18.0098920  9.1459105 30.5209006 14.9949873 #>  [85] 14.8438378  6.8371290 12.5927345 12.4706682 25.8162972 13.1076078 #>  [91] 18.4522005 29.5516625 21.0307606 16.0061491 16.7845833 16.0289406 #>  [97] 15.5099681 12.5929338 11.2243328 14.8986468 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim_Friedman2","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(n, sd = 125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(100, sd=125) #> $x #>               [,1]      [,2]         [,3]      [,4] #>   [1,] 40.31033018  392.9068 4.234940e-01  8.492036 #>   [2,] 85.83408126  852.2963 1.442664e-01  5.029300 #>   [3,] 50.59304684  556.1577 6.233667e-01  4.304461 #>   [4,] 13.84852058  642.3058 3.472623e-02  7.215476 #>   [5,] 37.05942985  285.7109 6.119674e-01  8.506449 #>   [6,] 80.38637959 1111.7422 3.933060e-01  8.516819 #>   [7,] 36.94892977  866.1329 6.701998e-02  2.235762 #>   [8,] 85.30315752  476.1593 9.622922e-01  7.361692 #>   [9,] 26.17233112 1369.7858 9.210643e-01  7.689601 #>  [10,] 18.21045636  731.1982 1.725161e-01  9.129924 #>  [11,] 83.66345980 1480.6888 7.736179e-01 10.958830 #>  [12,] 37.39733321  215.4164 7.253227e-01  7.522358 #>  [13,] 13.69014531 1661.6196 4.373341e-01  5.697070 #>  [14,] 28.52341952 1083.6502 5.281554e-05  2.095540 #>  [15,] 82.80846924  873.8537 9.806139e-01  4.496985 #>  [16,] 31.44117317 1713.2009 3.355104e-01  6.904515 #>  [17,] 15.41426326 1389.3388 1.046550e-01  4.881321 #>  [18,]  5.34289824  192.4677 2.320298e-01  6.607259 #>  [19,] 11.81400716 1478.6781 3.216293e-01  4.485120 #>  [20,] 36.82703609 1367.8765 1.415886e-01  3.135537 #>  [21,] 30.52050890 1738.0367 4.256025e-01  3.146900 #>  [22,] 60.63664923  369.1924 9.130099e-01  5.122639 #>  [23,] 75.98668458  397.9552 5.281590e-01  1.862510 #>  [24,] 76.83549840 1547.0915 8.298280e-01  3.171977 #>  [25,]  5.16630823  208.5042 6.320202e-01  2.742757 #>  [26,]  1.55121456  993.8004 6.030199e-01  5.721088 #>  [27,] 61.89282371  346.8844 8.656386e-01  3.132223 #>  [28,] 27.16715944  437.9407 1.908079e-01 10.128243 #>  [29,]  4.24223798  290.0046 2.642196e-01  4.755193 #>  [30,]  0.37476788 1627.5438 6.430273e-01 10.049531 #>  [31,] 46.03025834  462.2176 3.540388e-01  3.152695 #>  [32,]  2.35659701  940.3333 5.999537e-01  9.818145 #>  [33,]  6.89610131 1312.3817 7.341556e-01  8.321876 #>  [34,] 28.83316854  484.3093 2.935392e-01  6.780161 #>  [35,] 79.87668863  998.4419 9.084195e-01  1.479679 #>  [36,] 47.91614835 1037.6755 6.433106e-01  8.232159 #>  [37,] 44.34666105 1029.2295 7.667393e-01  8.315256 #>  [38,] 68.57045353 1258.3297 1.843836e-01  4.162148 #>  [39,] 27.46232273  360.6011 8.232718e-01  5.148551 #>  [40,] 93.25197928  761.8242 6.868438e-01  1.055510 #>  [41,] 75.17115991 1500.3825 5.351089e-01  1.826496 #>  [42,] 57.99147671 1045.8018 1.532441e-01  8.788244 #>  [43,] 90.91170665 1500.9688 4.851869e-01  8.808681 #>  [44,] 87.79961099  434.3643 3.328602e-01  4.744891 #>  [45,] 45.32646656  513.7015 8.812874e-01  6.490534 #>  [46,] 23.73316356 1482.9461 1.126794e-01  3.515720 #>  [47,] 28.91706980 1291.0490 4.289537e-01  7.499692 #>  [48,] 46.86446693  410.9832 2.225182e-01  9.219056 #>  [49,] 76.24004970 1691.7291 6.671319e-01  8.805002 #>  [50,] 41.24804994  454.7849 6.816068e-01  7.538328 #>  [51,] 67.20454623  977.1106 2.850808e-02  4.576211 #>  [52,] 59.21448714 1523.5920 3.762219e-01  3.676311 #>  [53,] 75.85058238  396.5897 9.619086e-02  3.300054 #>  [54,] 85.43704432  126.5850 8.306405e-01  8.513437 #>  [55,] 22.73612176  264.6511 7.398675e-01  4.403511 #>  [56,]  0.08090667 1715.9546 4.322950e-01  5.191691 #>  [57,] 53.80831901 1437.5885 6.308986e-01  7.670706 #>  [58,] 30.44114781  189.6070 7.869683e-01  2.674233 #>  [59,] 14.76664240  860.6449 3.506726e-01  6.910719 #>  [60,] 21.20272305  244.0436 2.643117e-01  5.508392 #>  [61,] 99.56628431 1673.4203 2.345411e-01  2.742866 #>  [62,] 89.70391413  978.2079 3.164071e-01  3.150918 #>  [63,] 14.30061234 1368.1915 5.529929e-01  3.430588 #>  [64,] 36.21285867 1687.3594 7.531868e-01 10.253146 #>  [65,] 44.18814897  838.3010 9.012047e-01  9.354260 #>  [66,] 87.40188607 1647.2802 5.395599e-01  9.610504 #>  [67,] 97.45918962  275.4555 2.024721e-01  8.346496 #>  [68,] 81.87260139  863.3771 1.278682e-01  3.526732 #>  [69,] 85.03514479  477.1280 8.309138e-01 10.562176 #>  [70,] 38.91721342  371.7449 6.520063e-02  9.046101 #>  [71,] 79.33953984  325.6327 8.413347e-01  8.343739 #>  [72,] 82.22308545 1529.6128 6.025897e-01 10.067588 #>  [73,] 41.47189143  175.2934 5.764747e-02  8.072306 #>  [74,] 99.89077931 1655.8989 6.473664e-01 10.009166 #>  [75,] 63.07461711 1417.8543 9.218605e-01  3.519825 #>  [76,] 97.55246902 1628.5366 8.257336e-01  8.030802 #>  [77,] 11.65834414 1105.7170 4.079828e-01  2.519754 #>  [78,] 91.45692517 1552.5930 2.983137e-01  4.413569 #>  [79,] 50.74741349 1410.7695 6.923392e-02  7.303725 #>  [80,] 93.36117711  686.3985 8.743553e-01  7.881417 #>  [81,] 51.96310114  634.1457 7.707882e-01  9.140969 #>  [82,] 98.49658618  884.3117 7.486028e-01  2.556467 #>  [83,] 38.71217181 1443.0351 8.662715e-01  8.542493 #>  [84,] 88.50824367 1447.8898 7.110395e-01  3.483382 #>  [85,] 41.33270294  645.6988 3.710737e-01  6.034954 #>  [86,] 24.77983322 1619.5769 3.767196e-01  4.311213 #>  [87,] 24.55436361  959.9580 7.480623e-01  2.260164 #>  [88,] 90.11276301 1495.8486 8.915209e-01  7.282821 #>  [89,] 14.15408393  850.3424 3.837797e-01  1.578305 #>  [90,] 15.11031894 1302.5998 8.554977e-01  9.616837 #>  [91,] 18.81693676 1317.3113 7.381299e-01  6.766259 #>  [92,]  2.52145468  941.9654 6.717267e-01  3.349248 #>  [93,] 55.98446950  558.1767 4.447505e-01  6.716263 #>  [94,] 63.92070991  660.4935 9.838993e-01  5.322187 #>  [95,] 32.15269595 1142.1360 6.458190e-01  6.945927 #>  [96,] 78.36734289 1127.1643 6.475675e-01  4.341003 #>  [97,] 71.83093901  373.2856 6.136161e-01  7.884168 #>  [98,] 98.93729149 1102.7284 8.470273e-01  3.257250 #>  [99,] 16.40526105 1192.0949 6.763981e-01  4.582068 #> [100,]  4.68827116  311.7199 4.522710e-01  6.762997 #>  #> $y #>   [1]  286.577360  164.257028  336.715002   66.833563  120.559018  538.687678 #>   [7]  137.400229  475.275051 1211.910339  110.650646 1099.164586  188.840342 #>  [13]  742.472986  -65.774555 1075.444462  510.055972   75.310446   15.509392 #>  [19]  570.617536  371.373014  542.682288  430.513324  212.319324 1499.545946 #>  [25]  239.684563  563.283100  395.517683  171.539845    3.969427  904.995145 #>  [31]  270.815353  502.739446  748.510784  278.770141  817.452291  796.456259 #>  [37]  868.519967  107.287813  141.692919  457.952289  833.662775  273.227996 #>  [43]  977.576357   15.787150  467.613514   36.728221  559.499044  106.319826 #>  [49] 1126.924666  216.539024   44.192958  402.381721   18.978338   20.159805 #>  [55]  275.361760  822.991073 1038.011971  185.159136  280.951634  186.427092 #>  [61]   96.432573  200.044602  499.567860 1389.338935  754.057929  882.701357 #>  [67]   70.248076  318.750407  295.096853  100.185334  392.761457  999.654909 #>  [73]   57.309942 1279.683289 1320.467894 1418.757321  628.424827  228.462055 #>  [79]  163.774504  771.739322  381.373706  733.236598 1518.855082 1114.267528 #>  [85]  291.399357  618.530204  840.041342 1306.768278  326.351650  899.969575 #>  [91] 1053.978365  759.885223  212.781460  544.336490  839.121054  714.488545 #>  [97]  271.782007  878.478943  986.118566  227.459800 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim_Friedman3","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n, sd = 0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n=100, sd=0.1) #> $x #>              [,1]      [,2]        [,3]      [,4] #>   [1,]  0.6186436 1672.4157 0.031362843  4.485088 #>   [2,] 23.2688805  984.6919 0.006513188  5.513472 #>   [3,] 75.5159028  304.2343 0.849987884  7.480506 #>   [4,] 51.8964138  453.5961 0.742000276  9.382609 #>   [5,] 70.5328837 1485.7150 0.284037316  7.160241 #>   [6,] 25.8899913 1144.4532 0.805085921 10.272830 #>   [7,] 96.7908994 1343.4207 0.398881516  2.013481 #>   [8,] 85.3127338  629.5341 0.158406329  9.705901 #>   [9,] 57.3162675 1225.4362 0.370515393  9.567912 #>  [10,] 37.6897770 1377.8282 0.678748824  6.848216 #>  [11,] 84.8547437  187.3687 0.531534942  1.628649 #>  [12,] 31.4693284  388.5135 0.476096095  3.734124 #>  [13,]  5.0415390 1333.4245 0.847276310  7.806653 #>  [14,] 27.0320790 1502.6877 0.388975189  1.023958 #>  [15,]  6.0524581 1096.0895 0.751453962  9.886251 #>  [16,] 38.1041094  358.3260 0.369955852  9.319257 #>  [17,] 62.5460917  507.4411 0.772643910  5.153238 #>  [18,]  3.8090984 1525.0902 0.884422360 10.479696 #>  [19,]  6.2981053 1041.9464 0.025151513  6.525719 #>  [20,] 67.6992771 1383.8955 0.111421508  2.888620 #>  [21,] 22.5492087 1177.7498 0.987979375  7.607806 #>  [22,]  4.3374501 1161.6600 0.780934219  4.877923 #>  [23,] 18.6306613  612.2352 0.777969067 10.180686 #>  [24,] 30.8227333 1547.5054 0.629342247 10.902430 #>  [25,] 16.0788212  395.1765 0.330387270  8.985143 #>  [26,] 96.8456394 1343.4725 0.521176687  4.157263 #>  [27,] 65.0090765  150.8555 0.221881447  6.098676 #>  [28,] 37.4193818  343.8395 0.175075887  4.208836 #>  [29,] 11.5359000 1528.1970 0.421316273  7.562710 #>  [30,] 74.2331488 1733.7438 0.600359911  5.011179 #>  [31,] 16.2577809 1309.8047 0.379228559  1.835833 #>  [32,] 18.9876499  868.7076 0.424092236  6.348160 #>  [33,] 40.4305713 1725.8612 0.394106485  3.140442 #>  [34,] 81.9659862  130.8952 0.109804162  1.510331 #>  [35,] 13.6018051  584.6346 0.138026712  1.412283 #>  [36,] 58.5819317 1121.0506 0.388745745  2.452015 #>  [37,] 41.0689210 1602.2874 0.763400886  1.216394 #>  [38,] 74.2518314  656.6927 0.870618589  9.191883 #>  [39,] 83.9926604 1168.9063 0.264868420  2.858199 #>  [40,] 81.5327817  995.1781 0.007399183  6.434459 #>  [41,]  4.3040321  612.8728 0.739406592  1.555073 #>  [42,]  9.1279601  797.9252 0.655312232  5.337451 #>  [43,] 31.6011031  420.1025 0.338450142  7.021869 #>  [44,] 87.3200605 1660.6672 0.019099781  7.655874 #>  [45,] 80.3335790 1424.8328 0.446966124  6.584760 #>  [46,] 76.0115769  909.6975 0.366867493  7.377693 #>  [47,] 16.2682088 1516.7059 0.384177693  7.129452 #>  [48,]  5.8399093 1075.5265 0.452995200 10.623628 #>  [49,] 93.8094120 1712.7028 0.144632315  4.540248 #>  [50,] 14.6309105 1752.7414 0.688903854  7.619427 #>  [51,] 68.3045442 1750.2154 0.976767061  9.477673 #>  [52,] 81.6874042  928.1023 0.638198050  7.145124 #>  [53,] 58.9114790  618.6837 0.036020679  1.018098 #>  [54,] 10.4322519  775.9967 0.837295497  5.148511 #>  [55,] 76.5324714 1681.6058 0.531981096  2.465477 #>  [56,] 91.8100814  327.1412 0.717438256  8.532474 #>  [57,] 98.6961603  432.5476 0.796063628  8.850114 #>  [58,] 63.6288729  949.0515 0.745948432 10.064050 #>  [59,] 23.6044680  592.2828 0.496509107  2.333083 #>  [60,] 89.3990524 1349.4335 0.534486076  1.785984 #>  [61,] 40.6115732 1486.2472 0.687561873  9.061700 #>  [62,] 47.2127254  730.6194 0.723893712  8.156763 #>  [63,] 63.5685240 1377.4429 0.150381243  2.781046 #>  [64,] 46.6732937 1009.8103 0.579418732 10.305357 #>  [65,] 38.5122817  609.4405 0.898773214 10.528437 #>  [66,] 88.9175600 1448.0141 0.572374469  1.375583 #>  [67,] 34.3896399  872.3782 0.809030188  5.778660 #>  [68,] 47.4790047 1419.5748 0.800909271  5.318145 #>  [69,] 35.8001386  697.9175 0.384218033 10.018529 #>  [70,] 64.0761280 1393.7258 0.553431738 10.531854 #>  [71,] 31.2183060 1437.8164 0.515285648  9.645145 #>  [72,] 80.6864348  465.9723 0.884646514  1.987581 #>  [73,] 14.6267880 1131.7542 0.479557111  4.657354 #>  [74,] 50.3518209 1181.3602 0.628818325  2.768907 #>  [75,] 66.4182677  645.2588 0.918803183  9.641921 #>  [76,] 58.9582175  825.3685 0.508711017  2.256048 #>  [77,] 18.5764800 1622.7988 0.888702970  5.999901 #>  [78,] 69.3818057  618.9121 0.518321185  5.921813 #>  [79,] 59.8795849  719.7199 0.893705443  4.115254 #>  [80,] 68.7277760 1156.4591 0.067960479  7.451190 #>  [81,]  9.8418690  557.5624 0.867332283  7.062572 #>  [82,] 10.5213056  493.6257 0.659823050  9.481458 #>  [83,] 31.5184601  457.3978 0.883553868  3.355055 #>  [84,] 91.7749986 1447.8068 0.002153176  7.648509 #>  [85,] 19.6408176  435.5004 0.635055823  8.866673 #>  [86,] 47.7023959  488.6223 0.850470632  4.922051 #>  [87,] 95.2801222  670.3401 0.008383038  8.298739 #>  [88,] 17.5281672  516.4792 0.563400460 10.532996 #>  [89,] 47.3376530  582.4804 0.316320788  1.075130 #>  [90,] 92.0680904  654.3230 0.023692471  9.378537 #>  [91,] 43.3358613 1716.5158 0.403710268 10.433542 #>  [92,] 31.4425730  624.6875 0.104792788  7.448180 #>  [93,] 95.9038373  485.2263 0.319797418  8.381185 #>  [94,] 46.6588212  280.0100 0.180280297  8.539029 #>  [95,] 14.2751785  162.2867 0.621615723  5.276073 #>  [96,] 72.0463516  676.3929 0.132313944  6.492420 #>  [97,]  2.5393239  785.1806 0.499086529  6.414648 #>  [98,] 77.5614740 1177.0481 0.377037231  4.748437 #>  [99,] 22.7110518 1381.2760 0.977319342  7.989384 #> [100,] 87.1002002  758.6108 0.973896635  4.413049 #>  #> $y #>   [1] 1.57035990 0.39136083 1.27624805 1.41010274 1.47633368 1.43868707 #>   [7] 1.53780119 0.80680886 1.41990967 1.57599620 0.91912178 1.28144810 #>  [13] 1.53057503 1.68014303 1.64008068 1.28251386 1.35840722 1.62164128 #>  [19] 1.34838033 1.11251054 1.44696657 1.60865267 1.52117379 1.64963398 #>  [25] 1.56535894 1.42761981 0.53008665 0.85127732 1.71484699 1.49540435 #>  [31] 1.60417148 1.47511213 1.49449442 0.24833128 1.38386296 1.52874596 #>  [37] 1.59595147 1.42022803 1.33072873 0.05656585 1.43801528 1.73510760 #>  [43] 1.18252821 0.40057132 1.34400366 1.46221776 1.65392394 1.56342967 #>  [49] 1.13191022 1.54095914 1.70882440 1.62513411 0.58907805 1.56190890 #>  [55] 1.61808162 1.28345406 1.16403949 1.41756784 1.60917403 1.11986816 #>  [61] 1.51425337 1.38300688 1.15781676 1.72337844 1.45672343 1.37021005 #>  [67] 1.41122732 1.55632531 1.53121045 1.49557856 1.46942294 1.28586334 #>  [73] 1.57932366 1.59240740 1.29290782 1.29656154 1.44876610 1.62142158 #>  [79] 1.62427770 0.86653718 1.56872235 1.55269656 1.53503680 0.13791026 #>  [85] 1.50823427 1.53223133 0.07521294 1.51730929 1.60452467 0.18118188 #>  [91] 1.66218324 0.87915490 1.08037658 0.75549898 1.29719204 0.86749807 #>  [97] 1.42886649 1.30855942 1.57005595 1.36630333 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n=100, dim=5) #> $x #>                [,1]        [,2]          [,3]        [,4]         [,5] #>   [1,]  0.603803983  0.51598413  0.5165420175  0.82309335 -0.826834050 #>   [2,]  0.649597460 -0.18120169 -0.3877700646 -0.72597825  0.180360097 #>   [3,] -0.144748102  0.73022047  0.7753272713 -0.52575106 -0.359836655 #>   [4,]  0.578793676  0.38919585  0.0607321472  0.96195553 -0.190793194 #>   [5,]  0.744654286 -0.61777445  0.7669381844  0.41784049  0.355251723 #>   [6,]  0.796482386 -0.18317174 -0.4091845187 -0.18522533  0.455627887 #>   [7,] -0.560462697 -0.11337931  0.7963541611 -0.83896812  0.192330712 #>   [8,] -0.446586767  0.74601431  0.0001533935 -0.35001454  0.325299944 #>   [9,]  0.294896920  0.58881779  0.9065097766 -0.61309433  0.632226132 #>  [10,] -0.119146903  0.79235961 -0.2600648263  0.24710309 -0.431979855 #>  [11,]  0.070979518 -0.20796414  0.2536203219 -0.68737401  0.016243496 #>  [12,]  0.083478951 -0.44527443 -0.9771939088 -0.43780229 -0.806763396 #>  [13,] -0.752327464 -0.15391312 -0.3290051157  0.94344104  0.208698611 #>  [14,]  0.761527544  0.53535841 -0.9419507370  0.58860780 -0.535803664 #>  [15,] -0.765762178 -0.28031721 -0.4734760448 -0.88853995 -0.187649691 #>  [16,]  0.398644646  0.99257472 -0.7541470719 -0.99710454  0.473227397 #>  [17,]  0.378096816 -0.85279754  0.9881815985  0.73794069  0.187640341 #>  [18,] -0.106805665 -0.51159367  0.2943018111 -0.54901277  0.429104568 #>  [19,]  0.432135299 -0.30209506  0.4801610461  0.94860039 -0.275213599 #>  [20,] -0.586935149 -0.79276850 -0.0241506128 -0.99010420  0.630087629 #>  [21,]  0.554584994 -0.08903971  0.5121229929  0.49294015 -0.187961532 #>  [22,]  0.945050875  0.87272161  0.5691874065 -0.69338379  0.575089929 #>  [23,] -0.724317821 -0.32169145 -0.9561125874  0.82299398 -0.749707354 #>  [24,] -0.007153759 -0.98205471 -0.3202286894  0.06740977 -0.671306774 #>  [25,]  0.564737328  0.20993735 -0.5576963099  0.20053399  0.926735312 #>  [26,]  0.029408092 -0.25497161  0.0389446816  0.72722107  0.195294088 #>  [27,] -0.161241148  0.02924497 -0.4846746805 -0.41423433 -0.249358887 #>  [28,]  0.135181407 -0.09343255  0.3781648623 -0.45302973 -0.497162410 #>  [29,] -0.066771793  0.61173876  0.9948295429  0.55930628  0.763445364 #>  [30,] -0.814221033  0.50405372  0.4754849244 -0.39223771 -0.503411503 #>  [31,] -0.106435807  0.22592831 -0.6866424629  0.77181032 -0.875259166 #>  [32,] -0.589812454  0.91814576  0.9156628619  0.77366045  0.975492493 #>  [33,]  0.159470799 -0.13466048  0.1345776096  0.37079049 -0.506580246 #>  [34,] -0.454777718 -0.91011482  0.8188648522  0.32966959  0.060278674 #>  [35,] -0.534588383  0.37547012  0.1964050150 -0.60391863  0.390982223 #>  [36,] -0.597698569  0.16996201  0.3079525935  0.01265765 -0.178134988 #>  [37,]  0.529571980 -0.96665010 -0.8060296644  0.23341150 -0.648828247 #>  [38,] -0.408479597 -0.37497674 -0.9012419535  0.47614467  0.513430214 #>  [39,]  0.782698043 -0.39633884  0.6822522935 -0.32972914 -0.995862300 #>  [40,]  0.779787127  0.13664108 -0.8745528851 -0.27846301  0.701640854 #>  [41,]  0.122276999 -0.90159477  0.5500012622  0.67676706  0.577828215 #>  [42,] -0.344488805  0.24319356 -0.2428048993 -0.21989736 -0.875273210 #>  [43,] -0.025350842  0.53457041 -0.0999329221  0.45879362 -0.744819450 #>  [44,] -0.925690786  0.03326080  0.1512872693  0.11214753  0.394044190 #>  [45,]  0.266865969  0.84946323 -0.7999199135  0.62238041 -0.872379500 #>  [46,]  0.696429065  0.09565507  0.6937101074  0.86909756  0.686937402 #>  [47,] -0.707317149 -0.89555789  0.4867579876 -0.08034297  0.658083618 #>  [48,]  0.292680351  0.13319095 -0.5936265932 -0.68008169  0.501477310 #>  [49,] -0.853657329  0.55927096  0.2718088157 -0.99920899  0.881666255 #>  [50,] -0.319359550  0.68118110 -0.0459535667  0.21409893  0.088180205 #>  [51,]  0.507326426  0.87969817 -0.1157721570  0.19009047 -0.667323240 #>  [52,] -0.357306877 -0.89306448 -0.8293086546 -0.82945184  0.515553909 #>  [53,]  0.374597348  0.25071215 -0.4849084383  0.68069506  0.286432285 #>  [54,]  0.938010017 -0.32062929 -0.0421226784  0.08355844  0.028516180 #>  [55,]  0.031032496  0.82486408 -0.0772395041 -0.51225233 -0.154074418 #>  [56,] -0.559384621 -0.55124261 -0.9281570581  0.25481532 -0.594448160 #>  [57,]  0.886051279  0.54701198 -0.3901936393  0.65846511  0.019009146 #>  [58,]  0.206934753 -0.34501325 -0.2509513739 -0.99681326  0.469014553 #>  [59,]  0.076476781 -0.11765105  0.7579414481 -0.91260095  0.294883163 #>  [60,]  0.737879700 -0.65427313  0.5708559081 -0.36646646 -0.385679189 #>  [61,] -0.450240369  0.60753037 -0.3600179087  0.69048181 -0.006705693 #>  [62,] -0.420523868  0.84381400  0.2844357830 -0.21262920  0.875563021 #>  [63,] -0.409799158 -0.69199520 -0.4778245324  0.75450657  0.482908423 #>  [64,]  0.451516325  0.86456811 -0.0361468489  0.92408313 -0.420224497 #>  [65,] -0.066089926 -0.77714364 -0.1899487255 -0.85681652  0.529081778 #>  [66,] -0.542736155 -0.17070355  0.6264345446 -0.43470454 -0.109461754 #>  [67,]  0.796444453 -0.21357345 -0.9411309250 -0.55637349 -0.508889960 #>  [68,] -0.451626841  0.79438107  0.5525397365 -0.77975381  0.317109802 #>  [69,]  0.702588263  0.32310878  0.6953316550 -0.45299556  0.498926678 #>  [70,] -0.788089846 -0.30254569  0.1838965048 -0.13957862  0.577667388 #>  [71,] -0.150787815 -0.30201781 -0.3742812406  0.60190580 -0.728514828 #>  [72,]  0.640907198  0.71650875  0.8139619441  0.83905872 -0.038427682 #>  [73,] -0.239392732 -0.24130895 -0.0319127459  0.07458205  0.982057068 #>  [74,]  0.981504905 -0.46075785  0.7907182984  0.80100739 -0.881289719 #>  [75,] -0.812199186 -0.04380314 -0.4827202796 -0.32900927 -0.028628635 #>  [76,]  0.619895905  0.03578304  0.9916337626  0.84782459 -0.855957855 #>  [77,] -0.652065342 -0.90079693  0.1927346243 -0.48889182 -0.352075779 #>  [78,] -0.107652649 -0.31403041 -0.1626685779  0.07240673  0.538876759 #>  [79,] -0.556576473  0.98518892  0.1317231935 -0.76218444 -0.524282063 #>  [80,]  0.758020252  0.88212353 -0.4194313958 -0.67911014 -0.259542520 #>  [81,] -0.930538537 -0.87166254 -0.6432007710 -0.47193915  0.886383621 #>  [82,]  0.322460376  0.67595796  0.2498811288 -0.72802339  0.856750609 #>  [83,] -0.177355672  0.15130606  0.1763583943 -0.40935787 -0.965040746 #>  [84,]  0.914863256  0.30815068  0.7472780827 -0.36892374  0.592982535 #>  [85,] -0.785128660 -0.95926620 -0.3823565631  0.67605386 -0.575540610 #>  [86,] -0.911096226 -0.91417758  0.5830970313 -0.37548251  0.977572633 #>  [87,] -0.225434748  0.05977408 -0.7059207093  0.11241643 -0.208749690 #>  [88,]  0.349540808 -0.69403834 -0.5144953202  0.45481180 -0.873750064 #>  [89,]  0.591712384  0.38454345 -0.6463577962 -0.53573501  0.604172985 #>  [90,]  0.552357278  0.02133330 -0.7139752256 -0.12294166  0.489155516 #>  [91,]  0.713354964  0.37014641 -0.8011993985  0.84707315 -0.506601379 #>  [92,]  0.819876740 -0.01534878  0.7695220769  0.24858479 -0.238844763 #>  [93,]  0.893792155  0.83308205  0.8383915732 -0.69699267 -0.304277983 #>  [94,]  0.352662611 -0.77910790  0.7182268109 -0.73313493  0.432250825 #>  [95,] -0.923421431  0.44563786 -0.5350125427  0.51246908  0.267469427 #>  [96,] -0.830097177 -0.36102428 -0.8459713953 -0.37450134 -0.738998873 #>  [97,] -0.342164832 -0.24737237 -0.9545007995  0.45935304  0.950024148 #>  [98,]  0.966636308 -0.75779617 -0.1353460271 -0.17728707 -0.478835781 #>  [99,] -0.330832329 -0.37667596  0.5617789989 -0.63520108  0.364016967 #> [100,] -0.005560056 -0.80286043 -0.6223511267  0.04905408  0.235101381 #>  #> $y #>   [1] 1 1 1 1 0 0 1 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 1 0 1 0 1 1 0 #>  [38] 1 0 1 0 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 0 1 0 1 0 1 0 #>  [75] 0 1 0 1 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 1 0 #>"},{"path":[]},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"major-changes-1-0-5","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"bark 1.0.5","text":"improve computational efficiency saving old log likelihood values rahter recomputing; improve compuational speed close factor 2","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bug-fixes-1-0-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"bark 1.0.5","text":"identified error calculation covariance matrix coeffients R/llike.R updated code. (result close large effect)","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-104","dir":"Changelog","previous_headings":"","what":"bark 1.0.4","title":"bark 1.0.4","text":"CRAN release: 2023-04-18 archived 3/31 due unit test failure MKL R-devel gcc skip unit test CRAN test code deprecated shortly.","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-103","dir":"Changelog","previous_headings":"","what":"bark 1.0.3","title":"bark 1.0.3","text":"failed MKL checks","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-103-1","dir":"Changelog","previous_headings":"","what":"bark 1.0.3","title":"bark 1.0.3","text":"failed MKL checks","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bark-101","dir":"Changelog","previous_headings":"","what":"bark 1.0.1","title":"bark 1.0.1","text":"CRAN release: 2023-03-09","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"minor-changes-1-0-1","dir":"Changelog","previous_headings":"","what":"minor changes","title":"bark 1.0.1","text":"update longer running examples use \\donttest rather \\dontrun add reference DESCRIPTION","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"bark 1.0.0","text":"output bark now bark object allow S3 methods replace input arguments y.train x.train use model formula dataframe inputs. replaced argument type two logical variables: selection common_lambdas intuitive. changed running times examples address issue https://CRAN.R-project.org/package=bark led package archived 2015 added registration native routines foreign function calls disabled symbol search src/bark-init.c updated NAMESPACE replaced kernel calculation using .C .Call improve speed src/kernelCalculationCall.cpp R/llike.R added unit tests testthat code coverage reported CI; code coverage badge added README. Unit tests now cover 99% code reported CodeCov added GitHub actions CI checks Windows, MacOSX, Ubuntu added R CMD check passing Badge README.md GitHub repo. converted help files use roxygen tags deprecated functions sim.Circle, sim.Friedman1, sim.Friedman2, sim.Friedman3 created new versions sim_circle, sim_Friedman1, sim_Friedman2, sim_Friedman3 avoid confusion S3 methods updated CODE_OF_CONDUCT.md, SECURITY.md, CONTRIBUTING.md GitHub repo updates OpenSSF BestPractices Badge (added README.md)","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"bark 1.0.0","text":"GitHub Issue #1 Added type checks src/kernelCalculationCall.cpp coerce inputs correct type (unit tests testthat/test-llike.R) reported GitHub Issue #3 Addressed error p = 1 subsetting resulted output vector due drop dimension. Added unit test testthat/test-bark.R","code":""}]
