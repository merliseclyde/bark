[{"path":[]},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team clyde@duke.edu. project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"http://merliseclyde.github.io/bark/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to bark development","title":"Contributing to bark development","text":"goal guide help contribute bark. guide divided three main pieces: Filing bug report feature request issue Github. Suggesting change via pull request. Coding Style Guide Contributions bark","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"feature-requests","dir":"","previous_headings":"Issues","what":"Feature Requests","title":"Contributing to bark development","text":"wish easily extract additional information bark objects ? like see new functionality available bark? , feel free fill feature request! Please describe much detail like added. can anything just idea code advanced user!","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"bug-reports","dir":"","previous_headings":"Issues","what":"Bug Reports","title":"Contributing to bark development","text":"filing bug report issue, important thing include minimal reproducible example can quickly verify problem, figure fix . three things need include make example reproducible: required packages, data, code. Packages loaded top script, ’s easy see ones example needs. easiest way include data use dput() generate R code recreate . example, recreate mtcars dataset R, ’d perform following steps: Run dput(mtcars) R Copy output reproducible script, type mtcars <- paste. even better can create data.frame() just handful rows columns still illustrates problem. Spend little bit time ensuring code easy others read: make sure ’ve used spaces variable names concise, informative (OK using “.”, camel case “_” variable names improve readibility. details see Style Guide use comments indicate problem lies best remove everything related problem. shorter code , easier understand. can check actually made reproducible example starting fresh R session pasting script . (Unless ’ve specifically asked , please don’t include output sessionInfo().)","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"other-issues","dir":"","previous_headings":"Issues","what":"Other issues","title":"Contributing to bark development","text":"sure something bug undocumented feature, see possible errors help files documentation use clarification (issue) please file regular issue","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to bark development","text":"contribute change bark, follow steps: Create branch git make changes, ideally using commit -s sign-commits Developer Certificate Origin. Make sure branch passes R CMD check. Push branch github issue pull request (PR). Discuss pull request. Iterate either accept PR decide ’s good fit bark. steps described detail . might feel overwhelming first time get set , gets easier practice. get stuck point, please reach help. ’re familiar git github, please start reading http://r-pkgs..co.nz/git.html Pull requests evaluated following checklist: Motivation. pull request clearly concisely motivates need change. Please describe problem show pull request solves concisely possible. Also include motivation NEWS new release bark comes ’s easy users see ’s changed. Add item top file use markdown formatting. news item end (@yourGithubUsername, #the_issue_number). related changes. submit pull request, please check make sure haven’t accidentally included unrelated changes. make harder see exactly ’s changed, evaluate unexpected side effects. PR corresponds git branch, expect submit multiple changes make sure create multiple branches. multiple changes depend , start first one don’t submit others first one processed. Document ’re adding new parameters new function, ’ll also need document roxygen. Please add short example appropriate function optionally package vignettes. Make sure re-run devtools::document() code submitting. (sure include name authors function!) Testing fixing bug adding new feature, add testthat unit test. seems like lot work don’t worry pull request isn’t perfect. ’s learning process hand help . pull request process, unless ’ve submitted past ’s unlikely pull request accepted . Please don’t submit pull requests change existing behaviour. Instead, think can add new feature minimally invasive way.","code":""},{"path":"http://merliseclyde.github.io/bark/CONTRIBUTING.html","id":"style-guide-for-contributing-to-bark","dir":"","previous_headings":"","what":"Style Guide for Contributing to bark","title":"Contributing to bark development","text":"consistent style improves readibility code. wed particular style generally draw Google Style Guide well Hadley Wickham’s Style Guide noted . Using package styler enforce styling barked TidyVerse helpful, required. Function Variable names: Use informative names using “.”, camel case, “_” improve readibility, .e. variable.name, VariableName variable_name, rather foo xxx. tend avoid _ historical reasons going back S. Assignment: Use either <- = assignment consistent within contribution. many style guides prefer <- suggest using styler enforce use <-, OK = shorter type! Just consistent within contributed code. Spaces: Include spaces around operators =, +, -, <-,  == etc improve readibility. Put space comman, . : :: never spaces around . Additional spaces newlines fine improve readibilty code (e.g. aligmnent arguments). Comments: Comment code whenever can. Explain clear code. Use # start comment followed space capitalize first letter; short inline comments (comments line code) need two spaces # Curly Braces: opening curly brace never go line, closing curly brace go line. exception short conditional statement shuch else code may fit one line. Indentation: Use 2 spaces rather tabs per level indentation. Indent code inside curly braces. Semi-colons: use semi-colons put one statement line. Line Length: Use 80 characters per line code. RStudio setting display vertical line 80 characters visually assist . Turn going Tools -> Global Options… -> Code -> Display -> Show margin File names R code informative end .R. Use - improve readibility. include spaces file names! Contributing adopted ggplot2’s CONTRIBUTING.md","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://merliseclyde.github.io/bark/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"supported-versions","dir":"","previous_headings":"","what":"Supported Versions","title":"Security Policy","text":"Supported security updates.","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"Please submit vulnerability reports Github Issues maintainers address soon possibl","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"expectations","dir":"","previous_headings":"","what":"Expectations","title":"Security Policy","text":"package utilizes C code efficiency allocates/frees memory. package checked memory leaks prior releases CRAN using ASAN/UBSBAN. package distributed via CRAN https://CRAN.R-project.org/package=bark reports additional checks. development version may installed GitHub https://github.com/merliseclyde/bark checked via github actions (users may check current version passing badge installing) Bugs reported via Issue tracker handled soon possible. (See link )","code":""},{"path":"http://merliseclyde.github.io/bark/SECURITY.html","id":"assurance","dir":"","previous_headings":"","what":"Assurance","title":"Security Policy","text":"highly unlikely malicious code added package. submissions CRAN require verification via maintainer’s email, protected via two factor authentication. pull requests contributions github verified lead maintainer. Based Code Conduct Contributing Guidelines modifications include unit tests cover additional code blocks.","code":""},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"get latest version {r bark}, install github (needs compilation))","code":"devtools::install_github(\"merliseclyde/bark\") library(bark)"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"illustrate feature selection simple simulated example Friedman bark similar SVM, however allows different kernel smoothing parameters every dimension inputs \\(x\\) well selection inputs allowing kernel smoothing parameters zero. plot shows posterior draws \\(\\lambda\\) simulated data.   posterior distribution \\(\\lambda_1\\) \\(\\lambda_4\\) concentrated zero, leads \\(x_1\\) \\(x_2\\) dropping mean function.","code":"set.seed(42) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) set.seed(42) fit.bark.d <- bark(y ~ ., data = data.frame(traindata),                    testdata= data.frame(testdata),                    classification=FALSE,                     selection = FALSE,                    common_lambdas = FALSE,                    nburn = 100,                    nkeep = 250,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1637.79 set.seed(42) fit.bark.sd <- bark(y ~ ., data=data.frame(traindata),                     testdata = data.frame(testdata),                     classification=FALSE,                      selection = TRUE,                     common_lambdas = FALSE,                     nburn = 100,                     nkeep = 250,                     printevery = 10^10)  mean((fit.bark.sd$yhat.test.mean-testdata$y)^2) #> [1] 1441.64 boxplot(as.data.frame(fit.bark.d$theta.lambda)) boxplot(as.data.frame(fit.bark.sd$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"compare {r bark} two popular methods, {r BART} {r SVM} provide flexible models also non-linear input variables.","code":"bart.available =  require(BART) #> Loading required package: BART #> Loading required package: nlme #> Loading required package: nnet #> Loading required package: survival svm.available  =  require(e1071) #> Loading required package: e1071"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"generate-data","dir":"Articles","previous_headings":"Comparison","what":"Generate data","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"","code":"set.seed(42) n = 500 circle2 = data.frame(sim_circle(n, dim = 2)) train = sample(1:n, size = floor(n/2), rep=FALSE) plot(x.1 ~ x.2, data=circle2, col=y+1) circle2.bark = bark(y ~ ., data=circle2, subset=train,                     testdata = circle2[-train,],                     classification = TRUE,                     selection = TRUE,                     common_lambdas = TRUE,                     nburn = 100,                     nkeep = 250,                     printevery = 10^10) #Classify # mean((circle2.bark$yhat.test.mean > 0) != circle2[-train, \"y\"]) #> [1] 0.02"},{"path":"http://merliseclyde.github.io/bark/articles/bark.html","id":"svm","dir":"Articles","previous_headings":"","what":"SVM","title":"Nonparametric Regression with Bayesian Additive Regression Kernels","text":"Compare classification across methods.","code":"if (svm.available) {   circle2.svm = svm(y ~ x.1 + x.2, data=circle2[train,], type=\"C\")   pred.svm = predict(circle2.svm, circle2[-train,])   mean(pred.svm != circle2[-train, \"y\"]) } #> [1] 0.036 if (bart.available) {   circle.bart = pbart(x.train = circle2[train, 1:2],                              y.train =  circle2[train, \"y\"])   pred.bart =   predict(circle.bart, circle2[-train, 1:2])   mean((pred.bart$prob.test.mean > .5) != circle2[-train, \"y\"]) }  #> *****Into main of pbart #> *****Data: #> data:n,p,np: 250, 2, 0 #> y1,yn: 1, 1 #> x1,x[n*p]: 0.205937, -0.132049 #> *****Number of Trees: 50 #> *****Number of Cut Points: 100 ... 100 #> *****burn and ndpost: 100, 1000 #> *****Prior:mybeta,alpha,tau: 2.000000,0.950000,0.212132 #> *****binaryOffset: -0.140835 #> *****Dirichlet:sparse,theta,omega,a,b,rho,augment: 0,0,1,0.5,1,2,0 #> *****nkeeptrain,nkeeptest,nkeeptreedraws: 1000,1000,1000 #> *****printevery: 100 #> *****skiptr,skipte,skiptreedraws: 1,1,1 #>  #> MCMC #> done 0 (out of 1100) #> done 100 (out of 1100) #> done 200 (out of 1100) #> done 300 (out of 1100) #> done 400 (out of 1100) #> done 500 (out of 1100) #> done 600 (out of 1100) #> done 700 (out of 1100) #> done 800 (out of 1100) #> done 900 (out of 1100) #> done 1000 (out of 1100) #> time: 1s #> check counts #> trcnt,tecnt: 1000,0 #> *****In main of C++ for bart prediction #> tc (threadcount): 1 #> number of bart draws: 1000 #> number of trees in bart sum: 50 #> number of x columns: 2 #> from x,np,p: 2, 250 #> ***using serial code #> [1] 0.044 plot(x.1 ~ x.2, data=circle2[-train,], pch = y+15,       col=(1 + (circle2.bark$yhat.test.mean > 0)),      main=\"bark\") if (bart.available) {   plot(x.1 ~ x.2, data=circle2[-train,], pch = y+15,         col= ( 1 + (pred.bart$prob.test.mean > .5)),         main=\"BART\") } if (svm.available) { plot(x.1 ~ x.2, data=circle2[-train,], pch = y+15,       col= as.numeric(pred.svm),       main=\"svm\") }"},{"path":"http://merliseclyde.github.io/bark/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Merlise Clyde. Author, maintainer, copyright holder, thesis advisor.            ORCID=0000-0002-3595-1872 Zhi Ouyang. Author, copyright holder. Robert Wolpert. Contributor, thesis advisor.","code":""},{"path":"http://merliseclyde.github.io/bark/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clyde M, Ouyang Z (2023). bark: Bayesian Additive Regression Kernels. R package version 1.0.0, https://CRAN.R-project.org/package=bark.","code":"@Manual{,   title = {bark: Bayesian Additive Regression Kernels},   author = {Merlise Clyde and Zhi Ouyang},   year = {2023},   note = {R package version 1.0.0},   url = {https://CRAN.R-project.org/package=bark}, }"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"bark-bayesian-additive-regression-kernels","dir":"","previous_headings":"","what":"Bayesian Additive Regression Kernels","title":"Bayesian Additive Regression Kernels","text":"bark package implements estimation Bayesian nonparametric regression model represented sum multivariate Gaussian kernels flexible model capture nonlinearities, interactions feature selection.","code":""},{"path":"http://merliseclyde.github.io/bark/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Additive Regression Kernels","text":"can install released version bark CRAN : development version GitHub :","code":"install.packages(\"bark\") require(\"devtools\") devtools::install_github(\"merliseclyde/bark\")"},{"path":"http://merliseclyde.github.io/bark/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Additive Regression Kernels","text":"bark similar SVM, however allows different kernel smoothing parameters every dimension inputs x well selection inputs allowing kernel smoothing parameters zero. plot shows posterior draws λ simulated data.  posterior distribution λ1 λ4 concentrated near zero, leads x1 x2 dropping mean function.","code":"library(bark) set.seed(42) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) fit.bark.d <- bark(y ~ .,                      data=data.frame(traindata),                     testdata = data.frame(testdata),                    classification=FALSE,                     selection = TRUE,                    common_lambdas = FALSE,                    printevery = 10^10)  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1738.992 boxplot(as.data.frame(fit.bark.d$theta.lambda))"},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"x.train Explanatory variables training (sample) data. Must matrix doubles, (usual) rows corresponding observations columns variables. y.train Dependent variable training (sample) data. y numeric continuous response model fit (normal errors). y logical (just values 0 1), binary response model probit link fit. x.test Explanatory variables test (sample) data. structure x.train. type BARK type, e, d, se, sd, default choice se.e: BARK equal weights.d: BARK different weights.se: BARK selection equal weights.sd: BARK selection different weights. classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"bark returns list, including: fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters etc. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NonParametric Regression using Bayesian Additive Regression Kernels — bark-deprecated","text":"","code":"##Simulate regression example # Friedman 2 data set, 200 noisy training, 1000 noise free testing # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) # Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- sim_Friedman2(200, sd=125) testdata <- sim_Friedman2(1000, sd=0) fit.bark.d <- bark_mat(traindata$x, traindata$y, testdata$x,                   nburn=10, nkeep=100, keepevery=10,                   classification=FALSE, type=\"d\") #> [1] \"Starting BARK-d for this regression problem\" #> [1] \"posterior mcmc iteration 1000, J=11, max(nj)=2\" boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 1871.976 if (FALSE) {  ##Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_Circle(200, dim=5)  testdata <- sim_Circle(1000, dim=5)  fit.bark.se <- bark_mat(traindata$x, traindata$y, testdata$x, classification=TRUE, type=\"se\")  boxplot(data.frame(fit.bark.se$theta.lambda))  mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) }"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package bark. — bark-package-deprecated","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"<function>-deprecated\").","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"","code":"bark_mat(   x.train,   y.train,   x.test = matrix(0, 0, 0),   type = \"se\",   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )  sim.Friedman1(n, sd = 1)  sim.Friedman2(n, sd = 125)  sim.Friedman3(n, sd = 0.1)  sim.Circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"bark-mat","dir":"Reference","previous_headings":"","what":"bark_mat","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"Old version matrix inputs used testing","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman-","dir":"Reference","previous_headings":"","what":"sim.Friedman1","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman1, use sim_Friedman1.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--1","dir":"Reference","previous_headings":"","what":"sim.Friedman2","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman2, use sim_Friedman2.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-friedman--2","dir":"Reference","previous_headings":"","what":"sim.Friedman3","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Friedman3, use sim_Friedman3.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package-deprecated.html","id":"sim-circle","dir":"Reference","previous_headings":"","what":"sim.Circle","title":"Deprecated functions in package bark. — bark-package-deprecated","text":"sim.Circle, use sim_circle.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bark:  Bayesian Additive Regression Trees — bark-package","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"Implementation Bayesian Additive Regression Kernels  Feature Selection  Nonparametric Regression  Gaussian regression  classification binary Probit models","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"BARK Bayesian sum--kernels model Bayesian priors Bayesian Additive Regression Kernel model.  numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link). cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). bark  uses approximated Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, se, sd, enabling either soft shrinkage hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bark:  Bayesian Additive Regression Trees — bark-package","text":"","code":"if (FALSE) {  # Simulate regression example  # Friedman 2 data set, 200 noisy training, 1000 noise free testing  # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600)  # Out of sample MSE in BART (default):    5300 (sd. 1000)  traindata <- sim.Friedman2(200, sd=125)  testdata <- sim.Friedman2(1000, sd=0)  fit.bark.d <- bark(traindata$x, traindata$y, testdata$x, classification=FALSE, type=\"d\")  boxplot(as.data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2)  # Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim.Circle(200, dim=5)  testdata <- sim.Circle(1000, dim=5)  fit.bark.se <- bark(traindata$x, traindata$y, testdata$x, classification=TRUE, type=\"se\")  boxplot(as.data.frame(fit.bark.se$theta.lambda))  mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) }"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK Bayesian sum--kernels model. numeric response \\(y\\), \\(y = f(x) + \\epsilon\\), \\(\\epsilon \\sim N(0,\\sigma^2)\\). binary response \\(y\\), \\(P(Y=1 | x) = F(f(x))\\), \\(F\\) denotes standard normal cdf (probit link).  cases, \\(f\\) sum many Gaussian kernel functions. goal flexible inference unknown function \\(f\\). BARK uses approximation Cauchy process prior distribution unknown function \\(f\\). Feature selection can achieved inference scale parameters Gaussian kernels. BARK accepts four different types prior distributions, e, d, enabling either soft shrinkage  se, sd, enabling hard shrinkage scale parameters.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"bark(   formula,   data,   subset,   na.action = na.omit,   testdata = NULL,   selection = TRUE,   common_lambdas = TRUE,   classification = FALSE,   keepevery = 100,   nburn = 100,   nkeep = 100,   printevery = 1000,   keeptrain = FALSE,   verbose = FALSE,   fixed = list(),   tune = list(lstep = 0.5, frequL = 0.2, dpow = 1, upow = 0, varphistep = 0.5, phistep =     1),   theta = list() )"},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"formula model formula model predictors, Y ~ X.  X variables centered scaled part model fitting. data data frame.  Factors converted numerical vectors based using `model.matrix`. subset optional vector specifying subset observations used fitting process. na.action function indicates happen data contain NAs. default \"na.omit\". testdata Dataframe test data sample prediction. structure data. selection Logical variable indicating whether variable  dependent kernel parameters \\(\\lambda\\) may set zero MCMC;  default TRUE. common_lambdas Logical variable indicating whether kernel parameters \\(\\lambda\\) predictor specific common across predictors;  default TRUE.   Note  common_lambdas = TRUE  selection = TRUE applies just non-zero \\(lambda_j\\). classification TRUE/FALSE logical variable, indicating classification regression problem. keepevery Every keepevery draw kept returned user nburn Number MCMC iterations (nburn*keepevery) treated burn . nkeep Number MCMC iterations kept posterior inference. nkeep*keepevery iterations burn . printevery MCMC runs, message printed every printevery draws. keeptrain Logical, whether keep results training samples. verbose Logical, whether print messages fixed list fixed hyperparameters, using default values specified. alpha = 1: stable index, must 1 currently. eps = 0.5: approximation parameter. gam = 5: intensity parameter. la = 1: first argument gamma prior kernel scales. lb = 2: second argument gamma prior kernel scales. pbetaa = 1: first argument beta prior plambda. pbetab = 1: second argument beta prior plambda. n: number training samples, automatically generates. p: number explanatory variables, automatically generates. meanJ: expected number kernels, automatically generates. tune list tuning parameters, expected change. lstep: stepsize lognormal random walk lambda. frequL: frequency update L. dpow: power death step. upow: power update step. varphistep: stepsize lognormal random walk varphi. phistep: stepsize lognormal random walk phi. theta list starting values parameter theta, use defaults nothing given.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"bark returns list, including: call matched call fixed Fixed hyperparameters tune Tuning parameters used theta.last last set parameters posterior draw theta.nvec matrix nrow(x.train)\\(+1\\) rows (nkeep) columns, recording  number kernels training sample theta.varphi matrix nrow(x.train)  \\(+1\\) rows (nkeep) columns,  recording precision normal gamma prior  distribution regression coefficients theta.beta matrix nrow(x.train)\\(+1\\) rows (nkeep) columns,  recording regression coefficients theta.lambda matrix ncol(x.train) rows (nkeep) columns,   recording kernel scale parameters thea.phi vector length nkeep,  recording precision regression Gaussian noise  (1 classification case) yhat.train matrix nrow(x.train) rows (nkeep) columns.  column corresponds draw \\(f^*\\)  posterior \\(f\\)   row corresponds row x.train.  \\((,j)\\) value \\(f^*(x)\\)  \\(j^{th}\\) kept draw \\(f\\)  \\(^{th}\\) row x.train.  classification problems, value  expectation underlying normal  random variable.  Burn-dropped yhat.test yhat.train now x's rows test data yhat.train.mean train data fits = row mean yhat.train yhat.test.mean test data fits = row mean yhat.test","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"BARK implemented using Bayesian MCMC method. MCMC interaction, produce draw joint posterior distribution, .e. full configuration regression coefficients, kernel locations kernel parameters etc. Thus, unlike lot modelling methods R, produce single model object fits summaries may extracted. output consists values \\(f^*(x)\\) (\\(\\sigma^*\\) numeric case) * denotes particular draw. \\(x\\) either row training data (x.train)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, page 58.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/bark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric Regression using Bayesian Additive Regression Kernels — bark","text":"","code":"##Simulated regression example # Friedman 2 data set, 200 noisy training, 1000 noise free testing # Out of sample MSE in SVM (default RBF): 6500 (sd. 1600) # Out of sample MSE in BART (default):    5300 (sd. 1000) traindata <- data.frame(sim_Friedman2(200, sd=125)) testdata <- data.frame(sim_Friedman2(1000, sd=0)) fit.bark.d <- bark(y ~ ., data=traindata, testdata= testdata,                    nburn=10, nkeep=10, keepevery=10,                    classification=FALSE,                     common_lambdas = FALSE,                    selection = FALSE) boxplot(data.frame(fit.bark.d$theta.lambda))  mean((fit.bark.d$yhat.test.mean-testdata$y)^2) #> [1] 16207.35 if (FALSE) {  ##Simulate classification example  # Circle 5 with 2 signals and three noisy dimensions  # Out of sample erorr rate in SVM (default RBF): 0.110 (sd. 0.02)  # Out of sample error rate in BART (default):    0.065 (sd. 0.02)  traindata <- sim_Circle(200, dim=5)  testdata <- sim_Circle(1000, dim=5)  fit.bark.se <- bark(y ~ .,                       data=data.frame(traindata),                       testdata= data.frame(testdata),                       classification=TRUE,                      nburn=100, nkeep=200, )  boxplot(as.data.frame(fit.bark.se$theta.lambda))  mean((fit.bark.se$yhat.test.mean>0)!=testdata$y) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"sim.Circle(n, dim=5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Circle-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim.Circle-deprecated","text":"","code":"if (FALSE) {   sim.Circle(n=100, dim = 5) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"sim.Friedman1(n, sd=1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman1-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim.Friedman1-deprecated","text":"","code":"if (FALSE) { sim.Friedman1(100, sd=1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"sim.Friedman2(n, sd=125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman2-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim.Friedman2-deprecated","text":"","code":"if (FALSE) { sim.Friedman2(100, sd=125) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"sim.Friedman3(n, sd=0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim.Friedman3-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim.Friedman3-deprecated","text":"","code":"if (FALSE) { sim.Friedman3(n=100, sd=0.1) }"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 1 — sim_Friedman1","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"regression problem Friedman 1 described Friedman (1991) Breiman (1996). Inputs 10 independent variables uniformly distributed interval \\([0,1]\\), 5 10 actually used. Outputs created according formula $$y = 10 \\sin(\\pi x1 x2) + 20 (x3 - 0.5)^2 + 10 x4 + 5 x5 + e$$  e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(n, sd = 1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"n number data points create sd standard deviation noise, default value 1","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 1 — sim_Friedman1","text":"","code":"sim_Friedman1(100, sd=1) #> $x #>               [,1]        [,2]       [,3]       [,4]         [,5]       [,6] #>   [1,] 0.456085516 0.971634388 0.39128367 0.65206563 0.9170239840 0.58401446 #>   [2,] 0.662059296 0.952353659 0.06922982 0.79639403 0.7985992888 0.41954371 #>   [3,] 0.883765548 0.412999473 0.66393242 0.80030366 0.7452192919 0.23230981 #>   [4,] 0.117671931 0.319710797 0.35666982 0.77181181 0.6989195584 0.67361386 #>   [5,] 0.560663871 0.757913000 0.34783500 0.23628227 0.0748354290 0.30564625 #>   [6,] 0.824868606 0.620284594 0.71819436 0.27790162 0.3012997452 0.46939121 #>   [7,] 0.939211743 0.636050505 0.27657715 0.56671388 0.9218072149 0.74616709 #>   [8,] 0.174988992 0.282569738 0.64260135 0.37610223 0.6913079722 0.08472312 #>   [9,] 0.063653979 0.016217453 0.50421932 0.58954620 0.7357646346 0.55817006 #>  [10,] 0.891460238 0.954177059 0.05788617 0.71166559 0.2778322306 0.95336384 #>  [11,] 0.595787647 0.905395311 0.40810747 0.49158152 0.2398096505 0.23525423 #>  [12,] 0.322481424 0.432012197 0.95161014 0.68635967 0.9262528729 0.82808756 #>  [13,] 0.148767226 0.335953919 0.89085605 0.26914622 0.4522109015 0.69164089 #>  [14,] 0.547002651 0.462594581 0.98641885 0.21067814 0.4886891504 0.33244040 #>  [15,] 0.208477935 0.774766223 0.02346708 0.07545385 0.0297776933 0.52490294 #>  [16,] 0.909745584 0.166437952 0.68353767 0.48245027 0.8632455294 0.37354965 #>  [17,] 0.377718933 0.699809262 0.88102961 0.36860841 0.1986896710 0.07661616 #>  [18,] 0.747855369 0.069736757 0.76111254 0.34366604 0.8054683215 0.69765309 #>  [19,] 0.332844580 0.412254057 0.12161220 0.47434088 0.1589856485 0.41026228 #>  [20,] 0.031959569 0.277834536 0.51695258 0.47214220 0.2446462435 0.02536859 #>  [21,] 0.209614970 0.646543394 0.99489350 0.67282033 0.3772210819 0.72626793 #>  [22,] 0.236114300 0.833954884 0.55025977 0.01806675 0.1694213569 0.20639509 #>  [23,] 0.647531295 0.847176515 0.95189125 0.69523652 0.2252069551 0.41911330 #>  [24,] 0.790108102 0.034368276 0.76781266 0.14216258 0.6998599197 0.51214307 #>  [25,] 0.554326716 0.205967119 0.68016902 0.01263378 0.6840435632 0.44648336 #>  [26,] 0.392289858 0.589122897 0.56101017 0.75144168 0.9995516494 0.49383222 #>  [27,] 0.283045055 0.374938455 0.02179194 0.09470389 0.5427090661 0.20089574 #>  [28,] 0.589403115 0.359946501 0.11956905 0.13646410 0.0534093771 0.32144968 #>  [29,] 0.674032311 0.100165204 0.74859268 0.66133155 0.9542701528 0.17464843 #>  [30,] 0.524434017 0.225166605 0.05428180 0.29304103 0.4582124185 0.93377754 #>  [31,] 0.006054032 0.394100356 0.91516574 0.07214098 0.8243055581 0.44407372 #>  [32,] 0.358169600 0.305180927 0.17007909 0.20945157 0.1164876064 0.49028285 #>  [33,] 0.314492663 0.159265965 0.17976807 0.63403030 0.5838251610 0.24345649 #>  [34,] 0.728046278 0.966586483 0.96279714 0.42833302 0.9794144742 0.11744857 #>  [35,] 0.414412289 0.052315094 0.22906475 0.82759937 0.8512841540 0.97215131 #>  [36,] 0.555180280 0.130027796 0.67009524 0.91942180 0.0101779050 0.90315938 #>  [37,] 0.943015957 0.047502414 0.30105985 0.78178808 0.4069998511 0.54580288 #>  [38,] 0.553829256 0.257757886 0.33387606 0.44287251 0.0398832804 0.28503879 #>  [39,] 0.984174288 0.400768609 0.60377494 0.29027187 0.2692595625 0.82428672 #>  [40,] 0.691918973 0.069772078 0.97072746 0.28800238 0.9933965651 0.95735595 #>  [41,] 0.773601100 0.295850620 0.69652249 0.46034598 0.2614750289 0.53543923 #>  [42,] 0.609103510 0.103673651 0.06307758 0.25326653 0.7052279345 0.28577812 #>  [43,] 0.928072379 0.063255900 0.68920575 0.88080895 0.2192750010 0.72389030 #>  [44,] 0.446097717 0.779738218 0.09703642 0.27616011 0.5909413402 0.70882246 #>  [45,] 0.452403348 0.624996375 0.39172281 0.39283272 0.0391163526 0.49863186 #>  [46,] 0.573509782 0.500272904 0.57022728 0.32347620 0.4959237168 0.01920003 #>  [47,] 0.857767906 0.009496499 0.23259815 0.50960007 0.1446600421 0.90090282 #>  [48,] 0.651621757 0.804993540 0.25570140 0.12507671 0.8741191395 0.14756317 #>  [49,] 0.369809964 0.272193128 0.57179030 0.65850689 0.4632415306 0.16564147 #>  [50,] 0.647312406 0.204934653 0.79511793 0.66677815 0.8911844061 0.02172912 #>  [51,] 0.449930810 0.066572136 0.84108448 0.13677878 0.0276701141 0.86127278 #>  [52,] 0.114539094 0.629101636 0.56169478 0.54453159 0.8316819659 0.78770918 #>  [53,] 0.017883373 0.087848759 0.89135807 0.31748196 0.4794404642 0.70208171 #>  [54,] 0.016213400 0.564413732 0.51385171 0.33252414 0.7981843108 0.70388537 #>  [55,] 0.438458225 0.410279613 0.76212249 0.71641890 0.4473413138 0.50956686 #>  [56,] 0.245504981 0.826071737 0.76832027 0.52726364 0.0009667089 0.01714540 #>  [57,] 0.681500054 0.639570077 0.78513825 0.52284705 0.6250918021 0.77504741 #>  [58,] 0.658792683 0.552048827 0.64298815 0.31852537 0.9313286161 0.90849863 #>  [59,] 0.370535352 0.967474279 0.86347196 0.36335780 0.8857769163 0.14893989 #>  [60,] 0.345704368 0.523273702 0.51482353 0.11371904 0.3473920326 0.02633584 #>  [61,] 0.545493901 0.767670361 0.38280077 0.42630640 0.3885137790 0.80683944 #>  [62,] 0.303455427 0.308253985 0.30979023 0.56232070 0.3443984631 0.10869285 #>  [63,] 0.724169717 0.514253756 0.29708229 0.52841393 0.4326384107 0.16606842 #>  [64,] 0.795782618 0.651221900 0.67912524 0.51743051 0.3809497443 0.36105874 #>  [65,] 0.637409487 0.134610228 0.40038230 0.07383413 0.4146616552 0.10041967 #>  [66,] 0.053789354 0.346503008 0.49438135 0.61904057 0.3385172430 0.45102273 #>  [67,] 0.605939128 0.725345668 0.77258083 0.61448685 0.4744376733 0.16224609 #>  [68,] 0.682712918 0.820230978 0.18775588 0.43141201 0.3606150448 0.17257483 #>  [69,] 0.540318287 0.940613434 0.33979822 0.95351097 0.3222468989 0.64962943 #>  [70,] 0.957829272 0.423433564 0.12900780 0.24067578 0.5793347245 0.50051460 #>  [71,] 0.619096290 0.426617286 0.65462081 0.31916478 0.1259165055 0.82840468 #>  [72,] 0.470096336 0.100806242 0.23630735 0.66839187 0.0517363911 0.83311439 #>  [73,] 0.187580746 0.283610536 0.57911073 0.18679400 0.8416616749 0.53982172 #>  [74,] 0.129638184 0.111541467 0.26949659 0.97487561 0.4331534300 0.23610254 #>  [75,] 0.246648811 0.342797087 0.25569377 0.87361462 0.7450110619 0.05950291 #>  [76,] 0.982341771 0.602964143 0.95634861 0.57694586 0.5099806103 0.77374674 #>  [77,] 0.106961685 0.526038901 0.86027071 0.35174621 0.7631357834 0.75971079 #>  [78,] 0.293937351 0.282713812 0.39795783 0.16021865 0.4141777316 0.23227044 #>  [79,] 0.890820416 0.195509646 0.56314081 0.22389472 0.9034154934 0.51686329 #>  [80,] 0.583781634 0.241446795 0.41509969 0.36043435 0.6492135369 0.65128558 #>  [81,] 0.521969125 0.451141373 0.29762345 0.75292318 0.2189527624 0.25579106 #>  [82,] 0.732418873 0.735282581 0.59486221 0.39730006 0.5060614361 0.59146734 #>  [83,] 0.355636968 0.358710801 0.90628641 0.65838339 0.8003569201 0.49750752 #>  [84,] 0.311671901 0.904757861 0.38476811 0.44078987 0.2477125830 0.53139382 #>  [85,] 0.942795870 0.704375739 0.58122557 0.30125542 0.6656996133 0.06720684 #>  [86,] 0.560930010 0.826058950 0.61034642 0.53387240 0.0744961363 0.80379596 #>  [87,] 0.419691716 0.980696927 0.19963325 0.59336117 0.1914572248 0.15351918 #>  [88,] 0.055999589 0.609949302 0.28013700 0.61718968 0.0308246484 0.25053588 #>  [89,] 0.598083403 0.972437867 0.67867939 0.15320696 0.4825107476 0.28033301 #>  [90,] 0.784971283 0.559541676 0.04897681 0.38456034 0.5526122020 0.58353497 #>  [91,] 0.297539781 0.013998928 0.17127244 0.01441190 0.2221132251 0.82295445 #>  [92,] 0.796018837 0.369687586 0.58602329 0.04676752 0.5445415210 0.82907862 #>  [93,] 0.593188778 0.552993459 0.86304267 0.81942180 0.3445364842 0.73985796 #>  [94,] 0.384389145 0.032407875 0.15124667 0.49216761 0.3220908665 0.83680753 #>  [95,] 0.112165601 0.260783005 0.28559145 0.57784024 0.0312723604 0.69151849 #>  [96,] 0.589872058 0.394362520 0.15593829 0.43260535 0.9632428817 0.47458822 #>  [97,] 0.629394478 0.168538547 0.29172574 0.21115895 0.9402104947 0.12155326 #>  [98,] 0.804516908 0.824381623 0.89921666 0.09355037 0.5372100698 0.32982298 #>  [99,] 0.436832433 0.093399962 0.77732548 0.46778860 0.0886329468 0.32414782 #> [100,] 0.303756882 0.530018417 0.99684181 0.39663384 0.2848881786 0.26153654 #>              [,7]       [,8]        [,9]      [,10] #>   [1,] 0.45867261 0.27964319 0.234530794 0.02942148 #>   [2,] 0.86718128 0.61781008 0.088063537 0.58697576 #>   [3,] 0.80206879 0.34927257 0.890290824 0.51450599 #>   [4,] 0.78126683 0.42300875 0.010431843 0.91324181 #>   [5,] 0.32069017 0.31768888 0.015075674 0.13813639 #>   [6,] 0.75845973 0.16358079 0.432131982 0.79308818 #>   [7,] 0.70190340 0.25486078 0.425047619 0.48978526 #>   [8,] 0.76242317 0.84187851 0.482476167 0.90580621 #>   [9,] 0.74997557 0.80124789 0.435054233 0.79647336 #>  [10,] 0.48081025 0.01835239 0.210313604 0.26063785 #>  [11,] 0.84429608 0.11944749 0.505777671 0.43974808 #>  [12,] 0.19241792 0.20429480 0.746744136 0.57477456 #>  [13,] 0.40019066 0.90990867 0.042000639 0.11753646 #>  [14,] 0.29204474 0.67749487 0.522047890 0.37298630 #>  [15,] 0.39802159 0.77317274 0.502879962 0.73721313 #>  [16,] 0.19975661 0.33421490 0.171964967 0.19462400 #>  [17,] 0.61149815 0.39187411 0.900544927 0.95903211 #>  [18,] 0.69047381 0.34422750 0.896048208 0.94716292 #>  [19,] 0.93106692 0.23749790 0.922760103 0.91560618 #>  [20,] 0.14509475 0.03330735 0.665977472 0.28384915 #>  [21,] 0.12828466 0.92492601 0.200305945 0.84293691 #>  [22,] 0.45452634 0.48972957 0.001328368 0.16711887 #>  [23,] 0.48835155 0.19065503 0.715061187 0.20087351 #>  [24,] 0.87081465 0.21939035 0.076885379 0.76008341 #>  [25,] 0.38403275 0.29344678 0.147532066 0.02602432 #>  [26,] 0.67360797 0.66864343 0.233910572 0.12244429 #>  [27,] 0.28056072 0.90619726 0.027916581 0.64788636 #>  [28,] 0.28501252 0.68090253 0.737007833 0.14417569 #>  [29,] 0.81461540 0.26149153 0.597539095 0.71790652 #>  [30,] 0.37078413 0.76122105 0.551207633 0.47553432 #>  [31,] 0.84279223 0.55228392 0.728759834 0.95197631 #>  [32,] 0.31966450 0.04285626 0.138633011 0.41015292 #>  [33,] 0.26560827 0.20061022 0.808489861 0.92347189 #>  [34,] 0.83698335 0.87317951 0.527980153 0.77765418 #>  [35,] 0.57224411 0.76633644 0.486469637 0.07028669 #>  [36,] 0.63355667 0.51193735 0.355168624 0.69646394 #>  [37,] 0.53915639 0.04457015 0.542727466 0.95663963 #>  [38,] 0.14517859 0.25844689 0.519417275 0.71120034 #>  [39,] 0.52898223 0.46185524 0.006859340 0.81177440 #>  [40,] 0.55571081 0.17102846 0.628688341 0.99429506 #>  [41,] 0.52673049 0.02079494 0.108508086 0.10239199 #>  [42,] 0.28030217 0.05361692 0.199170890 0.17982631 #>  [43,] 0.05137404 0.05584020 0.659433956 0.11439898 #>  [44,] 0.60804931 0.71456326 0.659129641 0.99089823 #>  [45,] 0.66509511 0.46169346 0.973183315 0.77123202 #>  [46,] 0.02790047 0.20838818 0.569235913 0.63064021 #>  [47,] 0.35790002 0.98113709 0.634887839 0.48644865 #>  [48,] 0.63761322 0.29722347 0.905244131 0.37076547 #>  [49,] 0.61762543 0.24292967 0.710270028 0.44883070 #>  [50,] 0.50747635 0.37302968 0.607876283 0.04433875 #>  [51,] 0.47547454 0.42131024 0.130438639 0.95051516 #>  [52,] 0.75279336 0.74736219 0.234743517 0.03403903 #>  [53,] 0.12349366 0.94388617 0.848996080 0.54517105 #>  [54,] 0.81540210 0.76667212 0.212164430 0.14127244 #>  [55,] 0.57323371 0.85314676 0.136398079 0.63237447 #>  [56,] 0.30628656 0.05353242 0.410186009 0.43114531 #>  [57,] 0.12863809 0.97789497 0.420752105 0.88253662 #>  [58,] 0.14396537 0.02171754 0.393173447 0.70332487 #>  [59,] 0.60797172 0.74720502 0.835083184 0.78285011 #>  [60,] 0.31657178 0.43289505 0.399115038 0.61840885 #>  [61,] 0.27423089 0.29146409 0.744117601 0.76707404 #>  [62,] 0.61028178 0.34658093 0.286390366 0.96117774 #>  [63,] 0.14697593 0.07669781 0.098024392 0.32014137 #>  [64,] 0.61721564 0.88200936 0.513879854 0.72411769 #>  [65,] 0.34363300 0.13699511 0.257099357 0.86259157 #>  [66,] 0.96997914 0.87306575 0.916396858 0.61822332 #>  [67,] 0.53653059 0.83788572 0.091944952 0.39771087 #>  [68,] 0.81537746 0.41655764 0.154490140 0.04573707 #>  [69,] 0.86589510 0.19523326 0.283856080 0.44081003 #>  [70,] 0.84662678 0.79385428 0.620613887 0.99027998 #>  [71,] 0.73583741 0.48602575 0.151388377 0.24153159 #>  [72,] 0.96858956 0.46789771 0.813134962 0.24806834 #>  [73,] 0.62564606 0.20723635 0.799504728 0.52765491 #>  [74,] 0.75816501 0.56560640 0.263116218 0.79863615 #>  [75,] 0.91886288 0.15029633 0.397804430 0.92512858 #>  [76,] 0.53563221 0.39871091 0.610000498 0.48829363 #>  [77,] 0.04745561 0.83377344 0.890234263 0.38630466 #>  [78,] 0.14451731 0.34201092 0.877654070 0.70391514 #>  [79,] 0.21357684 0.02358397 0.138830481 0.51028749 #>  [80,] 0.10511982 0.95882336 0.697824120 0.34257394 #>  [81,] 0.99215554 0.45121609 0.635950727 0.14450745 #>  [82,] 0.67838549 0.20465714 0.810814075 0.08545184 #>  [83,] 0.20732560 0.90422035 0.391955703 0.72446437 #>  [84,] 0.79327972 0.89437306 0.932825317 0.96122963 #>  [85,] 0.17845086 0.06942319 0.489763582 0.66401028 #>  [86,] 0.34984661 0.53454966 0.404829323 0.02811447 #>  [87,] 0.57797838 0.73467449 0.350767237 0.17639386 #>  [88,] 0.34838629 0.56446655 0.277207967 0.46272741 #>  [89,] 0.09644745 0.91469967 0.419268442 0.29933342 #>  [90,] 0.66480274 0.46967243 0.792754759 0.72938073 #>  [91,] 0.29720451 0.87970282 0.198308632 0.40607777 #>  [92,] 0.86466470 0.64329641 0.380757095 0.03142837 #>  [93,] 0.78525321 0.95224519 0.896596054 0.23267514 #>  [94,] 0.64312257 0.07873746 0.555042083 0.42107821 #>  [95,] 0.99523918 0.13395487 0.240265844 0.99138533 #>  [96,] 0.20909922 0.93612830 0.623169575 0.15745909 #>  [97,] 0.06861931 0.63968676 0.925886874 0.48273838 #>  [98,] 0.92974146 0.21121363 0.733767584 0.19661509 #>  [99,] 0.36959972 0.05608442 0.762921270 0.80778771 #> [100,] 0.68278027 0.84865514 0.981901851 0.69510746 #>  #> $y #>   [1] 25.967753 28.224158 24.308114 16.260810 14.605940 16.180729 26.043424 #>   [8] 13.747778 14.153632 18.939564 14.974875 25.853405 11.725904 19.890476 #>  [15] 10.125123 19.790769 14.873869 13.221169 15.264154  8.319137 18.562975 #>  [22]  8.702936 22.877432 10.656467 12.379701 23.858400 13.705242 11.554343 #>  [29] 17.692796 16.112321 12.567249  8.604455 15.303269 26.373608 19.877130 #>  [36] 14.066593 13.902500  9.559586 15.861306 21.321177 12.108558 17.509703 #>  [43] 12.924570 18.356385 11.737842 15.748314  9.764975 20.100128 13.986327 #>  [50] 20.000394  4.352647 15.875701 11.510081  9.964595 19.885920 13.335744 #>  [57] 20.220528 21.546646 25.468322  9.724256 18.365318 13.029640 18.940788 #>  [64] 18.465503  7.340685 11.140388 22.094499 19.800653 22.873229 21.192799 #>  [71] 10.952301 10.994102 11.099130 15.779258 20.470337 26.151542 17.069172 #>  [78]  8.848633 18.827985 15.317688 18.836795 18.614332 23.207179 13.789158 #>  [85] 18.271744 16.977879 20.992150  6.754048 18.355945 23.783329  7.603829 #>  [92] 14.001405 22.732024 10.670344  8.523954 25.457206 16.537974 17.648829 #>  [99]  6.722495 16.719324 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 2 — sim_Friedman2","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"regression problem Friedman 2 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$y = (x1^2 + (x2 x3 - (1/(x2 x4)))^2)^{0.5} + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(n, sd = 125)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 2 — sim_Friedman2","text":"","code":"sim_Friedman2(100, sd=125) #> $x #>              [,1]      [,2]        [,3]      [,4] #>   [1,] 80.4227642  595.0752 0.896230032  3.206018 #>   [2,] 74.5797111  638.0783 0.680290397  6.738510 #>   [3,] 23.1995623  749.0139 0.103690759  1.037818 #>   [4,] 88.4832140  301.5330 0.696860501  3.975852 #>   [5,] 68.4124698  382.9415 0.328663176  4.688482 #>   [6,] 21.8968508 1205.4742 0.271569150  4.783368 #>   [7,] 86.1577310  605.7774 0.707695137  2.020225 #>   [8,] 21.3300765  632.3695 0.397090918  2.555451 #>   [9,] 55.1631927 1308.9349 0.778058988 10.699646 #>  [10,] 68.9077416  794.4849 0.659342615 10.389254 #>  [11,]  3.1032542  718.4245 0.697605770  4.832900 #>  [12,] 16.9366640 1618.7708 0.947793665  2.308662 #>  [13,] 45.0753116 1416.9722 0.491674937  7.893367 #>  [14,] 75.5777050 1029.4743 0.874003103  1.346556 #>  [15,] 69.5961563 1475.5682 0.927729799  8.284657 #>  [16,] 31.6941662 1653.3286 0.442223582  5.818706 #>  [17,] 23.0045442 1088.4578 0.588516291  9.958889 #>  [18,] 95.7588678 1446.7770 0.974470081  5.151090 #>  [19,] 69.4554776  327.3754 0.848993721  4.529444 #>  [20,] 34.0565165  399.5865 0.484973809  4.500371 #>  [21,]  3.6091344  735.4500 0.049015400  2.355518 #>  [22,]  2.3574364  600.6720 0.653547349  3.432090 #>  [23,]  9.3162644 1422.2354 0.761628649  8.831510 #>  [24,]  6.4627336  549.1361 0.485526598  2.795635 #>  [25,] 59.9587677 1019.1907 0.313907313  1.147021 #>  [26,]  7.7802893 1466.7748 0.910085354  5.637359 #>  [27,]  8.0703935 1298.6733 0.762260371  7.091253 #>  [28,] 52.6857859 1534.8191 0.139500669  9.051939 #>  [29,] 42.9100579  161.3363 0.019082628  3.753883 #>  [30,] 21.5725967 1002.4555 0.314496225  3.324128 #>  [31,] 67.6989245 1469.6360 0.866784821  4.991811 #>  [32,] 41.6443732 1036.2458 0.861827178  3.062032 #>  [33,] 42.6969598  897.1540 0.004283601  2.014210 #>  [34,] 19.7735717  551.2145 0.893880889  2.899141 #>  [35,] 60.2294827 1264.0223 0.567878560  7.713716 #>  [36,] 45.5981771 1560.2214 0.558583303  5.923678 #>  [37,] 80.3468176 1708.6209 0.538368025  2.178869 #>  [38,] 78.9974938 1147.9405 0.775318963  6.621108 #>  [39,] 75.9131627 1179.1805 0.434482775  2.827537 #>  [40,] 97.1586135  483.2238 0.367770823  3.261820 #>  [41,] 34.0312815 1111.8515 0.431847357  6.430201 #>  [42,] 97.3268938 1717.0183 0.376212129  8.985337 #>  [43,] 57.5459945  737.5538 0.157621300  8.921174 #>  [44,] 58.1980188  708.3963 0.480299305  3.431437 #>  [45,] 35.8258240  460.2927 0.177919872  2.125103 #>  [46,] 77.0343545 1493.3100 0.682820640  7.469715 #>  [47,]  8.6744860  241.9723 0.748214174  3.943305 #>  [48,] 36.1417245 1294.9703 0.478055523  2.161864 #>  [49,] 75.6659765  712.6873 0.668792356  7.224396 #>  [50,] 21.6653431  396.1120 0.265607129  2.395187 #>  [51,] 83.4712866  703.5568 0.668456003  8.798716 #>  [52,] 84.2751737 1519.0385 0.583184903  1.834744 #>  [53,] 26.4050303  228.5483 0.153211740  7.106203 #>  [54,] 26.5701433  706.8973 0.539377614  5.132824 #>  [55,] 19.9143059  161.0050 0.972744224  9.184647 #>  [56,] 73.0042038  812.5953 0.050052494  1.859791 #>  [57,] 50.2120093  150.4134 0.420426856  2.924524 #>  [58,]  2.4477272 1518.8667 0.152355528  6.580422 #>  [59,] 65.1091060  360.5874 0.753450732  6.254011 #>  [60,] 38.1705282  548.5053 0.075007207  2.550151 #>  [61,] 52.1701160 1722.6709 0.459895486  4.990745 #>  [62,] 25.9015850  675.1195 0.419050638  5.913210 #>  [63,] 49.4719493 1458.8883 0.289995421 10.853619 #>  [64,] 65.5477634  835.6560 0.447524421  1.174240 #>  [65,] 45.2050529  850.9228 0.882946222  2.395341 #>  [66,] 37.0736127  945.9975 0.239921147  6.380558 #>  [67,] 74.7054088  925.7875 0.355656992  2.591979 #>  [68,] 21.1687772  566.1540 0.997174515  9.620821 #>  [69,] 45.5771424  417.4648 0.934802129  5.330437 #>  [70,] 45.9320574 1028.7459 0.186182595  4.674245 #>  [71,] 72.1494157 1230.0365 0.862622142  5.964745 #>  [72,] 73.8475733 1356.4041 0.821820243 10.839096 #>  [73,] 25.5951187  938.6630 0.278340114  9.379253 #>  [74,] 10.9132595 1221.8102 0.868292161  7.984519 #>  [75,] 37.4584621  218.1331 0.029194690  5.054806 #>  [76,] 72.0840079 1200.8183 0.982431167  7.778335 #>  [77,]  5.6541095  908.2915 0.627823107  3.651509 #>  [78,]  7.6375947  243.4416 0.155519531  9.172019 #>  [79,] 98.3351922 1036.9981 0.118609716 10.586884 #>  [80,] 53.7416490  220.7252 0.328384436  6.148439 #>  [81,] 97.2299495  680.5466 0.321033667  3.592588 #>  [82,] 69.6068765 1257.2138 0.454809306  8.599460 #>  [83,] 57.4066988 1116.0889 0.493467304  4.351404 #>  [84,] 14.8929250 1223.0820 0.155062485  4.478375 #>  [85,] 19.2666404  883.5681 0.238385428  3.654457 #>  [86,] 74.7983972  473.0298 0.612884958  2.366575 #>  [87,] 10.5243489  824.5892 0.917834385  8.370629 #>  [88,]  2.1667989 1673.8871 0.241838924  6.971146 #>  [89,] 53.2995626  126.1723 0.215250647  9.144103 #>  [90,] 45.7273421  194.0113 0.535847080  4.842129 #>  [91,] 36.5942653 1241.2103 0.050893717  3.367889 #>  [92,] 54.7961884  792.7252 0.348385465  7.402313 #>  [93,] 82.2785621 1739.7902 0.149737281  1.956202 #>  [94,] 66.3971834  938.6127 0.624140495  1.717938 #>  [95,] 32.1695036  176.1228 0.191180361  8.460139 #>  [96,] 23.4708730  740.8336 0.103672966  6.519009 #>  [97,] 17.4841189  573.7726 0.829245238  7.577514 #>  [98,]  0.3106331 1157.3548 0.317811769  2.586089 #>  [99,] 56.4359512 1071.7976 0.001946984  8.764277 #> [100,] 92.2089926 1353.2567 0.498569037  4.064685 #>  #> $y #>   [1]  445.06634  363.92336   22.76794  186.33478  222.64272  495.83426 #>   [7]  699.74127  130.45333  982.41934  291.93413  397.00631 1505.70799 #>  [13]  741.16840  920.21777 1401.79400  733.87564  502.88302 1409.78836 #>  [19]  413.95458  188.71131  338.43287  421.46883 1283.93120  293.12536 #>  [25]  275.87785 1201.67459 1021.07733  212.04257 -160.12914  458.57894 #>  [31] 1396.75568 1080.21956  -14.94583  607.58281  782.76260  708.65567 #>  [37] 1004.00229  870.13329  372.69808  235.60942  535.10158  720.45947 #>  [43]  -97.12974  390.34501   68.09596  977.85201   14.74951  579.90562 #>  [49]  570.12757  175.26723  320.91959  873.01543  107.71078  169.29204 #>  [55]  257.15660   18.31133  180.12551  -22.57315  494.29373  -69.51785 #>  [61]  888.47436  258.16679  297.06505  315.19342  637.51960  321.08677 #>  [67]  433.03531  604.82196  386.27889  190.72875 1120.95556 1248.41280 #>  [73]  265.69994  865.90030   15.80906 1106.22994  546.40675  -25.59729 #>  [79]  122.06722  -33.13639  366.28527  419.34571  395.57226  217.14380 #>  [85]   29.36230  138.99968  554.20454  564.33413   60.14916  -96.79684 #>  [91]  103.09546  235.13889  447.57205  536.24714 -202.34373 -118.97992 #>  [97]  417.46900  415.53677   60.53159  648.22558 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Regression Problem Friedman 3 — sim_Friedman3","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"regression problem Friedman 3 described Friedman (1991) Breiman (1996). Inputs 4 independent variables uniformly distributed ranges $$0 \\le x1 \\le 100$$ $$40 \\pi \\le x2 \\le 560 \\pi$$ $$0 \\le x3 \\le 1$$ $$1 \\le x4 \\le 11$$ outputs created according formula $$\\mbox{atan}((x2 x3 - (1/(x2 x4)))/x1) + e$$ e \\(N(0,sd^2)\\).","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n, sd = 0.1)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"n number data points create sd Standard deviation noise. default value 125 gives signal noise ratio (.e., ratio standard deviations) 3:1. Thus, variance function (without noise) accounts 90% total variance.","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Returns list components x input values (independent variables) y output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"Breiman, Leo (1996) Bagging predictors. Machine Learning 24, pages 123-140.  Friedman, Jerome H. (1991) Multivariate adaptive regression splines. Annals Statistics 19 (1), pages 1-67.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_Friedman3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Regression Problem Friedman 3 — sim_Friedman3","text":"","code":"sim_Friedman3(n=100, sd=0.1) #> $x #>              [,1]      [,2]       [,3]      [,4] #>   [1,]  6.4706423  486.2753 0.98925319  3.409115 #>   [2,] 39.1451573  256.2812 0.78897627  4.643690 #>   [3,] 41.1005441 1463.3363 0.19809867  3.067979 #>   [4,] 14.5645401  232.5672 0.74285561 10.458120 #>   [5,] 46.5348011 1535.8378 0.94762892  6.688828 #>   [6,] 51.7615939  336.5630 0.18594130  1.810508 #>   [7,] 67.8322319 1013.0276 0.32983277  7.525799 #>   [8,] 51.5764917  402.8817 0.65789360  3.399516 #>   [9,] 56.3268959 1731.2179 0.56193888  1.083845 #>  [10,] 77.0429853  753.7605 0.66705078  9.671942 #>  [11,] 92.3699024 1445.9311 0.83636383  1.734005 #>  [12,] 65.1296906 1152.7043 0.34558382  1.270766 #>  [13,]  5.0649500  669.0101 0.58904666  1.980853 #>  [14,]  1.0576435 1126.9177 0.71724730  1.185093 #>  [15,] 21.1487149 1294.0323 0.53720807 10.368532 #>  [16,] 69.8218012 1542.4314 0.28537307  2.898602 #>  [17,] 84.0408520  130.9008 0.66394619  6.054778 #>  [18,] 71.5742337 1230.3132 0.32921446  5.184331 #>  [19,] 45.9657789 1115.8652 0.06088396  2.524645 #>  [20,] 74.9027199 1571.6844 0.03754159  8.324758 #>  [21,] 63.1168330  829.7362 0.74441482  2.300745 #>  [22,] 82.9183957 1286.9917 0.74239040 10.900624 #>  [23,] 23.5320906 1500.0471 0.18004544  6.685084 #>  [24,] 95.9988372 1634.4634 0.20645528  8.313580 #>  [25,]  0.9568694  934.6020 0.09420823  2.292323 #>  [26,] 98.4148005  582.2540 0.31990841  3.425460 #>  [27,] 53.1782891  497.6246 0.24221428  2.399101 #>  [28,] 80.9770872 1169.2053 0.08036432 10.851392 #>  [29,] 47.5333396 1123.2906 0.34877718  2.465236 #>  [30,] 49.1626727  268.4388 0.17417797  9.598054 #>  [31,] 24.7746295  614.6176 0.92756117  9.374226 #>  [32,] 72.1899115 1693.6877 0.01308226  2.637545 #>  [33,]  3.5155645  822.7147 0.08521419  7.548578 #>  [34,] 54.7899662 1684.1697 0.42269206  8.161127 #>  [35,] 13.4107509 1082.3277 0.22410462  3.591248 #>  [36,] 99.0727223 1645.2283 0.88952276  6.308468 #>  [37,] 25.0703808  802.8164 0.18977446  1.075160 #>  [38,] 98.4732380  975.5856 0.50835110  5.009392 #>  [39,] 34.0597221  693.9667 0.48317467 10.275308 #>  [40,] 94.3058398  909.6371 0.86084524  5.864662 #>  [41,] 46.0535829  612.3961 0.11577040  4.408301 #>  [42,] 75.7955575  385.5321 0.88372114  4.833754 #>  [43,] 46.5716399  446.8068 0.56894416  7.908731 #>  [44,] 94.9303203  443.3625 0.84408892  5.178789 #>  [45,] 41.2576068 1034.2460 0.28033986  8.085535 #>  [46,] 35.8024092  895.9684 0.92073037  8.066360 #>  [47,] 63.8054280  596.3106 0.99325542  2.205488 #>  [48,] 68.5198770 1387.4122 0.79927290  9.423172 #>  [49,] 49.3569422 1666.3925 0.26303382 10.547884 #>  [50,] 67.4266831  476.1429 0.29369248  1.286887 #>  [51,] 78.3370577 1305.8783 0.46420177  1.952125 #>  [52,] 70.8709521 1735.3361 0.84625951  9.448606 #>  [53,] 10.0306153 1533.7099 0.85062863  5.528356 #>  [54,] 98.5579392 1137.2031 0.56626010  8.420565 #>  [55,] 53.8170242  128.2289 0.17918279  6.399264 #>  [56,] 66.6946764  545.4037 0.88842973  8.320667 #>  [57,] 97.9647273 1491.9202 0.94346508  4.077939 #>  [58,] 77.5171731 1252.7870 0.32620610  3.430449 #>  [59,] 37.0218480  177.2730 0.67467175  8.108773 #>  [60,] 75.6563361  385.6728 0.31898264  8.518614 #>  [61,] 56.4314040  589.0105 0.39716590  7.879031 #>  [62,] 61.3482189 1211.4162 0.67529299  6.761658 #>  [63,] 17.2714023  484.3059 0.50352196  7.370502 #>  [64,] 71.4371486 1646.0647 0.70665433  4.191726 #>  [65,]  7.4332020 1412.1886 0.52697450 10.798265 #>  [66,] 11.5292804  835.3989 0.33722941  9.480188 #>  [67,] 57.5521054  309.0609 0.96504947  3.266356 #>  [68,] 39.2337317 1046.1118 0.24855078 10.319507 #>  [69,] 13.8647300  994.6390 0.27485509  6.342952 #>  [70,] 90.5160399 1283.7009 0.12830864  7.232990 #>  [71,] 98.2127694  750.6710 0.99852995  2.916124 #>  [72,] 52.5648244 1161.8797 0.29762555  7.840155 #>  [73,] 34.4211309 1581.1258 0.14009470  6.565075 #>  [74,] 41.3175197  530.9159 0.17340633 10.311533 #>  [75,] 90.3221951  490.5192 0.94212293 10.621092 #>  [76,] 92.1208192  902.8861 0.98947703  2.018461 #>  [77,] 97.1898783  358.7375 0.92850674  6.291957 #>  [78,] 72.4233706 1755.2888 0.12806160  6.358684 #>  [79,] 82.4184314  489.5638 0.73502999  1.049940 #>  [80,] 61.4550122  586.7926 0.54241801  1.544999 #>  [81,] 87.5686646 1003.2941 0.06017244  8.518332 #>  [82,] 12.6001910  885.6904 0.71688957  8.502702 #>  [83,] 12.4763738 1550.4726 0.69035167  4.776137 #>  [84,] 50.5217012  754.2723 0.12993048  2.696172 #>  [85,] 47.1777220 1054.2219 0.25403836  8.207697 #>  [86,] 70.7282047 1285.1135 0.09993742  7.032027 #>  [87,] 38.5083767  279.5456 0.29895078  5.151581 #>  [88,] 87.0670674  212.1320 0.02143515  6.695939 #>  [89,] 38.4501882 1578.3990 0.47701670  3.268502 #>  [90,] 38.5344555 1720.7740 0.28823642  2.585039 #>  [91,] 92.7319553 1747.8780 0.25146351  6.335167 #>  [92,] 60.4576582 1128.8648 0.57637240  6.318896 #>  [93,] 48.4333958 1591.8597 0.03299123  9.136478 #>  [94,] 27.1492609 1680.9235 0.07422307 10.328852 #>  [95,] 53.2326137 1085.3584 0.60334450  6.527457 #>  [96,] 40.7079576  154.9951 0.74190829  4.216322 #>  [97,] 35.3250795 1109.6918 0.89928291  5.575510 #>  [98,] 31.2507587 1215.6196 0.30087032  9.596444 #>  [99,] 26.2046217  525.2670 0.09158074  6.023268 #> [100,] 78.0622011 1588.2615 0.99392641 10.133711 #>  #> $y #>   [1] 1.42007961 1.24375286 1.39238313 1.41736260 1.60062455 0.84924441 #>   [7] 1.35997228 1.35257478 1.74447801 1.30268807 1.53020794 1.34922881 #>  [13] 1.53698915 1.50447946 1.53064648 1.22552195 0.98486944 1.36402621 #>  [19] 0.91307196 0.66669375 1.26178201 1.47382806 1.39239368 1.37785805 #>  [25] 1.48486014 1.12783007 1.27467379 0.77969306 1.51054580 0.64297248 #>  [31] 1.63411143 0.20652590 1.36949128 1.54525309 1.45954974 1.35393819 #>  [37] 1.46834793 1.27109983 1.44081678 1.39526546 1.06758376 1.49265228 #>  [43] 1.34585792 1.47387386 1.35817688 1.58811921 1.30592089 1.42249156 #>  [49] 1.28537273 1.09327587 1.33986536 1.61074590 1.65909485 1.38804874 #>  [55] 0.35414693 1.35054781 1.45372398 1.56182032 1.31649793 1.09981799 #>  [61] 1.28491556 1.44243612 1.33773912 1.35966768 1.65590768 1.79688923 #>  [67] 1.41016065 1.57873034 1.51082789 0.98067227 1.37146595 1.69475611 #>  [73] 1.45679704 1.12848520 1.44931286 1.47177334 1.22346600 1.29527868 #>  [79] 1.54164271 1.36915753 0.77783732 1.53338603 1.51817143 1.21405772 #>  [85] 1.43171144 1.02709452 1.08939392 0.02903101 1.33346189 1.57435025 #>  [91] 1.04857682 1.47614372 0.95544698 1.37137626 1.47154963 1.31699368 #>  [97] 1.57284139 1.53528222 1.07024084 1.63842830 #>"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"classification problem Circle described BARK paper (2008). Inputs dim independent variables uniformly distributed interval \\([-1,1]\\), first 2 dim actually signals. Outputs created according formula $$y = 1(x1^2+x2^2 \\le 2/\\pi)$$","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n, dim = 5)"},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"n number data points generate dim number dimension problem, less 2","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Returns list components x input values (independent variables) y 0/1 output values (dependent variable)","code":""},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"Ouyang, Zhi (2008) Bayesian Additive Regression Kernels. Duke University. PhD dissertation, Chapter 3.","code":""},{"path":[]},{"path":"http://merliseclyde.github.io/bark/reference/sim_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Hyper-Sphere for Classification Problems — sim_circle","text":"","code":"sim_circle(n=100, dim=5) #> $x #>                [,1]        [,2]          [,3]         [,4]         [,5] #>   [1,]  0.650197681  0.53532262  0.3316904875 -0.994320423  0.803080702 #>   [2,]  0.446298432  0.49126269 -0.9018608970  0.954881002  0.579974689 #>   [3,]  0.052820250  0.09670727 -0.5943873902  0.207454090 -0.227705631 #>   [4,]  0.256542898 -0.79670882  0.3305502362  0.509221357 -0.622816002 #>   [5,] -0.143597788 -0.07568780  0.8054930246  0.486863972  0.232268759 #>   [6,] -0.394028886 -0.63205460 -0.0932271066 -0.682653706  0.544351292 #>   [7,]  0.009063629  0.81361441  0.8576995409  0.860098628  0.626387807 #>   [8,]  0.921742515 -0.55550529 -0.8622727459 -0.870495277 -0.342103921 #>   [9,] -0.589452725  0.06642681  0.5991972536  0.107409098 -0.962223662 #>  [10,] -0.089160953 -0.35835669  0.5616340013  0.021952730  0.488443181 #>  [11,] -0.557682689 -0.17823060 -0.8309233692 -0.112695537  0.120383673 #>  [12,]  0.185703869 -0.58753883  0.0431763874 -0.908728813  0.122326742 #>  [13,] -0.157980524 -0.86352268  0.3897178862 -0.493233066 -0.351814002 #>  [14,]  0.039974548 -0.90514233 -0.7985444623  0.630688302  0.543042018 #>  [15,]  0.042828682 -0.48537775 -0.7913783723  0.044003569  0.232244812 #>  [16,]  0.847324266 -0.42982742  0.7713148776  0.895917530 -0.743899903 #>  [17,]  0.422351941 -0.70127726 -0.1455766265 -0.452414331 -0.598191860 #>  [18,] -0.593617069 -0.06566322  0.2139490587 -0.790794771 -0.881946801 #>  [19,] -0.985553520 -0.94815252  0.6835800996 -0.408709455  0.741117056 #>  [20,]  0.253659971  0.93329989 -0.7336702817 -0.288412653 -0.814218004 #>  [21,] -0.313296671  0.21557951 -0.5755559062 -0.779689575  0.710334142 #>  [22,]  0.641178046  0.14186285 -0.0347873759  0.152655785  0.306597209 #>  [23,]  0.503922857 -0.85493681  0.9644366256 -0.880111153 -0.839530224 #>  [24,]  0.413784668  0.46026428 -0.7900837143 -0.752909893  0.566323306 #>  [25,] -0.602096403  0.65584660  0.1283723176  0.143186367 -0.210202972 #>  [26,]  0.337742887  0.63799442 -0.6576864566  0.801054291  0.910707770 #>  [27,] -0.928091263 -0.97434778 -0.7460131734  0.428111113 -0.793234853 #>  [28,] -0.681183764 -0.29424570  0.5050693215  0.288671779  0.118180127 #>  [29,] -0.115176579  0.71645249 -0.1663641944  0.279783394  0.156325586 #>  [30,]  0.282614299 -0.81338526  0.5752487299  0.166971342  0.840722257 #>  [31,]  0.078516572  0.73162005  0.5022568018 -0.087077636 -0.532102093 #>  [32,]  0.737753501  0.75097332 -0.0550200767  0.328811169 -0.863685527 #>  [33,]  0.026588916  0.70429024  0.2472229842  0.478561764 -0.828534472 #>  [34,]  0.921551247 -0.97623336 -0.7415912538 -0.962192543  0.181949215 #>  [35,]  0.757840933 -0.63444633 -0.4002518887  0.130089264  0.533751161 #>  [36,]  0.855900755 -0.95120724 -0.2682217802 -0.756051903 -0.804447685 #>  [37,] -0.018656544 -0.64022815 -0.0005764146 -0.671306848  0.334156672 #>  [38,] -0.472052352  0.32711565  0.2845895444 -0.445791745  0.812289922 #>  [39,]  0.035574924  0.17681930 -0.4948922293 -0.480433498  0.783352986 #>  [40,]  0.538858874 -0.53868263  0.7678324580  0.736216504  0.484781040 #>  [41,]  0.722341719  0.74418892  0.5621087723  0.202809362  0.828461253 #>  [42,] -0.478820655 -0.27482160  0.8639999554 -0.306615112  0.054706520 #>  [43,]  0.189254971  0.71908432  0.2903315765  0.386611429 -0.459342070 #>  [44,] -0.616688946  0.80175352  0.5087602339 -0.769295226 -0.597489552 #>  [45,] -0.134045206 -0.38631186  0.9664437170 -0.312696971  0.405778379 #>  [46,] -0.117482134  0.54177776 -0.7366014593  0.572118578  0.718341673 #>  [47,]  0.553858417  0.52639710 -0.5610575997 -0.932296174 -0.224500587 #>  [48,]  0.202780287  0.52162645  0.7169307084  0.913127259 -0.461393044 #>  [49,] -0.917937334  0.34033062  0.4272754896 -0.985531483  0.005872388 #>  [50,]  0.727165694  0.71430660  0.1681610928 -0.527352449  0.969265754 #>  [51,] -0.954219996 -0.25797261  0.5051706419  0.566572719  0.520567303 #>  [52,] -0.811944278 -0.24381542 -0.6988238399 -0.036882049  0.485017265 #>  [53,]  0.474186624  0.38824798 -0.1042055669  0.021836862  0.848629714 #>  [54,]  0.471457149  0.14666420 -0.5358994529 -0.246213210 -0.792069888 #>  [55,] -0.211824899  0.55877062  0.3903445895  0.160745382  0.708560407 #>  [56,] -0.506493160  0.87739847  0.7081232951 -0.260544408  0.673591227 #>  [57,] -0.811294661 -0.35203192 -0.9356905622  0.765234418  0.689458491 #>  [58,]  0.370939522  0.12956514  0.7158577624  0.734163641  0.966418986 #>  [59,] -0.295346217 -0.44510025 -0.5489232698 -0.027509194  0.145217850 #>  [60,]  0.349495997  0.99452465 -0.5376990535  0.797323869  0.540192627 #>  [61,] -0.383391170  0.06606399 -0.0386093534 -0.292228674 -0.863729524 #>  [62,] -0.614285974  0.51013974  0.1591123408  0.047897939  0.257864938 #>  [63,]  0.870236219  0.48793987  0.4886861658  0.002782632  0.711288119 #>  [64,] -0.847395201 -0.29932441 -0.3804976796  0.049801271 -0.897203964 #>  [65,]  0.711645031  0.89856387  0.2249999903  0.596101913  0.576012792 #>  [66,]  0.714419194 -0.56869427 -0.4530908428  0.642518468 -0.297658500 #>  [67,] -0.152374936 -0.70291513  0.8377477820 -0.038859786 -0.392619197 #>  [68,] -0.455221022 -0.14605298 -0.8931302577  0.393743252 -0.841866529 #>  [69,]  0.311191367  0.15728060  0.0524810073  0.126852167  0.021895273 #>  [70,] -0.130448837 -0.78114515  0.0425432627 -0.016936057 -0.258164578 #>  [71,]  0.068034934 -0.14986805 -0.8859425974 -0.851902092  0.488589565 #>  [72,]  0.324932411  0.48025729  0.1978770699  0.647024796  0.479176424 #>  [73,]  0.215582126 -0.39617940  0.1682095281  0.703320131 -0.792556852 #>  [74,]  0.325687880 -0.75932744  0.8578832275  0.923702744  0.345665088 #>  [75,] -0.589891340 -0.23201723 -0.4112137067 -0.796262446 -0.985005027 #>  [76,] -0.394560944  0.10988378 -0.2042407407  0.164225255  0.259989579 #>  [77,] -0.587297324  0.88810423 -0.6810445623  0.796479017 -0.971496903 #>  [78,]  0.915457691  0.57017300  0.4422038873  0.599533502 -0.247727355 #>  [79,] -0.508325111 -0.73600815  0.1156101311  0.549186619  0.972044798 #>  [80,]  0.234444375 -0.37360046 -0.4274973557 -0.271122887 -0.760147349 #>  [81,]  0.487694048  0.93554837  0.0110969092  0.211223766  0.088013610 #>  [82,] -0.805770338 -0.58640922  0.9691611235 -0.683465274 -0.073875262 #>  [83,]  0.548692295  0.36662013  0.7752588410  0.755969626  0.105958310 #>  [84,] -0.737951796 -0.43753388 -0.0931523861 -0.519065110  0.416493917 #>  [85,] -0.078762360  0.89547628 -0.5719174887 -0.071282308 -0.076691134 #>  [86,] -0.984964395  0.27294845  0.5139587983 -0.706622405  0.466221122 #>  [87,]  0.603845900  0.32098094 -0.3668303569 -0.617296953 -0.848847335 #>  [88,]  0.228955221  0.51992620  0.1868416886  0.260681330  0.074514879 #>  [89,]  0.475486806  0.99332043  0.3056068737 -0.807969129 -0.462570075 #>  [90,]  0.145398589 -0.10797332 -0.8389755585  0.552986187 -0.800995099 #>  [91,] -0.169624841  0.84402241 -0.4013176593 -0.467764446  0.429607801 #>  [92,]  0.737292264 -0.57402570 -0.1702788984 -0.667360458  0.011572008 #>  [93,] -0.960718797 -0.04896125  0.9942990057  0.464593550  0.916459071 #>  [94,] -0.378644150 -0.46071662  0.0048731524 -0.531279893  0.201652104 #>  [95,] -0.214226720 -0.30791200  0.0772316819  0.065359149 -0.775442132 #>  [96,]  0.976102460 -0.55627189  0.3624162427 -0.689753617  0.441618594 #>  [97,]  0.341627233 -0.03476092  0.6471145079  0.335935014  0.386701020 #>  [98,]  0.133853036  0.52179818 -0.8133410304  0.634424517 -0.025132346 #>  [99,] -0.418290100  0.63882636 -0.0676669027 -0.978600293  0.335649102 #> [100,]  0.578694377  0.23329497  0.3936692751 -0.921451509  0.828374065 #>  #> $y #>   [1] 0 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 0 1 0 0 0 1 #>  [38] 1 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 #>  [75] 1 1 0 0 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 #>"},{"path":[]},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"bark 1.0.0","text":"output bark now bark object allow S3 methods replace input arguments y.train x.train use model formula dataframe inputs. replaced argument type two logical variables: selection common_lambdas intuitive. changed running times examples address issue https://CRAN.R-project.org/package=bark led package archived 2015 added registration native routines foreign function calls disabled symbol search src/bark-init.c updated NAMESPACE replaced kernel calculation using .C .Call improve speed src/kernelCalculationCall.cpp R/llike.R added unit tests testthat code coverage reported CI; code coverage badge added README. Unit tests now cover 95% code. added GitHub actions CI checks Windows, MacOSX, Ubuntu added passing Badge README.md GitHub repo. converted help files use roxygen tags deprecated functions sim.Circle, sim.Friedman1, sim.Friedman2, sim.Friedman3 created new versions sim_circle, sim_Friedman1, sim_Friedman2, sim_Friedman3 avoid confusion S3 methods updated CODE_OF_CONDUCT.md, SECURITY.md, CONTRIBUTING.md GitHub repo updates OpenSSF BestPractices Badge (added README.md)","code":""},{"path":"http://merliseclyde.github.io/bark/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"bark 1.0.0","text":"GitHub Issue #1 Added type checks src/kernelCalculationCall.cpp coerce inputs correct type (unit tests testthat/test-llike.R) reported GitHub Issue #3 Addressed error p = 1 subseting resulted output vector due drop dimension. Added unit test testthat/test-bark.R","code":""}]
